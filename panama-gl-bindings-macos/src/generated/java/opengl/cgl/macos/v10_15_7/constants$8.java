// Generated by jextract

package opengl.cgl.macos.v10_15_7;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$8 {

    static final FunctionDescriptor CGLLockContext$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle CGLLockContext$MH = RuntimeHelper.downcallHandle(
        OpenGL_h.LIBRARIES, "CGLLockContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$8.CGLLockContext$FUNC, false
    );
    static final FunctionDescriptor CGLUnlockContext$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle CGLUnlockContext$MH = RuntimeHelper.downcallHandle(
        OpenGL_h.LIBRARIES, "CGLUnlockContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$8.CGLUnlockContext$FUNC, false
    );
    static final FunctionDescriptor CGLGetVersion$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CGLGetVersion$MH = RuntimeHelper.downcallHandle(
        OpenGL_h.LIBRARIES, "CGLGetVersion",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$8.CGLGetVersion$FUNC, false
    );
    static final FunctionDescriptor CGLErrorString$FUNC = FunctionDescriptor.of(C_POINTER,
        C_INT
    );
    static final MethodHandle CGLErrorString$MH = RuntimeHelper.downcallHandle(
        OpenGL_h.LIBRARIES, "CGLErrorString",
        "(I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$8.CGLErrorString$FUNC, false
    );
    static final MemorySegment __DARWIN_SUF_64_BIT_INO_T$SEGMENT = CLinker.toCString("$INODE64", ResourceScope.newImplicitScope());
    static final MemorySegment __DARWIN_SUF_1050$SEGMENT = CLinker.toCString("$1050", ResourceScope.newImplicitScope());
}


