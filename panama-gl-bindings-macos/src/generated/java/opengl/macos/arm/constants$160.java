// Generated by jextract

package opengl.macos.arm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$160 {

    static final FunctionDescriptor glIsShader$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glIsShader$MH = RuntimeHelper.downcallHandle(
        "glIsShader",
        constants$160.glIsShader$FUNC
    );
    static final FunctionDescriptor glIsProgram$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glIsProgram$MH = RuntimeHelper.downcallHandle(
        "glIsProgram",
        constants$160.glIsProgram$FUNC
    );
    static final FunctionDescriptor glGetShaderiv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetShaderiv$MH = RuntimeHelper.downcallHandle(
        "glGetShaderiv",
        constants$160.glGetShaderiv$FUNC
    );
    static final FunctionDescriptor glGetProgramiv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetProgramiv$MH = RuntimeHelper.downcallHandle(
        "glGetProgramiv",
        constants$160.glGetProgramiv$FUNC
    );
    static final FunctionDescriptor glGetAttachedShaders$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetAttachedShaders$MH = RuntimeHelper.downcallHandle(
        "glGetAttachedShaders",
        constants$160.glGetAttachedShaders$FUNC
    );
    static final FunctionDescriptor glGetShaderInfoLog$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetShaderInfoLog$MH = RuntimeHelper.downcallHandle(
        "glGetShaderInfoLog",
        constants$160.glGetShaderInfoLog$FUNC
    );
}


