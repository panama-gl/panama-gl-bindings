// Generated by jextract

package opengl.macos.v10_15_7;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$113 {

    static final FunctionDescriptor glRectiv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glRectiv$MH = RuntimeHelper.downcallHandle(
        "glRectiv",
        constants$113.glRectiv$FUNC
    );
    static final FunctionDescriptor glRects$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_SHORT$LAYOUT
    );
    static final MethodHandle glRects$MH = RuntimeHelper.downcallHandle(
        "glRects",
        constants$113.glRects$FUNC
    );
    static final FunctionDescriptor glRectsv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glRectsv$MH = RuntimeHelper.downcallHandle(
        "glRectsv",
        constants$113.glRectsv$FUNC
    );
    static final FunctionDescriptor glRenderMode$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glRenderMode$MH = RuntimeHelper.downcallHandle(
        "glRenderMode",
        constants$113.glRenderMode$FUNC
    );
    static final FunctionDescriptor glResetHistogram$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glResetHistogram$MH = RuntimeHelper.downcallHandle(
        "glResetHistogram",
        constants$113.glResetHistogram$FUNC
    );
    static final FunctionDescriptor glResetMinmax$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glResetMinmax$MH = RuntimeHelper.downcallHandle(
        "glResetMinmax",
        constants$113.glResetMinmax$FUNC
    );
}


