// Generated by jextract

package opengl.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLPRESENTFRAMEDUALFILLNVPROC {

    void apply(int video_slot, long minPresentTime, int beginPresentTimeId, int presentDurationId, int type, int target0, int fill0, int target1, int fill1, int target2, int fill2, int target3, int fill3);
    static MemorySegment allocate(PFNGLPRESENTFRAMEDUALFILLNVPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLPRESENTFRAMEDUALFILLNVPROC.class, fi, constants$809.PFNGLPRESENTFRAMEDUALFILLNVPROC$FUNC, session);
    }
    static PFNGLPRESENTFRAMEDUALFILLNVPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _video_slot, long _minPresentTime, int _beginPresentTimeId, int _presentDurationId, int _type, int _target0, int _fill0, int _target1, int _fill1, int _target2, int _fill2, int _target3, int _fill3) -> {
            try {
                constants$809.PFNGLPRESENTFRAMEDUALFILLNVPROC$MH.invokeExact((Addressable)symbol, _video_slot, _minPresentTime, _beginPresentTimeId, _presentDurationId, _type, _target0, _fill0, _target1, _fill1, _target2, _fill2, _target3, _fill3);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


