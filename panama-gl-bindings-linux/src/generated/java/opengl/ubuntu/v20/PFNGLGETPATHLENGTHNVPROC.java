// Generated by jextract

package opengl.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLGETPATHLENGTHNVPROC {

    float apply(int path, int startSegment, int numSegments);
    static MemorySegment allocate(PFNGLGETPATHLENGTHNVPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLGETPATHLENGTHNVPROC.class, fi, constants$799.PFNGLGETPATHLENGTHNVPROC$FUNC, session);
    }
    static PFNGLGETPATHLENGTHNVPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _path, int _startSegment, int _numSegments) -> {
            try {
                return (float)constants$799.PFNGLGETPATHLENGTHNVPROC$MH.invokeExact((Addressable)symbol, _path, _startSegment, _numSegments);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


