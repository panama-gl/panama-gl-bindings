// Generated by jextract

package opengl.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLSECONDARYCOLOR3USPROC {

    void apply(short red, short green, short blue);
    static MemorySegment allocate(PFNGLSECONDARYCOLOR3USPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLSECONDARYCOLOR3USPROC.class, fi, constants$100.PFNGLSECONDARYCOLOR3USPROC$FUNC, session);
    }
    static PFNGLSECONDARYCOLOR3USPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (short _red, short _green, short _blue) -> {
            try {
                constants$100.PFNGLSECONDARYCOLOR3USPROC$MH.invokeExact((Addressable)symbol, _red, _green, _blue);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


