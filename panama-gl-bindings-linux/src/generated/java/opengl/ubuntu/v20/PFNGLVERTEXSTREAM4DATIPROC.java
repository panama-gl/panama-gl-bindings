// Generated by jextract

package opengl.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLVERTEXSTREAM4DATIPROC {

    void apply(int stream, double x, double y, double z, double w);
    static MemorySegment allocate(PFNGLVERTEXSTREAM4DATIPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLVERTEXSTREAM4DATIPROC.class, fi, constants$510.PFNGLVERTEXSTREAM4DATIPROC$FUNC, session);
    }
    static PFNGLVERTEXSTREAM4DATIPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _stream, double _x, double _y, double _z, double _w) -> {
            try {
                constants$510.PFNGLVERTEXSTREAM4DATIPROC$MH.invokeExact((Addressable)symbol, _stream, _x, _y, _z, _w);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


