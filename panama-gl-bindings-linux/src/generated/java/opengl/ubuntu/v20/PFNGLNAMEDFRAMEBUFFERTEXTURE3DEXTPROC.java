// Generated by jextract

package opengl.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC {

    void apply(int framebuffer, int attachment, int textarget, int texture, int level, int zoffset);
    static MemorySegment allocate(PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC.class, fi, constants$596.PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC$FUNC, session);
    }
    static PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _framebuffer, int _attachment, int _textarget, int _texture, int _level, int _zoffset) -> {
            try {
                constants$596.PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC$MH.invokeExact((Addressable)symbol, _framebuffer, _attachment, _textarget, _texture, _level, _zoffset);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


