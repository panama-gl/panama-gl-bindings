// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLVERTEX4XOESPROC {

    void apply(int x, int y, int z);
    static MemorySegment allocate(PFNGLVERTEX4XOESPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLVERTEX4XOESPROC.class, fi, constants$532.PFNGLVERTEX4XOESPROC$FUNC, session);
    }
    static PFNGLVERTEX4XOESPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _x, int _y, int _z) -> {
            try {
                constants$532.PFNGLVERTEX4XOESPROC$MH.invokeExact((Addressable)symbol, _x, _y, _z);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


