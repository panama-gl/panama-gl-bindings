// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$92 {

    static final FunctionDescriptor glFinish$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glFinish$MH = RuntimeHelper.downcallHandle(
        "glFinish",
        constants$92.glFinish$FUNC
    );
    static final FunctionDescriptor glFlush$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glFlush$MH = RuntimeHelper.downcallHandle(
        "glFlush",
        constants$92.glFlush$FUNC
    );
    static final FunctionDescriptor glHint$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glHint$MH = RuntimeHelper.downcallHandle(
        "glHint",
        constants$92.glHint$FUNC
    );
    static final FunctionDescriptor glClearDepth$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle glClearDepth$MH = RuntimeHelper.downcallHandle(
        "glClearDepth",
        constants$92.glClearDepth$FUNC
    );
    static final FunctionDescriptor glDepthFunc$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glDepthFunc$MH = RuntimeHelper.downcallHandle(
        "glDepthFunc",
        constants$92.glDepthFunc$FUNC
    );
    static final FunctionDescriptor glDepthMask$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_CHAR$LAYOUT
    );
    static final MethodHandle glDepthMask$MH = RuntimeHelper.downcallHandle(
        "glDepthMask",
        constants$92.glDepthMask$FUNC
    );
}


