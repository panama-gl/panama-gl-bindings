// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLXCHANNELRECTSYNCSGIXPROC {

    int apply(java.lang.foreign.MemoryAddress display, int screen, int channel, int synctype);
    static MemorySegment allocate(PFNGLXCHANNELRECTSYNCSGIXPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLXCHANNELRECTSYNCSGIXPROC.class, fi, constants$1057.PFNGLXCHANNELRECTSYNCSGIXPROC$FUNC, session);
    }
    static PFNGLXCHANNELRECTSYNCSGIXPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _display, int _screen, int _channel, int _synctype) -> {
            try {
                return (int)constants$1057.PFNGLXCHANNELRECTSYNCSGIXPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_display, _screen, _channel, _synctype);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


