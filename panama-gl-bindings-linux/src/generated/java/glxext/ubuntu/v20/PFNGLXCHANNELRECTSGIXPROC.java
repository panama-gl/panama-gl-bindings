// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLXCHANNELRECTSGIXPROC {

    int apply(java.lang.foreign.MemoryAddress display, int screen, int channel, int x, int y, int w, int h);
    static MemorySegment allocate(PFNGLXCHANNELRECTSGIXPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLXCHANNELRECTSGIXPROC.class, fi, constants$1056.PFNGLXCHANNELRECTSGIXPROC$FUNC, session);
    }
    static PFNGLXCHANNELRECTSGIXPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _display, int _screen, int _channel, int _x, int _y, int _w, int _h) -> {
            try {
                return (int)constants$1056.PFNGLXCHANNELRECTSGIXPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_display, _screen, _channel, _x, _y, _w, _h);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


