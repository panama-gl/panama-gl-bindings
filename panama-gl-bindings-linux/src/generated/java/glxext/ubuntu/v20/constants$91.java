// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$91 {

    static final FunctionDescriptor glPopAttrib$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glPopAttrib$MH = RuntimeHelper.downcallHandle(
        "glPopAttrib",
        constants$91.glPopAttrib$FUNC
    );
    static final FunctionDescriptor glPushClientAttrib$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glPushClientAttrib$MH = RuntimeHelper.downcallHandle(
        "glPushClientAttrib",
        constants$91.glPushClientAttrib$FUNC
    );
    static final FunctionDescriptor glPopClientAttrib$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glPopClientAttrib$MH = RuntimeHelper.downcallHandle(
        "glPopClientAttrib",
        constants$91.glPopClientAttrib$FUNC
    );
    static final FunctionDescriptor glRenderMode$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glRenderMode$MH = RuntimeHelper.downcallHandle(
        "glRenderMode",
        constants$91.glRenderMode$FUNC
    );
    static final FunctionDescriptor glGetError$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle glGetError$MH = RuntimeHelper.downcallHandle(
        "glGetError",
        constants$91.glGetError$FUNC
    );
    static final FunctionDescriptor glGetString$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glGetString$MH = RuntimeHelper.downcallHandle(
        "glGetString",
        constants$91.glGetString$FUNC
    );
}


