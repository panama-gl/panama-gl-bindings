// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLXQUERYCHANNELDELTASSGIXPROC {

    int apply(java.lang.foreign.MemoryAddress display, int screen, int channel, java.lang.foreign.MemoryAddress x, java.lang.foreign.MemoryAddress y, java.lang.foreign.MemoryAddress w, java.lang.foreign.MemoryAddress h);
    static MemorySegment allocate(PFNGLXQUERYCHANNELDELTASSGIXPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLXQUERYCHANNELDELTASSGIXPROC.class, fi, constants$1056.PFNGLXQUERYCHANNELDELTASSGIXPROC$FUNC, session);
    }
    static PFNGLXQUERYCHANNELDELTASSGIXPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _display, int _screen, int _channel, java.lang.foreign.MemoryAddress _x, java.lang.foreign.MemoryAddress _y, java.lang.foreign.MemoryAddress _w, java.lang.foreign.MemoryAddress _h) -> {
            try {
                return (int)constants$1057.PFNGLXQUERYCHANNELDELTASSGIXPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_display, _screen, _channel, (java.lang.foreign.Addressable)_x, (java.lang.foreign.Addressable)_y, (java.lang.foreign.Addressable)_w, (java.lang.foreign.Addressable)_h);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


