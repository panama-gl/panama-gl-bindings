// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLXQUERYRENDERERSTRINGMESAPROC {

    java.lang.foreign.Addressable apply(java.lang.foreign.MemoryAddress dpy, int screen, int renderer, int attribute);
    static MemorySegment allocate(PFNGLXQUERYRENDERERSTRINGMESAPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLXQUERYRENDERERSTRINGMESAPROC.class, fi, constants$1036.PFNGLXQUERYRENDERERSTRINGMESAPROC$FUNC, session);
    }
    static PFNGLXQUERYRENDERERSTRINGMESAPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _dpy, int _screen, int _renderer, int _attribute) -> {
            try {
                return (java.lang.foreign.Addressable)(java.lang.foreign.MemoryAddress)constants$1036.PFNGLXQUERYRENDERERSTRINGMESAPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_dpy, _screen, _renderer, _attribute);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


