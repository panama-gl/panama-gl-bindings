// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1017 {

    static final FunctionDescriptor glXGetConfig$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glXGetConfig$MH = RuntimeHelper.downcallHandle(
        "glXGetConfig",
        constants$1017.glXGetConfig$FUNC
    );
    static final FunctionDescriptor glXGetCurrentContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle glXGetCurrentContext$MH = RuntimeHelper.downcallHandle(
        "glXGetCurrentContext",
        constants$1017.glXGetCurrentContext$FUNC
    );
    static final FunctionDescriptor glXGetCurrentDrawable$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle glXGetCurrentDrawable$MH = RuntimeHelper.downcallHandle(
        "glXGetCurrentDrawable",
        constants$1017.glXGetCurrentDrawable$FUNC
    );
    static final FunctionDescriptor glXWaitGL$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glXWaitGL$MH = RuntimeHelper.downcallHandle(
        "glXWaitGL",
        constants$1017.glXWaitGL$FUNC
    );
    static final FunctionDescriptor glXWaitX$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glXWaitX$MH = RuntimeHelper.downcallHandle(
        "glXWaitX",
        constants$1017.glXWaitX$FUNC
    );
    static final FunctionDescriptor glXUseXFont$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glXUseXFont$MH = RuntimeHelper.downcallHandle(
        "glXUseXFont",
        constants$1017.glXUseXFont$FUNC
    );
}


