// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLXCREATECONTEXTATTRIBSARBPROC {

    java.lang.foreign.Addressable apply(java.lang.foreign.MemoryAddress dpy, java.lang.foreign.MemoryAddress config, java.lang.foreign.MemoryAddress share_context, int direct, java.lang.foreign.MemoryAddress attrib_list);
    static MemorySegment allocate(PFNGLXCREATECONTEXTATTRIBSARBPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLXCREATECONTEXTATTRIBSARBPROC.class, fi, constants$1028.PFNGLXCREATECONTEXTATTRIBSARBPROC$FUNC, session);
    }
    static PFNGLXCREATECONTEXTATTRIBSARBPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _dpy, java.lang.foreign.MemoryAddress _config, java.lang.foreign.MemoryAddress _share_context, int _direct, java.lang.foreign.MemoryAddress _attrib_list) -> {
            try {
                return (java.lang.foreign.Addressable)(java.lang.foreign.MemoryAddress)constants$1028.PFNGLXCREATECONTEXTATTRIBSARBPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_dpy, (java.lang.foreign.Addressable)_config, (java.lang.foreign.Addressable)_share_context, _direct, (java.lang.foreign.Addressable)_attrib_list);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


