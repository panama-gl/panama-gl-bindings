// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC {

    int apply(java.lang.foreign.MemoryAddress dpy, long device, int attribute, java.lang.foreign.MemoryAddress value);
    static MemorySegment allocate(PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC.class, fi, constants$1043.PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC$FUNC, session);
    }
    static PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _dpy, long _device, int _attribute, java.lang.foreign.MemoryAddress _value) -> {
            try {
                return (int)constants$1043.PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_dpy, _device, _attribute, (java.lang.foreign.Addressable)_value);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


