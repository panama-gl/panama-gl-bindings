// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$159 {

    static final FunctionDescriptor PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC$MH = RuntimeHelper.downcallHandle(
        constants$159.PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC$FUNC
    );
    static final FunctionDescriptor PFNGLGETCOMPRESSEDTEXIMAGEPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFNGLGETCOMPRESSEDTEXIMAGEPROC$MH = RuntimeHelper.downcallHandle(
        constants$159.PFNGLGETCOMPRESSEDTEXIMAGEPROC$FUNC
    );
    static final FunctionDescriptor glActiveTextureARB$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glActiveTextureARB$MH = RuntimeHelper.downcallHandle(
        "glActiveTextureARB",
        constants$159.glActiveTextureARB$FUNC
    );
    static final FunctionDescriptor glClientActiveTextureARB$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glClientActiveTextureARB$MH = RuntimeHelper.downcallHandle(
        "glClientActiveTextureARB",
        constants$159.glClientActiveTextureARB$FUNC
    );
}


