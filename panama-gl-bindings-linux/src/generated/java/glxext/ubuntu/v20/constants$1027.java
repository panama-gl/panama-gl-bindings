// Generated by jextract

package glxext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1027 {

    static final FunctionDescriptor PFNGLXSELECTEVENTPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle PFNGLXSELECTEVENTPROC$MH = RuntimeHelper.downcallHandle(
        constants$1027.PFNGLXSELECTEVENTPROC$FUNC
    );
    static final FunctionDescriptor PFNGLXGETSELECTEDEVENTPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFNGLXGETSELECTEDEVENTPROC$MH = RuntimeHelper.downcallHandle(
        constants$1027.PFNGLXGETSELECTEDEVENTPROC$FUNC
    );
    static final FunctionDescriptor __GLXextFuncPtr$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle __GLXextFuncPtr$MH = RuntimeHelper.downcallHandle(
        constants$1027.__GLXextFuncPtr$FUNC
    );
    static final FunctionDescriptor glXGetProcAddressARB$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glXGetProcAddressARB$MH = RuntimeHelper.downcallHandle(
        "glXGetProcAddressARB",
        constants$1027.glXGetProcAddressARB$FUNC
    );
}


