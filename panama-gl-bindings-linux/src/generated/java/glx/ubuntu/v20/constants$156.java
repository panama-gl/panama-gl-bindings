// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$156 {

    static final FunctionDescriptor glLoadTransposeMatrixf$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glLoadTransposeMatrixf$MH = RuntimeHelper.downcallHandle(
        "glLoadTransposeMatrixf",
        constants$156.glLoadTransposeMatrixf$FUNC
    );
    static final FunctionDescriptor glMultTransposeMatrixd$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glMultTransposeMatrixd$MH = RuntimeHelper.downcallHandle(
        "glMultTransposeMatrixd",
        constants$156.glMultTransposeMatrixd$FUNC
    );
    static final FunctionDescriptor glMultTransposeMatrixf$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glMultTransposeMatrixf$MH = RuntimeHelper.downcallHandle(
        "glMultTransposeMatrixf",
        constants$156.glMultTransposeMatrixf$FUNC
    );
    static final FunctionDescriptor glSampleCoverage$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_CHAR$LAYOUT
    );
    static final MethodHandle glSampleCoverage$MH = RuntimeHelper.downcallHandle(
        "glSampleCoverage",
        constants$156.glSampleCoverage$FUNC
    );
    static final FunctionDescriptor PFNGLACTIVETEXTUREPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle PFNGLACTIVETEXTUREPROC$MH = RuntimeHelper.downcallHandle(
        constants$156.PFNGLACTIVETEXTUREPROC$FUNC
    );
}


