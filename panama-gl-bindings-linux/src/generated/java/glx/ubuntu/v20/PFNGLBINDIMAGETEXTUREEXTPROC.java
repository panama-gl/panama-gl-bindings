// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLBINDIMAGETEXTUREEXTPROC {

    void apply(int index, int texture, int level, byte layered, int layer, int access, int format);
    static MemorySegment allocate(PFNGLBINDIMAGETEXTUREEXTPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLBINDIMAGETEXTUREEXTPROC.class, fi, constants$750.PFNGLBINDIMAGETEXTUREEXTPROC$FUNC, session);
    }
    static PFNGLBINDIMAGETEXTUREEXTPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _index, int _texture, int _level, byte _layered, int _layer, int _access, int _format) -> {
            try {
                constants$750.PFNGLBINDIMAGETEXTUREEXTPROC$MH.invokeExact((Addressable)symbol, _index, _texture, _level, _layered, _layer, _access, _format);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


