// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC {

    void apply(int xfb, int index, int buffer, long offset, long size);
    static MemorySegment allocate(PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC.class, fi, constants$356.PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC$FUNC, session);
    }
    static PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _xfb, int _index, int _buffer, long _offset, long _size) -> {
            try {
                constants$356.PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC$MH.invokeExact((Addressable)symbol, _xfb, _index, _buffer, _offset, _size);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


