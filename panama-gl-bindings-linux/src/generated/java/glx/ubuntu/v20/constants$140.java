// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$140 {

    static final FunctionDescriptor glFogiv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glFogiv$MH = RuntimeHelper.downcallHandle(
        "glFogiv",
        constants$140.glFogiv$FUNC
    );
    static final FunctionDescriptor glFeedbackBuffer$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glFeedbackBuffer$MH = RuntimeHelper.downcallHandle(
        "glFeedbackBuffer",
        constants$140.glFeedbackBuffer$FUNC
    );
    static final FunctionDescriptor glPassThrough$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle glPassThrough$MH = RuntimeHelper.downcallHandle(
        "glPassThrough",
        constants$140.glPassThrough$FUNC
    );
    static final FunctionDescriptor glSelectBuffer$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glSelectBuffer$MH = RuntimeHelper.downcallHandle(
        "glSelectBuffer",
        constants$140.glSelectBuffer$FUNC
    );
    static final FunctionDescriptor glInitNames$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glInitNames$MH = RuntimeHelper.downcallHandle(
        "glInitNames",
        constants$140.glInitNames$FUNC
    );
    static final FunctionDescriptor glLoadName$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glLoadName$MH = RuntimeHelper.downcallHandle(
        "glLoadName",
        constants$140.glLoadName$FUNC
    );
}


