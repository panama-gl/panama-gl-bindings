// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC {

    void apply(int texunit, int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
    static MemorySegment allocate(PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC.class, fi, constants$643.PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC$FUNC, session);
    }
    static PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _texunit, int _target, int _level, int _xoffset, int _yoffset, int _x, int _y, int _width, int _height) -> {
            try {
                constants$643.PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC$MH.invokeExact((Addressable)symbol, _texunit, _target, _level, _xoffset, _yoffset, _x, _y, _width, _height);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


