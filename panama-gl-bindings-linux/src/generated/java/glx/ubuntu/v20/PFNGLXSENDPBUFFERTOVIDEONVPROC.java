// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLXSENDPBUFFERTOVIDEONVPROC {

    int apply(java.lang.foreign.MemoryAddress dpy, long pbuf, int iBufferType, java.lang.foreign.MemoryAddress pulCounterPbuffer, byte bBlock);
    static MemorySegment allocate(PFNGLXSENDPBUFFERTOVIDEONVPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLXSENDPBUFFERTOVIDEONVPROC.class, fi, constants$1045.PFNGLXSENDPBUFFERTOVIDEONVPROC$FUNC, session);
    }
    static PFNGLXSENDPBUFFERTOVIDEONVPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _dpy, long _pbuf, int _iBufferType, java.lang.foreign.MemoryAddress _pulCounterPbuffer, byte _bBlock) -> {
            try {
                return (int)constants$1045.PFNGLXSENDPBUFFERTOVIDEONVPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_dpy, _pbuf, _iBufferType, (java.lang.foreign.Addressable)_pulCounterPbuffer, _bBlock);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


