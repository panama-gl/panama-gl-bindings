// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLXBINDVIDEOIMAGENVPROC {

    int apply(java.lang.foreign.MemoryAddress dpy, int VideoDevice, long pbuf, int iVideoBuffer);
    static MemorySegment allocate(PFNGLXBINDVIDEOIMAGENVPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLXBINDVIDEOIMAGENVPROC.class, fi, constants$1044.PFNGLXBINDVIDEOIMAGENVPROC$FUNC, session);
    }
    static PFNGLXBINDVIDEOIMAGENVPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _dpy, int _VideoDevice, long _pbuf, int _iVideoBuffer) -> {
            try {
                return (int)constants$1044.PFNGLXBINDVIDEOIMAGENVPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_dpy, _VideoDevice, _pbuf, _iVideoBuffer);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


