// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$97 {

    static final FunctionDescriptor glEndList$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glEndList$MH = RuntimeHelper.downcallHandle(
        "glEndList",
        constants$97.glEndList$FUNC
    );
    static final FunctionDescriptor glCallList$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glCallList$MH = RuntimeHelper.downcallHandle(
        "glCallList",
        constants$97.glCallList$FUNC
    );
    static final FunctionDescriptor glCallLists$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glCallLists$MH = RuntimeHelper.downcallHandle(
        "glCallLists",
        constants$97.glCallLists$FUNC
    );
    static final FunctionDescriptor glListBase$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glListBase$MH = RuntimeHelper.downcallHandle(
        "glListBase",
        constants$97.glListBase$FUNC
    );
    static final FunctionDescriptor glBegin$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glBegin$MH = RuntimeHelper.downcallHandle(
        "glBegin",
        constants$97.glBegin$FUNC
    );
    static final FunctionDescriptor glEnd$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glEnd$MH = RuntimeHelper.downcallHandle(
        "glEnd",
        constants$97.glEnd$FUNC
    );
}


