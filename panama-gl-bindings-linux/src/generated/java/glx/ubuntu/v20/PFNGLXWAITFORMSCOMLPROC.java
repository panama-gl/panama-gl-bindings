// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLXWAITFORMSCOMLPROC {

    int apply(java.lang.foreign.MemoryAddress dpy, long drawable, long target_msc, long divisor, long remainder, java.lang.foreign.MemoryAddress ust, java.lang.foreign.MemoryAddress msc, java.lang.foreign.MemoryAddress sbc);
    static MemorySegment allocate(PFNGLXWAITFORMSCOMLPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLXWAITFORMSCOMLPROC.class, fi, constants$1047.PFNGLXWAITFORMSCOMLPROC$FUNC, session);
    }
    static PFNGLXWAITFORMSCOMLPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _dpy, long _drawable, long _target_msc, long _divisor, long _remainder, java.lang.foreign.MemoryAddress _ust, java.lang.foreign.MemoryAddress _msc, java.lang.foreign.MemoryAddress _sbc) -> {
            try {
                return (int)constants$1048.PFNGLXWAITFORMSCOMLPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_dpy, _drawable, _target_msc, _divisor, _remainder, (java.lang.foreign.Addressable)_ust, (java.lang.foreign.Addressable)_msc, (java.lang.foreign.Addressable)_sbc);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


