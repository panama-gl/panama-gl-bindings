// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1015 {

    static final FunctionDescriptor PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC$MH = RuntimeHelper.downcallHandle(
        constants$1015.PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC$FUNC
    );
    static final FunctionDescriptor glXChooseVisual$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glXChooseVisual$MH = RuntimeHelper.downcallHandle(
        "glXChooseVisual",
        constants$1015.glXChooseVisual$FUNC
    );
    static final FunctionDescriptor glXCreateContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glXCreateContext$MH = RuntimeHelper.downcallHandle(
        "glXCreateContext",
        constants$1015.glXCreateContext$FUNC
    );
    static final FunctionDescriptor glXDestroyContext$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glXDestroyContext$MH = RuntimeHelper.downcallHandle(
        "glXDestroyContext",
        constants$1015.glXDestroyContext$FUNC
    );
    static final FunctionDescriptor glXMakeCurrent$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glXMakeCurrent$MH = RuntimeHelper.downcallHandle(
        "glXMakeCurrent",
        constants$1015.glXMakeCurrent$FUNC
    );
    static final FunctionDescriptor glXCopyContext$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle glXCopyContext$MH = RuntimeHelper.downcallHandle(
        "glXCopyContext",
        constants$1015.glXCopyContext$FUNC
    );
}


