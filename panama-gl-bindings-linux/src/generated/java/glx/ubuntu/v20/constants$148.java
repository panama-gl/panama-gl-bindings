// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$148 {

    static final FunctionDescriptor glCopyConvolutionFilter2D$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glCopyConvolutionFilter2D$MH = RuntimeHelper.downcallHandle(
        "glCopyConvolutionFilter2D",
        constants$148.glCopyConvolutionFilter2D$FUNC
    );
    static final FunctionDescriptor glGetConvolutionFilter$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetConvolutionFilter$MH = RuntimeHelper.downcallHandle(
        "glGetConvolutionFilter",
        constants$148.glGetConvolutionFilter$FUNC
    );
    static final FunctionDescriptor glGetConvolutionParameterfv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetConvolutionParameterfv$MH = RuntimeHelper.downcallHandle(
        "glGetConvolutionParameterfv",
        constants$148.glGetConvolutionParameterfv$FUNC
    );
    static final FunctionDescriptor glGetConvolutionParameteriv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetConvolutionParameteriv$MH = RuntimeHelper.downcallHandle(
        "glGetConvolutionParameteriv",
        constants$148.glGetConvolutionParameteriv$FUNC
    );
    static final FunctionDescriptor glSeparableFilter2D$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glSeparableFilter2D$MH = RuntimeHelper.downcallHandle(
        "glSeparableFilter2D",
        constants$148.glSeparableFilter2D$FUNC
    );
    static final FunctionDescriptor glGetSeparableFilter$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetSeparableFilter$MH = RuntimeHelper.downcallHandle(
        "glGetSeparableFilter",
        constants$148.glGetSeparableFilter$FUNC
    );
}


