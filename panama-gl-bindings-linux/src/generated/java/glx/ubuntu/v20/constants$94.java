// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$94 {

    static final FunctionDescriptor glViewport$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glViewport$MH = RuntimeHelper.downcallHandle(
        "glViewport",
        constants$94.glViewport$FUNC
    );
    static final FunctionDescriptor glPushMatrix$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glPushMatrix$MH = RuntimeHelper.downcallHandle(
        "glPushMatrix",
        constants$94.glPushMatrix$FUNC
    );
    static final FunctionDescriptor glPopMatrix$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glPopMatrix$MH = RuntimeHelper.downcallHandle(
        "glPopMatrix",
        constants$94.glPopMatrix$FUNC
    );
    static final FunctionDescriptor glLoadIdentity$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glLoadIdentity$MH = RuntimeHelper.downcallHandle(
        "glLoadIdentity",
        constants$94.glLoadIdentity$FUNC
    );
    static final FunctionDescriptor glLoadMatrixd$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glLoadMatrixd$MH = RuntimeHelper.downcallHandle(
        "glLoadMatrixd",
        constants$94.glLoadMatrixd$FUNC
    );
    static final FunctionDescriptor glLoadMatrixf$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glLoadMatrixf$MH = RuntimeHelper.downcallHandle(
        "glLoadMatrixf",
        constants$94.glLoadMatrixf$FUNC
    );
}


