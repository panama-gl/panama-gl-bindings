// Generated by jextract

package glx.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLPUSHDEBUGGROUPPROC {

    void apply(int source, int id, int length, java.lang.foreign.MemoryAddress message);
    static MemorySegment allocate(PFNGLPUSHDEBUGGROUPPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLPUSHDEBUGGROUPPROC.class, fi, constants$350.PFNGLPUSHDEBUGGROUPPROC$FUNC, session);
    }
    static PFNGLPUSHDEBUGGROUPPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _source, int _id, int _length, java.lang.foreign.MemoryAddress _message) -> {
            try {
                constants$350.PFNGLPUSHDEBUGGROUPPROC$MH.invokeExact((Addressable)symbol, _source, _id, _length, (java.lang.foreign.Addressable)_message);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


