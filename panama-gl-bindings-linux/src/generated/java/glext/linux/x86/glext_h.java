// Generated by jextract

package glext.linux.x86;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class glext_h extends glext_h_1 {

    glext_h() {
        // Should not be called directly
    }
    private static final long INTMAX_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INTMAX_MIN -9223372036854775808
     * }
     */
    public static long INTMAX_MIN() {
        return INTMAX_MIN;
    }
    private static final long INTMAX_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INTMAX_MAX 9223372036854775807
     * }
     */
    public static long INTMAX_MAX() {
        return INTMAX_MAX;
    }
    private static final long UINTMAX_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINTMAX_MAX -1
     * }
     */
    public static long UINTMAX_MAX() {
        return UINTMAX_MAX;
    }
    private static final long PTRDIFF_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define PTRDIFF_MIN -9223372036854775808
     * }
     */
    public static long PTRDIFF_MIN() {
        return PTRDIFF_MIN;
    }
    private static final long PTRDIFF_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define PTRDIFF_MAX 9223372036854775807
     * }
     */
    public static long PTRDIFF_MAX() {
        return PTRDIFF_MAX;
    }
    private static final int SIG_ATOMIC_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define SIG_ATOMIC_MIN -2147483648
     * }
     */
    public static int SIG_ATOMIC_MIN() {
        return SIG_ATOMIC_MIN;
    }
    private static final int SIG_ATOMIC_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define SIG_ATOMIC_MAX 2147483647
     * }
     */
    public static int SIG_ATOMIC_MAX() {
        return SIG_ATOMIC_MAX;
    }
    private static final long SIZE_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define SIZE_MAX -1
     * }
     */
    public static long SIZE_MAX() {
        return SIZE_MAX;
    }
    private static final int WCHAR_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define WCHAR_MIN -2147483648
     * }
     */
    public static int WCHAR_MIN() {
        return WCHAR_MIN;
    }
    private static final int WCHAR_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define WCHAR_MAX 2147483647
     * }
     */
    public static int WCHAR_MAX() {
        return WCHAR_MAX;
    }
    private static final int WINT_MIN = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WINT_MIN 0
     * }
     */
    public static int WINT_MIN() {
        return WINT_MIN;
    }
    private static final int WINT_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define WINT_MAX 4294967295
     * }
     */
    public static int WINT_MAX() {
        return WINT_MAX;
    }
    private static final int GL_INVALID_INDEX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define GL_INVALID_INDEX 4294967295
     * }
     */
    public static int GL_INVALID_INDEX() {
        return GL_INVALID_INDEX;
    }
    private static final long GL_TIMEOUT_IGNORED = -1L;
    /**
     * {@snippet lang=c :
     * #define GL_TIMEOUT_IGNORED -1
     * }
     */
    public static long GL_TIMEOUT_IGNORED() {
        return GL_TIMEOUT_IGNORED;
    }
    private static final int GL_ALL_SHADER_BITS = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define GL_ALL_SHADER_BITS 4294967295
     * }
     */
    public static int GL_ALL_SHADER_BITS() {
        return GL_ALL_SHADER_BITS;
    }
    private static final int GL_ALL_BARRIER_BITS = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define GL_ALL_BARRIER_BITS 4294967295
     * }
     */
    public static int GL_ALL_BARRIER_BITS() {
        return GL_ALL_BARRIER_BITS;
    }
    private static final int GL_ALL_PIXELS_AMD = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define GL_ALL_PIXELS_AMD 4294967295
     * }
     */
    public static int GL_ALL_PIXELS_AMD() {
        return GL_ALL_PIXELS_AMD;
    }
    private static final int GL_QUERY_ALL_EVENT_BITS_AMD = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define GL_QUERY_ALL_EVENT_BITS_AMD 4294967295
     * }
     */
    public static int GL_QUERY_ALL_EVENT_BITS_AMD() {
        return GL_QUERY_ALL_EVENT_BITS_AMD;
    }
    private static final int GL_ALL_BARRIER_BITS_EXT = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define GL_ALL_BARRIER_BITS_EXT 4294967295
     * }
     */
    public static int GL_ALL_BARRIER_BITS_EXT() {
        return GL_ALL_BARRIER_BITS_EXT;
    }
    private static final int GL_NEXT_BUFFER_NV = (int)-2L;
    /**
     * {@snippet lang=c :
     * #define GL_NEXT_BUFFER_NV -2
     * }
     */
    public static int GL_NEXT_BUFFER_NV() {
        return GL_NEXT_BUFFER_NV;
    }
    private static final int GL_SKIP_COMPONENTS4_NV = (int)-3L;
    /**
     * {@snippet lang=c :
     * #define GL_SKIP_COMPONENTS4_NV -3
     * }
     */
    public static int GL_SKIP_COMPONENTS4_NV() {
        return GL_SKIP_COMPONENTS4_NV;
    }
    private static final int GL_SKIP_COMPONENTS3_NV = (int)-4L;
    /**
     * {@snippet lang=c :
     * #define GL_SKIP_COMPONENTS3_NV -4
     * }
     */
    public static int GL_SKIP_COMPONENTS3_NV() {
        return GL_SKIP_COMPONENTS3_NV;
    }
    private static final int GL_SKIP_COMPONENTS2_NV = (int)-5L;
    /**
     * {@snippet lang=c :
     * #define GL_SKIP_COMPONENTS2_NV -5
     * }
     */
    public static int GL_SKIP_COMPONENTS2_NV() {
        return GL_SKIP_COMPONENTS2_NV;
    }
    private static final int GL_SKIP_COMPONENTS1_NV = (int)-6L;
    /**
     * {@snippet lang=c :
     * #define GL_SKIP_COMPONENTS1_NV -6
     * }
     */
    public static int GL_SKIP_COMPONENTS1_NV() {
        return GL_SKIP_COMPONENTS1_NV;
    }
    private static final int GL_TEXCOORD4_BIT_PGI = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define GL_TEXCOORD4_BIT_PGI 2147483648
     * }
     */
    public static int GL_TEXCOORD4_BIT_PGI() {
        return GL_TEXCOORD4_BIT_PGI;
    }
    private static final double GLU_TESS_MAX_COORD = 1.0E150d;
    /**
     * {@snippet lang=c :
     * #define GLU_TESS_MAX_COORD 1.0E150
     * }
     */
    public static double GLU_TESS_MAX_COORD() {
        return GLU_TESS_MAX_COORD;
    }
    private static final MemorySegment NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define NULL (void*) 0
     * }
     */
    public static MemorySegment NULL() {
        return NULL;
    }
    private static final int __WCLONE = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define __WCLONE 2147483648
     * }
     */
    public static int __WCLONE() {
        return __WCLONE;
    }
    private static final int __HAVE_DISTINCT_FLOAT16 = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_DISTINCT_FLOAT16 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT16() {
        return __HAVE_DISTINCT_FLOAT16;
    }
    private static final int __HAVE_DISTINCT_FLOAT128X = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_DISTINCT_FLOAT128X 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT128X() {
        return __HAVE_DISTINCT_FLOAT128X;
    }
    private static final int __HAVE_FLOAT128_UNLIKE_LDBL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __HAVE_FLOAT128_UNLIKE_LDBL 0
     * }
     */
    public static int __HAVE_FLOAT128_UNLIKE_LDBL() {
        return __HAVE_FLOAT128_UNLIKE_LDBL;
    }
    private static final int __BYTE_ORDER = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define __BYTE_ORDER 1234
     * }
     */
    public static int __BYTE_ORDER() {
        return __BYTE_ORDER;
    }
    private static final int __FLOAT_WORD_ORDER = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define __FLOAT_WORD_ORDER 1234
     * }
     */
    public static int __FLOAT_WORD_ORDER() {
        return __FLOAT_WORD_ORDER;
    }
    private static final int LITTLE_ENDIAN = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define LITTLE_ENDIAN 1234
     * }
     */
    public static int LITTLE_ENDIAN() {
        return LITTLE_ENDIAN;
    }
    private static final int BIG_ENDIAN = (int)4321L;
    /**
     * {@snippet lang=c :
     * #define BIG_ENDIAN 4321
     * }
     */
    public static int BIG_ENDIAN() {
        return BIG_ENDIAN;
    }
    private static final int PDP_ENDIAN = (int)3412L;
    /**
     * {@snippet lang=c :
     * #define PDP_ENDIAN 3412
     * }
     */
    public static int PDP_ENDIAN() {
        return PDP_ENDIAN;
    }
    private static final int BYTE_ORDER = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define BYTE_ORDER 1234
     * }
     */
    public static int BYTE_ORDER() {
        return BYTE_ORDER;
    }
    /**
     * {@snippet lang=c :
     * #define __FD_ZERO_STOS "stosq"
     * }
     */
    public static MemorySegment __FD_ZERO_STOS() {
        class Holder {
            static final MemorySegment __FD_ZERO_STOS
                = glext_h.LIBRARY_ARENA.allocateFrom("stosq");
        }
        return Holder.__FD_ZERO_STOS;
    }
    private static final long _SIGSET_NWORDS = 16L;
    /**
     * {@snippet lang=c :
     * #define _SIGSET_NWORDS 16
     * }
     */
    public static long _SIGSET_NWORDS() {
        return _SIGSET_NWORDS;
    }
    private static final int __NFDBITS = (int)64L;
    /**
     * {@snippet lang=c :
     * #define __NFDBITS 64
     * }
     */
    public static int __NFDBITS() {
        return __NFDBITS;
    }
    private static final int FD_SETSIZE = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define FD_SETSIZE 1024
     * }
     */
    public static int FD_SETSIZE() {
        return FD_SETSIZE;
    }
    private static final int NFDBITS = (int)64L;
    /**
     * {@snippet lang=c :
     * #define NFDBITS 64
     * }
     */
    public static int NFDBITS() {
        return NFDBITS;
    }
    private static final int __PTHREAD_RWLOCK_ELISION_EXTRA = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_RWLOCK_ELISION_EXTRA 0
     * }
     */
    public static int __PTHREAD_RWLOCK_ELISION_EXTRA() {
        return __PTHREAD_RWLOCK_ELISION_EXTRA;
    }
}

