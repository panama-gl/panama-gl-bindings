// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1200 {

    static final FunctionDescriptor PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC$MH = RuntimeHelper.downcallHandle(
        constants$1200.PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC$FUNC
    );
    static final FunctionDescriptor glBeginTransformFeedbackNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glBeginTransformFeedbackNV$MH = RuntimeHelper.downcallHandle(
        "glBeginTransformFeedbackNV",
        constants$1200.glBeginTransformFeedbackNV$FUNC
    );
    static final FunctionDescriptor glEndTransformFeedbackNV$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glEndTransformFeedbackNV$MH = RuntimeHelper.downcallHandle(
        "glEndTransformFeedbackNV",
        constants$1200.glEndTransformFeedbackNV$FUNC
    );
    static final FunctionDescriptor glTransformFeedbackAttribsNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glTransformFeedbackAttribsNV$MH = RuntimeHelper.downcallHandle(
        "glTransformFeedbackAttribsNV",
        constants$1200.glTransformFeedbackAttribsNV$FUNC
    );
    static final FunctionDescriptor glBindBufferRangeNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle glBindBufferRangeNV$MH = RuntimeHelper.downcallHandle(
        "glBindBufferRangeNV",
        constants$1200.glBindBufferRangeNV$FUNC
    );
}


