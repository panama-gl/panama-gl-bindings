// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$43 {

    static final FunctionDescriptor glDrawPixels$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glDrawPixels$MH = RuntimeHelper.downcallHandle(
        "glDrawPixels",
        constants$43.glDrawPixels$FUNC
    );
    static final FunctionDescriptor glCopyPixels$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glCopyPixels$MH = RuntimeHelper.downcallHandle(
        "glCopyPixels",
        constants$43.glCopyPixels$FUNC
    );
    static final FunctionDescriptor glStencilFunc$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glStencilFunc$MH = RuntimeHelper.downcallHandle(
        "glStencilFunc",
        constants$43.glStencilFunc$FUNC
    );
    static final FunctionDescriptor glStencilMask$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glStencilMask$MH = RuntimeHelper.downcallHandle(
        "glStencilMask",
        constants$43.glStencilMask$FUNC
    );
    static final FunctionDescriptor glStencilOp$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glStencilOp$MH = RuntimeHelper.downcallHandle(
        "glStencilOp",
        constants$43.glStencilOp$FUNC
    );
    static final FunctionDescriptor glClearStencil$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glClearStencil$MH = RuntimeHelper.downcallHandle(
        "glClearStencil",
        constants$43.glClearStencil$FUNC
    );
}


