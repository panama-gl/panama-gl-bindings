// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1165 {

    static final FunctionDescriptor PFNGLPIXELDATARANGENVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFNGLPIXELDATARANGENVPROC$MH = RuntimeHelper.downcallHandle(
        constants$1165.PFNGLPIXELDATARANGENVPROC$FUNC
    );
    static final FunctionDescriptor PFNGLFLUSHPIXELDATARANGENVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle PFNGLFLUSHPIXELDATARANGENVPROC$MH = RuntimeHelper.downcallHandle(
        constants$1165.PFNGLFLUSHPIXELDATARANGENVPROC$FUNC
    );
    static final FunctionDescriptor glPixelDataRangeNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glPixelDataRangeNV$MH = RuntimeHelper.downcallHandle(
        "glPixelDataRangeNV",
        constants$1165.glPixelDataRangeNV$FUNC
    );
    static final FunctionDescriptor glFlushPixelDataRangeNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glFlushPixelDataRangeNV$MH = RuntimeHelper.downcallHandle(
        "glFlushPixelDataRangeNV",
        constants$1165.glFlushPixelDataRangeNV$FUNC
    );
    static final FunctionDescriptor PFNGLPOINTPARAMETERINVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
}


