// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$214 {

    static final FunctionDescriptor glBlitFramebuffer$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glBlitFramebuffer$MH = RuntimeHelper.downcallHandle(
        "glBlitFramebuffer",
        constants$214.glBlitFramebuffer$FUNC
    );
    static final FunctionDescriptor glRenderbufferStorageMultisample$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glRenderbufferStorageMultisample$MH = RuntimeHelper.downcallHandle(
        "glRenderbufferStorageMultisample",
        constants$214.glRenderbufferStorageMultisample$FUNC
    );
    static final FunctionDescriptor glFramebufferTextureLayer$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glFramebufferTextureLayer$MH = RuntimeHelper.downcallHandle(
        "glFramebufferTextureLayer",
        constants$214.glFramebufferTextureLayer$FUNC
    );
    static final FunctionDescriptor glMapBufferRange$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glMapBufferRange$MH = RuntimeHelper.downcallHandle(
        "glMapBufferRange",
        constants$214.glMapBufferRange$FUNC
    );
    static final FunctionDescriptor glFlushMappedBufferRange$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle glFlushMappedBufferRange$MH = RuntimeHelper.downcallHandle(
        "glFlushMappedBufferRange",
        constants$214.glFlushMappedBufferRange$FUNC
    );
    static final FunctionDescriptor glBindVertexArray$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glBindVertexArray$MH = RuntimeHelper.downcallHandle(
        "glBindVertexArray",
        constants$214.glBindVertexArray$FUNC
    );
}


