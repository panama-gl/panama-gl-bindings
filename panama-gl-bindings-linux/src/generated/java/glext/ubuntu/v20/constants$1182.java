// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1182 {

    static final FunctionDescriptor PFNGLSCISSOREXCLUSIVENVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle PFNGLSCISSOREXCLUSIVENVPROC$MH = RuntimeHelper.downcallHandle(
        constants$1182.PFNGLSCISSOREXCLUSIVENVPROC$FUNC
    );
    static final FunctionDescriptor PFNGLSCISSOREXCLUSIVEARRAYVNVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFNGLSCISSOREXCLUSIVEARRAYVNVPROC$MH = RuntimeHelper.downcallHandle(
        constants$1182.PFNGLSCISSOREXCLUSIVEARRAYVNVPROC$FUNC
    );
    static final FunctionDescriptor glScissorExclusiveNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glScissorExclusiveNV$MH = RuntimeHelper.downcallHandle(
        "glScissorExclusiveNV",
        constants$1182.glScissorExclusiveNV$FUNC
    );
    static final FunctionDescriptor glScissorExclusiveArrayvNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glScissorExclusiveArrayvNV$MH = RuntimeHelper.downcallHandle(
        "glScissorExclusiveArrayvNV",
        constants$1182.glScissorExclusiveArrayvNV$FUNC
    );
    static final FunctionDescriptor PFNGLMAKEBUFFERRESIDENTNVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
}


