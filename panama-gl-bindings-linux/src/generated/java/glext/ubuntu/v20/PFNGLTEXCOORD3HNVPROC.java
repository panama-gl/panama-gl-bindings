// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLTEXCOORD3HNVPROC {

    void apply(short s, short t, short r);
    static MemorySegment allocate(PFNGLTEXCOORD3HNVPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLTEXCOORD3HNVPROC.class, fi, constants$769.PFNGLTEXCOORD3HNVPROC$FUNC, session);
    }
    static PFNGLTEXCOORD3HNVPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (short _s, short _t, short _r) -> {
            try {
                constants$769.PFNGLTEXCOORD3HNVPROC$MH.invokeExact((Addressable)symbol, _s, _t, _r);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


