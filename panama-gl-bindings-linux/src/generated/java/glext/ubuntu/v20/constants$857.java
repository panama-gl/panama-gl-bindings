// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$857 {

    static final FunctionDescriptor glCompressedTextureSubImage3DEXT$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glCompressedTextureSubImage3DEXT$MH = RuntimeHelper.downcallHandle(
        "glCompressedTextureSubImage3DEXT",
        constants$857.glCompressedTextureSubImage3DEXT$FUNC
    );
    static final FunctionDescriptor glCompressedTextureSubImage2DEXT$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glCompressedTextureSubImage2DEXT$MH = RuntimeHelper.downcallHandle(
        "glCompressedTextureSubImage2DEXT",
        constants$857.glCompressedTextureSubImage2DEXT$FUNC
    );
    static final FunctionDescriptor glCompressedTextureSubImage1DEXT$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glCompressedTextureSubImage1DEXT$MH = RuntimeHelper.downcallHandle(
        "glCompressedTextureSubImage1DEXT",
        constants$857.glCompressedTextureSubImage1DEXT$FUNC
    );
    static final FunctionDescriptor glGetCompressedTextureImageEXT$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetCompressedTextureImageEXT$MH = RuntimeHelper.downcallHandle(
        "glGetCompressedTextureImageEXT",
        constants$857.glGetCompressedTextureImageEXT$FUNC
    );
    static final FunctionDescriptor glCompressedMultiTexImage3DEXT$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glCompressedMultiTexImage3DEXT$MH = RuntimeHelper.downcallHandle(
        "glCompressedMultiTexImage3DEXT",
        constants$857.glCompressedMultiTexImage3DEXT$FUNC
    );
    static final FunctionDescriptor glCompressedMultiTexImage2DEXT$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glCompressedMultiTexImage2DEXT$MH = RuntimeHelper.downcallHandle(
        "glCompressedMultiTexImage2DEXT",
        constants$857.glCompressedMultiTexImage2DEXT$FUNC
    );
}


