// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$158 {

    static final FunctionDescriptor glGetAttribLocation$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetAttribLocation$MH = RuntimeHelper.downcallHandle(
        "glGetAttribLocation",
        constants$158.glGetAttribLocation$FUNC
    );
    static final FunctionDescriptor glGetProgramiv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetProgramiv$MH = RuntimeHelper.downcallHandle(
        "glGetProgramiv",
        constants$158.glGetProgramiv$FUNC
    );
    static final FunctionDescriptor glGetProgramInfoLog$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetProgramInfoLog$MH = RuntimeHelper.downcallHandle(
        "glGetProgramInfoLog",
        constants$158.glGetProgramInfoLog$FUNC
    );
    static final FunctionDescriptor glGetShaderiv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetShaderiv$MH = RuntimeHelper.downcallHandle(
        "glGetShaderiv",
        constants$158.glGetShaderiv$FUNC
    );
    static final FunctionDescriptor glGetShaderInfoLog$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetShaderInfoLog$MH = RuntimeHelper.downcallHandle(
        "glGetShaderInfoLog",
        constants$158.glGetShaderInfoLog$FUNC
    );
    static final FunctionDescriptor glGetShaderSource$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetShaderSource$MH = RuntimeHelper.downcallHandle(
        "glGetShaderSource",
        constants$158.glGetShaderSource$FUNC
    );
}


