// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1205 {

    static final FunctionDescriptor glGenTransformFeedbacksNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGenTransformFeedbacksNV$MH = RuntimeHelper.downcallHandle(
        "glGenTransformFeedbacksNV",
        constants$1205.glGenTransformFeedbacksNV$FUNC
    );
    static final FunctionDescriptor glIsTransformFeedbackNV$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glIsTransformFeedbackNV$MH = RuntimeHelper.downcallHandle(
        "glIsTransformFeedbackNV",
        constants$1205.glIsTransformFeedbackNV$FUNC
    );
    static final FunctionDescriptor glPauseTransformFeedbackNV$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glPauseTransformFeedbackNV$MH = RuntimeHelper.downcallHandle(
        "glPauseTransformFeedbackNV",
        constants$1205.glPauseTransformFeedbackNV$FUNC
    );
    static final FunctionDescriptor glResumeTransformFeedbackNV$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glResumeTransformFeedbackNV$MH = RuntimeHelper.downcallHandle(
        "glResumeTransformFeedbackNV",
        constants$1205.glResumeTransformFeedbackNV$FUNC
    );
    static final FunctionDescriptor glDrawTransformFeedbackNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glDrawTransformFeedbackNV$MH = RuntimeHelper.downcallHandle(
        "glDrawTransformFeedbackNV",
        constants$1205.glDrawTransformFeedbackNV$FUNC
    );
    static final FunctionDescriptor PFNGLVDPAUINITNVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
}


