// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1082 {

    static final FunctionDescriptor glGetCoverageModulationTableNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetCoverageModulationTableNV$MH = RuntimeHelper.downcallHandle(
        "glGetCoverageModulationTableNV",
        constants$1082.glGetCoverageModulationTableNV$FUNC
    );
    static final FunctionDescriptor glCoverageModulationNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glCoverageModulationNV$MH = RuntimeHelper.downcallHandle(
        "glCoverageModulationNV",
        constants$1082.glCoverageModulationNV$FUNC
    );
    static final FunctionDescriptor PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC$MH = RuntimeHelper.downcallHandle(
        constants$1082.PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC$FUNC
    );
    static final FunctionDescriptor glRenderbufferStorageMultisampleCoverageNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glRenderbufferStorageMultisampleCoverageNV$MH = RuntimeHelper.downcallHandle(
        "glRenderbufferStorageMultisampleCoverageNV",
        constants$1082.glRenderbufferStorageMultisampleCoverageNV$FUNC
    );
    static final FunctionDescriptor PFNGLPROGRAMVERTEXLIMITNVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
}


