// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1061 {

    static final FunctionDescriptor PFNGLSUBPIXELPRECISIONBIASNVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle PFNGLSUBPIXELPRECISIONBIASNVPROC$MH = RuntimeHelper.downcallHandle(
        constants$1061.PFNGLSUBPIXELPRECISIONBIASNVPROC$FUNC
    );
    static final FunctionDescriptor glSubpixelPrecisionBiasNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glSubpixelPrecisionBiasNV$MH = RuntimeHelper.downcallHandle(
        "glSubpixelPrecisionBiasNV",
        constants$1061.glSubpixelPrecisionBiasNV$FUNC
    );
    static final FunctionDescriptor PFNGLCONSERVATIVERASTERPARAMETERFNVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle PFNGLCONSERVATIVERASTERPARAMETERFNVPROC$MH = RuntimeHelper.downcallHandle(
        constants$1061.PFNGLCONSERVATIVERASTERPARAMETERFNVPROC$FUNC
    );
    static final FunctionDescriptor glConservativeRasterParameterfNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle glConservativeRasterParameterfNV$MH = RuntimeHelper.downcallHandle(
        "glConservativeRasterParameterfNV",
        constants$1061.glConservativeRasterParameterfNV$FUNC
    );
}


