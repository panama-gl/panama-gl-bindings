// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLCLEARDEPTHXOESPROC {

    void apply(int depth);
    static MemorySegment allocate(PFNGLCLEARDEPTHXOESPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLCLEARDEPTHXOESPROC.class, fi, constants$574.PFNGLCLEARDEPTHXOESPROC$FUNC, session);
    }
    static PFNGLCLEARDEPTHXOESPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _depth) -> {
            try {
                constants$575.PFNGLCLEARDEPTHXOESPROC$MH.invokeExact((Addressable)symbol, _depth);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


