// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$250 {

    static final FunctionDescriptor PFNGLSECONDARYCOLORP3UIVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFNGLSECONDARYCOLORP3UIVPROC$MH = RuntimeHelper.downcallHandle(
        constants$250.PFNGLSECONDARYCOLORP3UIVPROC$FUNC
    );
    static final FunctionDescriptor glBindFragDataLocationIndexed$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glBindFragDataLocationIndexed$MH = RuntimeHelper.downcallHandle(
        "glBindFragDataLocationIndexed",
        constants$250.glBindFragDataLocationIndexed$FUNC
    );
    static final FunctionDescriptor glGetFragDataIndex$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetFragDataIndex$MH = RuntimeHelper.downcallHandle(
        "glGetFragDataIndex",
        constants$250.glGetFragDataIndex$FUNC
    );
    static final FunctionDescriptor glGenSamplers$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGenSamplers$MH = RuntimeHelper.downcallHandle(
        "glGenSamplers",
        constants$250.glGenSamplers$FUNC
    );
    static final FunctionDescriptor glDeleteSamplers$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glDeleteSamplers$MH = RuntimeHelper.downcallHandle(
        "glDeleteSamplers",
        constants$250.glDeleteSamplers$FUNC
    );
}


