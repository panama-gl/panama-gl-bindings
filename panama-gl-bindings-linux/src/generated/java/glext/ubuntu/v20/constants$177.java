// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$177 {

    static final FunctionDescriptor PFNGLTRANSFORMFEEDBACKVARYINGSPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle PFNGLTRANSFORMFEEDBACKVARYINGSPROC$MH = RuntimeHelper.downcallHandle(
        constants$177.PFNGLTRANSFORMFEEDBACKVARYINGSPROC$FUNC
    );
    static final FunctionDescriptor PFNGLGETTRANSFORMFEEDBACKVARYINGPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFNGLGETTRANSFORMFEEDBACKVARYINGPROC$MH = RuntimeHelper.downcallHandle(
        constants$177.PFNGLGETTRANSFORMFEEDBACKVARYINGPROC$FUNC
    );
    static final FunctionDescriptor PFNGLCLAMPCOLORPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle PFNGLCLAMPCOLORPROC$MH = RuntimeHelper.downcallHandle(
        constants$177.PFNGLCLAMPCOLORPROC$FUNC
    );
    static final FunctionDescriptor PFNGLBEGINCONDITIONALRENDERPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
}


