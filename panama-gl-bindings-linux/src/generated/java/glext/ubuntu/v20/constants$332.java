// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$332 {

    static final FunctionDescriptor glMemoryBarrier$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glMemoryBarrier$MH = RuntimeHelper.downcallHandle(
        "glMemoryBarrier",
        constants$332.glMemoryBarrier$FUNC
    );
    static final FunctionDescriptor glTexStorage1D$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glTexStorage1D$MH = RuntimeHelper.downcallHandle(
        "glTexStorage1D",
        constants$332.glTexStorage1D$FUNC
    );
    static final FunctionDescriptor glTexStorage2D$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glTexStorage2D$MH = RuntimeHelper.downcallHandle(
        "glTexStorage2D",
        constants$332.glTexStorage2D$FUNC
    );
    static final FunctionDescriptor glTexStorage3D$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glTexStorage3D$MH = RuntimeHelper.downcallHandle(
        "glTexStorage3D",
        constants$332.glTexStorage3D$FUNC
    );
    static final FunctionDescriptor glDrawTransformFeedbackInstanced$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glDrawTransformFeedbackInstanced$MH = RuntimeHelper.downcallHandle(
        "glDrawTransformFeedbackInstanced",
        constants$332.glDrawTransformFeedbackInstanced$FUNC
    );
    static final FunctionDescriptor glDrawTransformFeedbackStreamInstanced$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glDrawTransformFeedbackStreamInstanced$MH = RuntimeHelper.downcallHandle(
        "glDrawTransformFeedbackStreamInstanced",
        constants$332.glDrawTransformFeedbackStreamInstanced$FUNC
    );
}


