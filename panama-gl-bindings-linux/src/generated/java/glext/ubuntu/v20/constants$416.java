// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$416 {

    static final FunctionDescriptor glGetQueryBufferObjectui64v$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle glGetQueryBufferObjectui64v$MH = RuntimeHelper.downcallHandle(
        "glGetQueryBufferObjectui64v",
        constants$416.glGetQueryBufferObjectui64v$FUNC
    );
    static final FunctionDescriptor glGetQueryBufferObjectuiv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle glGetQueryBufferObjectuiv$MH = RuntimeHelper.downcallHandle(
        "glGetQueryBufferObjectuiv",
        constants$416.glGetQueryBufferObjectuiv$FUNC
    );
    static final FunctionDescriptor glMemoryBarrierByRegion$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glMemoryBarrierByRegion$MH = RuntimeHelper.downcallHandle(
        "glMemoryBarrierByRegion",
        constants$416.glMemoryBarrierByRegion$FUNC
    );
    static final FunctionDescriptor glGetTextureSubImage$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetTextureSubImage$MH = RuntimeHelper.downcallHandle(
        "glGetTextureSubImage",
        constants$416.glGetTextureSubImage$FUNC
    );
    static final FunctionDescriptor glGetCompressedTextureSubImage$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetCompressedTextureSubImage$MH = RuntimeHelper.downcallHandle(
        "glGetCompressedTextureSubImage",
        constants$416.glGetCompressedTextureSubImage$FUNC
    );
    static final FunctionDescriptor glGetGraphicsResetStatus$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle glGetGraphicsResetStatus$MH = RuntimeHelper.downcallHandle(
        "glGetGraphicsResetStatus",
        constants$416.glGetGraphicsResetStatus$FUNC
    );
}


