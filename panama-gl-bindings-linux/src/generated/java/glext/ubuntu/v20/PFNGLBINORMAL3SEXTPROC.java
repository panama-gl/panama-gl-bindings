// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNGLBINORMAL3SEXTPROC {

    void apply(short bx, short by, short bz);
    static MemorySegment allocate(PFNGLBINORMAL3SEXTPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNGLBINORMAL3SEXTPROC.class, fi, constants$746.PFNGLBINORMAL3SEXTPROC$FUNC, session);
    }
    static PFNGLBINORMAL3SEXTPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (short _bx, short _by, short _bz) -> {
            try {
                constants$746.PFNGLBINORMAL3SEXTPROC$MH.invokeExact((Addressable)symbol, _bx, _by, _bz);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


