// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$529 {

    static final FunctionDescriptor PFNGLGETBUFFERPOINTERVARBPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFNGLGETBUFFERPOINTERVARBPROC$MH = RuntimeHelper.downcallHandle(
        constants$529.PFNGLGETBUFFERPOINTERVARBPROC$FUNC
    );
    static final FunctionDescriptor glBindBufferARB$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glBindBufferARB$MH = RuntimeHelper.downcallHandle(
        "glBindBufferARB",
        constants$529.glBindBufferARB$FUNC
    );
    static final FunctionDescriptor glDeleteBuffersARB$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glDeleteBuffersARB$MH = RuntimeHelper.downcallHandle(
        "glDeleteBuffersARB",
        constants$529.glDeleteBuffersARB$FUNC
    );
    static final FunctionDescriptor glGenBuffersARB$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGenBuffersARB$MH = RuntimeHelper.downcallHandle(
        "glGenBuffersARB",
        constants$529.glGenBuffersARB$FUNC
    );
    static final FunctionDescriptor glIsBufferARB$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glIsBufferARB$MH = RuntimeHelper.downcallHandle(
        "glIsBufferARB",
        constants$529.glIsBufferARB$FUNC
    );
}


