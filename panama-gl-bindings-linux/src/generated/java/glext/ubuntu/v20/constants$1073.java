// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1073 {

    static final FunctionDescriptor PFNGLTEXRENDERBUFFERNVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle PFNGLTEXRENDERBUFFERNVPROC$MH = RuntimeHelper.downcallHandle(
        constants$1073.PFNGLTEXRENDERBUFFERNVPROC$FUNC
    );
    static final FunctionDescriptor glGetMultisamplefvNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetMultisamplefvNV$MH = RuntimeHelper.downcallHandle(
        "glGetMultisamplefvNV",
        constants$1073.glGetMultisamplefvNV$FUNC
    );
    static final FunctionDescriptor glSampleMaskIndexedNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glSampleMaskIndexedNV$MH = RuntimeHelper.downcallHandle(
        "glSampleMaskIndexedNV",
        constants$1073.glSampleMaskIndexedNV$FUNC
    );
    static final FunctionDescriptor glTexRenderbufferNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glTexRenderbufferNV$MH = RuntimeHelper.downcallHandle(
        "glTexRenderbufferNV",
        constants$1073.glTexRenderbufferNV$FUNC
    );
    static final FunctionDescriptor PFNGLDELETEFENCESNVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
}


