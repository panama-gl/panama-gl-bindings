// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$313 {

    static final FunctionDescriptor glClearDepthf$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle glClearDepthf$MH = RuntimeHelper.downcallHandle(
        "glClearDepthf",
        constants$313.glClearDepthf$FUNC
    );
    static final FunctionDescriptor glGetProgramBinary$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGetProgramBinary$MH = RuntimeHelper.downcallHandle(
        "glGetProgramBinary",
        constants$313.glGetProgramBinary$FUNC
    );
    static final FunctionDescriptor glProgramBinary$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glProgramBinary$MH = RuntimeHelper.downcallHandle(
        "glProgramBinary",
        constants$313.glProgramBinary$FUNC
    );
    static final FunctionDescriptor glProgramParameteri$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glProgramParameteri$MH = RuntimeHelper.downcallHandle(
        "glProgramParameteri",
        constants$313.glProgramParameteri$FUNC
    );
    static final FunctionDescriptor glUseProgramStages$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glUseProgramStages$MH = RuntimeHelper.downcallHandle(
        "glUseProgramStages",
        constants$313.glUseProgramStages$FUNC
    );
    static final FunctionDescriptor glActiveShaderProgram$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glActiveShaderProgram$MH = RuntimeHelper.downcallHandle(
        "glActiveShaderProgram",
        constants$313.glActiveShaderProgram$FUNC
    );
}


