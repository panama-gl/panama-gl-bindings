// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1172 {

    static final FunctionDescriptor PFNGLQUERYRESOURCETAGNVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFNGLQUERYRESOURCETAGNVPROC$MH = RuntimeHelper.downcallHandle(
        constants$1172.PFNGLQUERYRESOURCETAGNVPROC$FUNC
    );
    static final FunctionDescriptor glGenQueryResourceTagNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glGenQueryResourceTagNV$MH = RuntimeHelper.downcallHandle(
        "glGenQueryResourceTagNV",
        constants$1172.glGenQueryResourceTagNV$FUNC
    );
    static final FunctionDescriptor glDeleteQueryResourceTagNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glDeleteQueryResourceTagNV$MH = RuntimeHelper.downcallHandle(
        "glDeleteQueryResourceTagNV",
        constants$1172.glDeleteQueryResourceTagNV$FUNC
    );
    static final FunctionDescriptor glQueryResourceTagNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glQueryResourceTagNV$MH = RuntimeHelper.downcallHandle(
        "glQueryResourceTagNV",
        constants$1172.glQueryResourceTagNV$FUNC
    );
    static final FunctionDescriptor PFNGLCOMBINERPARAMETERFVNVPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
}


