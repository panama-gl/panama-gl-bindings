// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$490 {

    static final FunctionDescriptor glMinSampleShadingARB$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_FLOAT$LAYOUT
    );
    static final MethodHandle glMinSampleShadingARB$MH = RuntimeHelper.downcallHandle(
        "glMinSampleShadingARB",
        constants$490.glMinSampleShadingARB$FUNC
    );
    static final FunctionDescriptor PFNGLDELETEOBJECTARBPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle PFNGLDELETEOBJECTARBPROC$MH = RuntimeHelper.downcallHandle(
        constants$490.PFNGLDELETEOBJECTARBPROC$FUNC
    );
    static final FunctionDescriptor PFNGLGETHANDLEARBPROC$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle PFNGLGETHANDLEARBPROC$MH = RuntimeHelper.downcallHandle(
        constants$490.PFNGLGETHANDLEARBPROC$FUNC
    );
    static final FunctionDescriptor PFNGLDETACHOBJECTARBPROC$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
}


