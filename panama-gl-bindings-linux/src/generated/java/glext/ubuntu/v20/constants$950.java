// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$950 {

    static final FunctionDescriptor glUseShaderProgramEXT$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glUseShaderProgramEXT$MH = RuntimeHelper.downcallHandle(
        "glUseShaderProgramEXT",
        constants$950.glUseShaderProgramEXT$FUNC
    );
    static final FunctionDescriptor glActiveProgramEXT$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glActiveProgramEXT$MH = RuntimeHelper.downcallHandle(
        "glActiveProgramEXT",
        constants$950.glActiveProgramEXT$FUNC
    );
    static final FunctionDescriptor glCreateShaderProgramEXT$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glCreateShaderProgramEXT$MH = RuntimeHelper.downcallHandle(
        "glCreateShaderProgramEXT",
        constants$950.glCreateShaderProgramEXT$FUNC
    );
    static final FunctionDescriptor PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC$MH = RuntimeHelper.downcallHandle(
        constants$950.PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC$FUNC
    );
    static final FunctionDescriptor glFramebufferFetchBarrierEXT$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle glFramebufferFetchBarrierEXT$MH = RuntimeHelper.downcallHandle(
        "glFramebufferFetchBarrierEXT",
        constants$950.glFramebufferFetchBarrierEXT$FUNC
    );
}


