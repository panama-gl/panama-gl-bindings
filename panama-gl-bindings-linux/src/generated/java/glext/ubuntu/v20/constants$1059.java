// Generated by jextract

package glext.ubuntu.v20;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1059 {

    static final FunctionDescriptor glDeleteCommandListsNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glDeleteCommandListsNV$MH = RuntimeHelper.downcallHandle(
        "glDeleteCommandListsNV",
        constants$1059.glDeleteCommandListsNV$FUNC
    );
    static final FunctionDescriptor glIsCommandListNV$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glIsCommandListNV$MH = RuntimeHelper.downcallHandle(
        "glIsCommandListNV",
        constants$1059.glIsCommandListNV$FUNC
    );
    static final FunctionDescriptor glListDrawCommandsStatesClientNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glListDrawCommandsStatesClientNV$MH = RuntimeHelper.downcallHandle(
        "glListDrawCommandsStatesClientNV",
        constants$1059.glListDrawCommandsStatesClientNV$FUNC
    );
    static final FunctionDescriptor glCommandListSegmentsNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glCommandListSegmentsNV$MH = RuntimeHelper.downcallHandle(
        "glCommandListSegmentsNV",
        constants$1059.glCommandListSegmentsNV$FUNC
    );
    static final FunctionDescriptor glCompileCommandListNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glCompileCommandListNV$MH = RuntimeHelper.downcallHandle(
        "glCompileCommandListNV",
        constants$1059.glCompileCommandListNV$FUNC
    );
    static final FunctionDescriptor glCallCommandListNV$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle glCallCommandListNV$MH = RuntimeHelper.downcallHandle(
        "glCallCommandListNV",
        constants$1059.glCallCommandListNV$FUNC
    );
}


