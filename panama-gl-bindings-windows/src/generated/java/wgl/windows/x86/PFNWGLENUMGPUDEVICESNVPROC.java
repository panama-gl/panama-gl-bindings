// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNWGLENUMGPUDEVICESNVPROC {

    int apply(java.lang.foreign.MemoryAddress hGpu, int iDeviceIndex, java.lang.foreign.MemoryAddress lpGpuDevice);
    static MemorySegment allocate(PFNWGLENUMGPUDEVICESNVPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNWGLENUMGPUDEVICESNVPROC.class, fi, constants$1406.PFNWGLENUMGPUDEVICESNVPROC$FUNC, session);
    }
    static PFNWGLENUMGPUDEVICESNVPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _hGpu, int _iDeviceIndex, java.lang.foreign.MemoryAddress _lpGpuDevice) -> {
            try {
                return (int)constants$1406.PFNWGLENUMGPUDEVICESNVPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_hGpu, _iDeviceIndex, (java.lang.foreign.Addressable)_lpGpuDevice);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


