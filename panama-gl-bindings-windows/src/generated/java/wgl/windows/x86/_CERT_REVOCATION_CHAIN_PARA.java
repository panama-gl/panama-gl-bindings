// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _CERT_REVOCATION_CHAIN_PARA {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("hChainEngine"),
        Constants$root.C_POINTER$LAYOUT.withName("hAdditionalStore"),
        Constants$root.C_LONG$LAYOUT.withName("dwChainFlags"),
        Constants$root.C_LONG$LAYOUT.withName("dwUrlRetrievalTimeout"),
        Constants$root.C_POINTER$LAYOUT.withName("pftCurrentTime"),
        Constants$root.C_POINTER$LAYOUT.withName("pftCacheResync"),
        Constants$root.C_LONG$LAYOUT.withName("cbMaxUrlRetrievalByteCount"),
        MemoryLayout.paddingLayout(32)
    ).withName("_CERT_REVOCATION_CHAIN_PARA");
    public static MemoryLayout $LAYOUT() {
        return _CERT_REVOCATION_CHAIN_PARA.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return _CERT_REVOCATION_CHAIN_PARA.cbSize$VH;
    }
    public static int cbSize$get(MemorySegment seg) {
        return (int)_CERT_REVOCATION_CHAIN_PARA.cbSize$VH.get(seg);
    }
    public static void cbSize$set( MemorySegment seg, int x) {
        _CERT_REVOCATION_CHAIN_PARA.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)_CERT_REVOCATION_CHAIN_PARA.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        _CERT_REVOCATION_CHAIN_PARA.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hChainEngine$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hChainEngine"));
    public static VarHandle hChainEngine$VH() {
        return _CERT_REVOCATION_CHAIN_PARA.hChainEngine$VH;
    }
    public static MemoryAddress hChainEngine$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CERT_REVOCATION_CHAIN_PARA.hChainEngine$VH.get(seg);
    }
    public static void hChainEngine$set( MemorySegment seg, MemoryAddress x) {
        _CERT_REVOCATION_CHAIN_PARA.hChainEngine$VH.set(seg, x);
    }
    public static MemoryAddress hChainEngine$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CERT_REVOCATION_CHAIN_PARA.hChainEngine$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hChainEngine$set(MemorySegment seg, long index, MemoryAddress x) {
        _CERT_REVOCATION_CHAIN_PARA.hChainEngine$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hAdditionalStore$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hAdditionalStore"));
    public static VarHandle hAdditionalStore$VH() {
        return _CERT_REVOCATION_CHAIN_PARA.hAdditionalStore$VH;
    }
    public static MemoryAddress hAdditionalStore$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CERT_REVOCATION_CHAIN_PARA.hAdditionalStore$VH.get(seg);
    }
    public static void hAdditionalStore$set( MemorySegment seg, MemoryAddress x) {
        _CERT_REVOCATION_CHAIN_PARA.hAdditionalStore$VH.set(seg, x);
    }
    public static MemoryAddress hAdditionalStore$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CERT_REVOCATION_CHAIN_PARA.hAdditionalStore$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hAdditionalStore$set(MemorySegment seg, long index, MemoryAddress x) {
        _CERT_REVOCATION_CHAIN_PARA.hAdditionalStore$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwChainFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwChainFlags"));
    public static VarHandle dwChainFlags$VH() {
        return _CERT_REVOCATION_CHAIN_PARA.dwChainFlags$VH;
    }
    public static int dwChainFlags$get(MemorySegment seg) {
        return (int)_CERT_REVOCATION_CHAIN_PARA.dwChainFlags$VH.get(seg);
    }
    public static void dwChainFlags$set( MemorySegment seg, int x) {
        _CERT_REVOCATION_CHAIN_PARA.dwChainFlags$VH.set(seg, x);
    }
    public static int dwChainFlags$get(MemorySegment seg, long index) {
        return (int)_CERT_REVOCATION_CHAIN_PARA.dwChainFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwChainFlags$set(MemorySegment seg, long index, int x) {
        _CERT_REVOCATION_CHAIN_PARA.dwChainFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwUrlRetrievalTimeout$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwUrlRetrievalTimeout"));
    public static VarHandle dwUrlRetrievalTimeout$VH() {
        return _CERT_REVOCATION_CHAIN_PARA.dwUrlRetrievalTimeout$VH;
    }
    public static int dwUrlRetrievalTimeout$get(MemorySegment seg) {
        return (int)_CERT_REVOCATION_CHAIN_PARA.dwUrlRetrievalTimeout$VH.get(seg);
    }
    public static void dwUrlRetrievalTimeout$set( MemorySegment seg, int x) {
        _CERT_REVOCATION_CHAIN_PARA.dwUrlRetrievalTimeout$VH.set(seg, x);
    }
    public static int dwUrlRetrievalTimeout$get(MemorySegment seg, long index) {
        return (int)_CERT_REVOCATION_CHAIN_PARA.dwUrlRetrievalTimeout$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwUrlRetrievalTimeout$set(MemorySegment seg, long index, int x) {
        _CERT_REVOCATION_CHAIN_PARA.dwUrlRetrievalTimeout$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pftCurrentTime$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pftCurrentTime"));
    public static VarHandle pftCurrentTime$VH() {
        return _CERT_REVOCATION_CHAIN_PARA.pftCurrentTime$VH;
    }
    public static MemoryAddress pftCurrentTime$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CERT_REVOCATION_CHAIN_PARA.pftCurrentTime$VH.get(seg);
    }
    public static void pftCurrentTime$set( MemorySegment seg, MemoryAddress x) {
        _CERT_REVOCATION_CHAIN_PARA.pftCurrentTime$VH.set(seg, x);
    }
    public static MemoryAddress pftCurrentTime$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CERT_REVOCATION_CHAIN_PARA.pftCurrentTime$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pftCurrentTime$set(MemorySegment seg, long index, MemoryAddress x) {
        _CERT_REVOCATION_CHAIN_PARA.pftCurrentTime$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pftCacheResync$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pftCacheResync"));
    public static VarHandle pftCacheResync$VH() {
        return _CERT_REVOCATION_CHAIN_PARA.pftCacheResync$VH;
    }
    public static MemoryAddress pftCacheResync$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CERT_REVOCATION_CHAIN_PARA.pftCacheResync$VH.get(seg);
    }
    public static void pftCacheResync$set( MemorySegment seg, MemoryAddress x) {
        _CERT_REVOCATION_CHAIN_PARA.pftCacheResync$VH.set(seg, x);
    }
    public static MemoryAddress pftCacheResync$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CERT_REVOCATION_CHAIN_PARA.pftCacheResync$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pftCacheResync$set(MemorySegment seg, long index, MemoryAddress x) {
        _CERT_REVOCATION_CHAIN_PARA.pftCacheResync$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cbMaxUrlRetrievalByteCount$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbMaxUrlRetrievalByteCount"));
    public static VarHandle cbMaxUrlRetrievalByteCount$VH() {
        return _CERT_REVOCATION_CHAIN_PARA.cbMaxUrlRetrievalByteCount$VH;
    }
    public static int cbMaxUrlRetrievalByteCount$get(MemorySegment seg) {
        return (int)_CERT_REVOCATION_CHAIN_PARA.cbMaxUrlRetrievalByteCount$VH.get(seg);
    }
    public static void cbMaxUrlRetrievalByteCount$set( MemorySegment seg, int x) {
        _CERT_REVOCATION_CHAIN_PARA.cbMaxUrlRetrievalByteCount$VH.set(seg, x);
    }
    public static int cbMaxUrlRetrievalByteCount$get(MemorySegment seg, long index) {
        return (int)_CERT_REVOCATION_CHAIN_PARA.cbMaxUrlRetrievalByteCount$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbMaxUrlRetrievalByteCount$set(MemorySegment seg, long index, int x) {
        _CERT_REVOCATION_CHAIN_PARA.cbMaxUrlRetrievalByteCount$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


