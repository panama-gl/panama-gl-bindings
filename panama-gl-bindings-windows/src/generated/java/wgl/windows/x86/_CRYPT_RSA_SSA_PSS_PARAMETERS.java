// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _CRYPT_RSA_SSA_PSS_PARAMETERS {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("pszObjId"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("cbData"),
                MemoryLayout.paddingLayout(32),
                Constants$root.C_POINTER$LAYOUT.withName("pbData")
            ).withName("Parameters")
        ).withName("HashAlgorithm"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("pszObjId"),
            MemoryLayout.structLayout(
                Constants$root.C_POINTER$LAYOUT.withName("pszObjId"),
                MemoryLayout.structLayout(
                    Constants$root.C_LONG$LAYOUT.withName("cbData"),
                    MemoryLayout.paddingLayout(32),
                    Constants$root.C_POINTER$LAYOUT.withName("pbData")
                ).withName("Parameters")
            ).withName("HashAlgorithm")
        ).withName("MaskGenAlgorithm"),
        Constants$root.C_LONG$LAYOUT.withName("dwSaltLength"),
        Constants$root.C_LONG$LAYOUT.withName("dwTrailerField")
    ).withName("_CRYPT_RSA_SSA_PSS_PARAMETERS");
    public static MemoryLayout $LAYOUT() {
        return _CRYPT_RSA_SSA_PSS_PARAMETERS.$struct$LAYOUT;
    }
    public static MemorySegment HashAlgorithm$slice(MemorySegment seg) {
        return seg.asSlice(0, 24);
    }
    public static MemorySegment MaskGenAlgorithm$slice(MemorySegment seg) {
        return seg.asSlice(24, 32);
    }
    static final VarHandle dwSaltLength$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwSaltLength"));
    public static VarHandle dwSaltLength$VH() {
        return _CRYPT_RSA_SSA_PSS_PARAMETERS.dwSaltLength$VH;
    }
    public static int dwSaltLength$get(MemorySegment seg) {
        return (int)_CRYPT_RSA_SSA_PSS_PARAMETERS.dwSaltLength$VH.get(seg);
    }
    public static void dwSaltLength$set( MemorySegment seg, int x) {
        _CRYPT_RSA_SSA_PSS_PARAMETERS.dwSaltLength$VH.set(seg, x);
    }
    public static int dwSaltLength$get(MemorySegment seg, long index) {
        return (int)_CRYPT_RSA_SSA_PSS_PARAMETERS.dwSaltLength$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwSaltLength$set(MemorySegment seg, long index, int x) {
        _CRYPT_RSA_SSA_PSS_PARAMETERS.dwSaltLength$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwTrailerField$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwTrailerField"));
    public static VarHandle dwTrailerField$VH() {
        return _CRYPT_RSA_SSA_PSS_PARAMETERS.dwTrailerField$VH;
    }
    public static int dwTrailerField$get(MemorySegment seg) {
        return (int)_CRYPT_RSA_SSA_PSS_PARAMETERS.dwTrailerField$VH.get(seg);
    }
    public static void dwTrailerField$set( MemorySegment seg, int x) {
        _CRYPT_RSA_SSA_PSS_PARAMETERS.dwTrailerField$VH.set(seg, x);
    }
    public static int dwTrailerField$get(MemorySegment seg, long index) {
        return (int)_CRYPT_RSA_SSA_PSS_PARAMETERS.dwTrailerField$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwTrailerField$set(MemorySegment seg, long index, int x) {
        _CRYPT_RSA_SSA_PSS_PARAMETERS.dwTrailerField$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


