// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _STORAGE_TIER {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("Data1"),
            Constants$root.C_SHORT$LAYOUT.withName("Data2"),
            Constants$root.C_SHORT$LAYOUT.withName("Data3"),
            MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
        ).withName("Id"),
        MemoryLayout.sequenceLayout(256, Constants$root.C_SHORT$LAYOUT).withName("Name"),
        MemoryLayout.sequenceLayout(256, Constants$root.C_SHORT$LAYOUT).withName("Description"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("Flags"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("ProvisionedCapacity"),
        Constants$root.C_LONG$LAYOUT.withName("MediaType"),
        Constants$root.C_LONG$LAYOUT.withName("Class")
    ).withName("_STORAGE_TIER");
    public static MemoryLayout $LAYOUT() {
        return _STORAGE_TIER.$struct$LAYOUT;
    }
    public static MemorySegment Id$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static MemorySegment Name$slice(MemorySegment seg) {
        return seg.asSlice(16, 512);
    }
    public static MemorySegment Description$slice(MemorySegment seg) {
        return seg.asSlice(528, 512);
    }
    static final VarHandle Flags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Flags"));
    public static VarHandle Flags$VH() {
        return _STORAGE_TIER.Flags$VH;
    }
    public static long Flags$get(MemorySegment seg) {
        return (long)_STORAGE_TIER.Flags$VH.get(seg);
    }
    public static void Flags$set( MemorySegment seg, long x) {
        _STORAGE_TIER.Flags$VH.set(seg, x);
    }
    public static long Flags$get(MemorySegment seg, long index) {
        return (long)_STORAGE_TIER.Flags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, long x) {
        _STORAGE_TIER.Flags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ProvisionedCapacity$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ProvisionedCapacity"));
    public static VarHandle ProvisionedCapacity$VH() {
        return _STORAGE_TIER.ProvisionedCapacity$VH;
    }
    public static long ProvisionedCapacity$get(MemorySegment seg) {
        return (long)_STORAGE_TIER.ProvisionedCapacity$VH.get(seg);
    }
    public static void ProvisionedCapacity$set( MemorySegment seg, long x) {
        _STORAGE_TIER.ProvisionedCapacity$VH.set(seg, x);
    }
    public static long ProvisionedCapacity$get(MemorySegment seg, long index) {
        return (long)_STORAGE_TIER.ProvisionedCapacity$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ProvisionedCapacity$set(MemorySegment seg, long index, long x) {
        _STORAGE_TIER.ProvisionedCapacity$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle MediaType$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("MediaType"));
    public static VarHandle MediaType$VH() {
        return _STORAGE_TIER.MediaType$VH;
    }
    public static int MediaType$get(MemorySegment seg) {
        return (int)_STORAGE_TIER.MediaType$VH.get(seg);
    }
    public static void MediaType$set( MemorySegment seg, int x) {
        _STORAGE_TIER.MediaType$VH.set(seg, x);
    }
    public static int MediaType$get(MemorySegment seg, long index) {
        return (int)_STORAGE_TIER.MediaType$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void MediaType$set(MemorySegment seg, long index, int x) {
        _STORAGE_TIER.MediaType$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Class$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Class"));
    public static VarHandle Class$VH() {
        return _STORAGE_TIER.Class$VH;
    }
    public static int Class$get(MemorySegment seg) {
        return (int)_STORAGE_TIER.Class$VH.get(seg);
    }
    public static void Class$set( MemorySegment seg, int x) {
        _STORAGE_TIER.Class$VH.set(seg, x);
    }
    public static int Class$get(MemorySegment seg, long index) {
        return (int)_STORAGE_TIER.Class$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Class$set(MemorySegment seg, long index, int x) {
        _STORAGE_TIER.Class$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


