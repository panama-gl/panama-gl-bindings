// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _COAUTHINFO {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("dwAuthnSvc"),
        Constants$root.C_LONG$LAYOUT.withName("dwAuthzSvc"),
        Constants$root.C_POINTER$LAYOUT.withName("pwszServerPrincName"),
        Constants$root.C_LONG$LAYOUT.withName("dwAuthnLevel"),
        Constants$root.C_LONG$LAYOUT.withName("dwImpersonationLevel"),
        Constants$root.C_POINTER$LAYOUT.withName("pAuthIdentityData"),
        Constants$root.C_LONG$LAYOUT.withName("dwCapabilities"),
        MemoryLayout.paddingLayout(32)
    ).withName("_COAUTHINFO");
    public static MemoryLayout $LAYOUT() {
        return _COAUTHINFO.$struct$LAYOUT;
    }
    static final VarHandle dwAuthnSvc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwAuthnSvc"));
    public static VarHandle dwAuthnSvc$VH() {
        return _COAUTHINFO.dwAuthnSvc$VH;
    }
    public static int dwAuthnSvc$get(MemorySegment seg) {
        return (int)_COAUTHINFO.dwAuthnSvc$VH.get(seg);
    }
    public static void dwAuthnSvc$set( MemorySegment seg, int x) {
        _COAUTHINFO.dwAuthnSvc$VH.set(seg, x);
    }
    public static int dwAuthnSvc$get(MemorySegment seg, long index) {
        return (int)_COAUTHINFO.dwAuthnSvc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwAuthnSvc$set(MemorySegment seg, long index, int x) {
        _COAUTHINFO.dwAuthnSvc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwAuthzSvc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwAuthzSvc"));
    public static VarHandle dwAuthzSvc$VH() {
        return _COAUTHINFO.dwAuthzSvc$VH;
    }
    public static int dwAuthzSvc$get(MemorySegment seg) {
        return (int)_COAUTHINFO.dwAuthzSvc$VH.get(seg);
    }
    public static void dwAuthzSvc$set( MemorySegment seg, int x) {
        _COAUTHINFO.dwAuthzSvc$VH.set(seg, x);
    }
    public static int dwAuthzSvc$get(MemorySegment seg, long index) {
        return (int)_COAUTHINFO.dwAuthzSvc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwAuthzSvc$set(MemorySegment seg, long index, int x) {
        _COAUTHINFO.dwAuthzSvc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pwszServerPrincName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pwszServerPrincName"));
    public static VarHandle pwszServerPrincName$VH() {
        return _COAUTHINFO.pwszServerPrincName$VH;
    }
    public static MemoryAddress pwszServerPrincName$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_COAUTHINFO.pwszServerPrincName$VH.get(seg);
    }
    public static void pwszServerPrincName$set( MemorySegment seg, MemoryAddress x) {
        _COAUTHINFO.pwszServerPrincName$VH.set(seg, x);
    }
    public static MemoryAddress pwszServerPrincName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_COAUTHINFO.pwszServerPrincName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszServerPrincName$set(MemorySegment seg, long index, MemoryAddress x) {
        _COAUTHINFO.pwszServerPrincName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwAuthnLevel$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwAuthnLevel"));
    public static VarHandle dwAuthnLevel$VH() {
        return _COAUTHINFO.dwAuthnLevel$VH;
    }
    public static int dwAuthnLevel$get(MemorySegment seg) {
        return (int)_COAUTHINFO.dwAuthnLevel$VH.get(seg);
    }
    public static void dwAuthnLevel$set( MemorySegment seg, int x) {
        _COAUTHINFO.dwAuthnLevel$VH.set(seg, x);
    }
    public static int dwAuthnLevel$get(MemorySegment seg, long index) {
        return (int)_COAUTHINFO.dwAuthnLevel$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwAuthnLevel$set(MemorySegment seg, long index, int x) {
        _COAUTHINFO.dwAuthnLevel$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwImpersonationLevel$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwImpersonationLevel"));
    public static VarHandle dwImpersonationLevel$VH() {
        return _COAUTHINFO.dwImpersonationLevel$VH;
    }
    public static int dwImpersonationLevel$get(MemorySegment seg) {
        return (int)_COAUTHINFO.dwImpersonationLevel$VH.get(seg);
    }
    public static void dwImpersonationLevel$set( MemorySegment seg, int x) {
        _COAUTHINFO.dwImpersonationLevel$VH.set(seg, x);
    }
    public static int dwImpersonationLevel$get(MemorySegment seg, long index) {
        return (int)_COAUTHINFO.dwImpersonationLevel$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwImpersonationLevel$set(MemorySegment seg, long index, int x) {
        _COAUTHINFO.dwImpersonationLevel$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pAuthIdentityData$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pAuthIdentityData"));
    public static VarHandle pAuthIdentityData$VH() {
        return _COAUTHINFO.pAuthIdentityData$VH;
    }
    public static MemoryAddress pAuthIdentityData$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_COAUTHINFO.pAuthIdentityData$VH.get(seg);
    }
    public static void pAuthIdentityData$set( MemorySegment seg, MemoryAddress x) {
        _COAUTHINFO.pAuthIdentityData$VH.set(seg, x);
    }
    public static MemoryAddress pAuthIdentityData$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_COAUTHINFO.pAuthIdentityData$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pAuthIdentityData$set(MemorySegment seg, long index, MemoryAddress x) {
        _COAUTHINFO.pAuthIdentityData$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwCapabilities$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwCapabilities"));
    public static VarHandle dwCapabilities$VH() {
        return _COAUTHINFO.dwCapabilities$VH;
    }
    public static int dwCapabilities$get(MemorySegment seg) {
        return (int)_COAUTHINFO.dwCapabilities$VH.get(seg);
    }
    public static void dwCapabilities$set( MemorySegment seg, int x) {
        _COAUTHINFO.dwCapabilities$VH.set(seg, x);
    }
    public static int dwCapabilities$get(MemorySegment seg, long index) {
        return (int)_COAUTHINFO.dwCapabilities$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwCapabilities$set(MemorySegment seg, long index, int x) {
        _COAUTHINFO.dwCapabilities$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


