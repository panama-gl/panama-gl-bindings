// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNWGLUSEFONTOUTLINESWPROC {

    int apply(java.lang.foreign.MemoryAddress hDC, int first, int count, int listBase, float deviation, float extrusion, int format, java.lang.foreign.MemoryAddress lpgmf);
    static MemorySegment allocate(PFNWGLUSEFONTOUTLINESWPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNWGLUSEFONTOUTLINESWPROC.class, fi, constants$1376.PFNWGLUSEFONTOUTLINESWPROC$FUNC, session);
    }
    static PFNWGLUSEFONTOUTLINESWPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _hDC, int _first, int _count, int _listBase, float _deviation, float _extrusion, int _format, java.lang.foreign.MemoryAddress _lpgmf) -> {
            try {
                return (int)constants$1376.PFNWGLUSEFONTOUTLINESWPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_hDC, _first, _count, _listBase, _deviation, _extrusion, _format, (java.lang.foreign.Addressable)_lpgmf);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


