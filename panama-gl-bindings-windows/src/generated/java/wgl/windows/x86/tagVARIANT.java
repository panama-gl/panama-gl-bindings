// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * struct tagVARIANT {
 *     union {
 *         struct {
 *             VARTYPE vt;
 *             WORD wReserved1;
 *             WORD wReserved2;
 *             WORD wReserved3;
 *             union {
 *                 LONGLONG llVal;
 *                 LONG lVal;
 *                 BYTE bVal;
 *                 SHORT iVal;
 *                 FLOAT fltVal;
 *                 DOUBLE dblVal;
 *                 VARIANT_BOOL boolVal;
 *                 VARIANT_BOOL __OBSOLETE__VARIANT_BOOL;
 *                 SCODE scode;
 *                 CY cyVal;
 *                 DATE date;
 *                 BSTR bstrVal;
 *                 IUnknown *punkVal;
 *                 IDispatch *pdispVal;
 *                 SAFEARRAY *parray;
 *                 BYTE *pbVal;
 *                 SHORT *piVal;
 *                 LONG *plVal;
 *                 LONGLONG *pllVal;
 *                 FLOAT *pfltVal;
 *                 DOUBLE *pdblVal;
 *                 VARIANT_BOOL *pboolVal;
 *                 VARIANT_BOOL *__OBSOLETE__VARIANT_PBOOL;
 *                 SCODE *pscode;
 *                 CY *pcyVal;
 *                 DATE *pdate;
 *                 BSTR *pbstrVal;
 *                 IUnknown **ppunkVal;
 *                 IDispatch **ppdispVal;
 *                 SAFEARRAY **pparray;
 *                 VARIANT *pvarVal;
 *                 PVOID byref;
 *                 CHAR cVal;
 *                 USHORT uiVal;
 *                 ULONG ulVal;
 *                 ULONGLONG ullVal;
 *                 INT intVal;
 *                 UINT uintVal;
 *                 DECIMAL *pdecVal;
 *                 CHAR *pcVal;
 *                 USHORT *puiVal;
 *                 ULONG *pulVal;
 *                 ULONGLONG *pullVal;
 *                 INT *pintVal;
 *                 UINT *puintVal;
 *                 struct {
 *                     PVOID pvRecord;
 *                     IRecordInfo *pRecInfo;
 *                 };
 *             };
 *         };
 *         DECIMAL decVal;
 *     };
 * }
 * }
 */
public class tagVARIANT {

    tagVARIANT() {
        // Should not be called directly
    }

    private static final GroupLayout $LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                wgl_h.C_SHORT.withName("vt"),
                wgl_h.C_SHORT.withName("wReserved1"),
                wgl_h.C_SHORT.withName("wReserved2"),
                wgl_h.C_SHORT.withName("wReserved3"),
                MemoryLayout.unionLayout(
                    wgl_h.C_LONG_LONG.withName("llVal"),
                    wgl_h.C_LONG.withName("lVal"),
                    wgl_h.C_CHAR.withName("bVal"),
                    wgl_h.C_SHORT.withName("iVal"),
                    wgl_h.C_FLOAT.withName("fltVal"),
                    wgl_h.C_DOUBLE.withName("dblVal"),
                    wgl_h.C_SHORT.withName("boolVal"),
                    wgl_h.C_SHORT.withName("__OBSOLETE__VARIANT_BOOL"),
                    wgl_h.C_LONG.withName("scode"),
                    tagCY.layout().withName("cyVal"),
                    wgl_h.C_DOUBLE.withName("date"),
                    wgl_h.C_POINTER.withName("bstrVal"),
                    wgl_h.C_POINTER.withName("punkVal"),
                    wgl_h.C_POINTER.withName("pdispVal"),
                    wgl_h.C_POINTER.withName("parray"),
                    wgl_h.C_POINTER.withName("pbVal"),
                    wgl_h.C_POINTER.withName("piVal"),
                    wgl_h.C_POINTER.withName("plVal"),
                    wgl_h.C_POINTER.withName("pllVal"),
                    wgl_h.C_POINTER.withName("pfltVal"),
                    wgl_h.C_POINTER.withName("pdblVal"),
                    wgl_h.C_POINTER.withName("pboolVal"),
                    wgl_h.C_POINTER.withName("__OBSOLETE__VARIANT_PBOOL"),
                    wgl_h.C_POINTER.withName("pscode"),
                    wgl_h.C_POINTER.withName("pcyVal"),
                    wgl_h.C_POINTER.withName("pdate"),
                    wgl_h.C_POINTER.withName("pbstrVal"),
                    wgl_h.C_POINTER.withName("ppunkVal"),
                    wgl_h.C_POINTER.withName("ppdispVal"),
                    wgl_h.C_POINTER.withName("pparray"),
                    wgl_h.C_POINTER.withName("pvarVal"),
                    wgl_h.C_POINTER.withName("byref"),
                    wgl_h.C_CHAR.withName("cVal"),
                    wgl_h.C_SHORT.withName("uiVal"),
                    wgl_h.C_LONG.withName("ulVal"),
                    wgl_h.C_LONG_LONG.withName("ullVal"),
                    wgl_h.C_INT.withName("intVal"),
                    wgl_h.C_INT.withName("uintVal"),
                    wgl_h.C_POINTER.withName("pdecVal"),
                    wgl_h.C_POINTER.withName("pcVal"),
                    wgl_h.C_POINTER.withName("puiVal"),
                    wgl_h.C_POINTER.withName("pulVal"),
                    wgl_h.C_POINTER.withName("pullVal"),
                    wgl_h.C_POINTER.withName("pintVal"),
                    wgl_h.C_POINTER.withName("puintVal"),
                    MemoryLayout.structLayout(
                        wgl_h.C_POINTER.withName("pvRecord"),
                        wgl_h.C_POINTER.withName("pRecInfo")
                    ).withName("$anon$525:17")
                ).withName("$anon$478:13")
            ).withName("$anon$472:9"),
            tagDEC.layout().withName("decVal")
        ).withName("$anon$470:5")
    ).withName("tagVARIANT");

    /**
     * The layout of this struct
     */
    public static final GroupLayout layout() {
        return $LAYOUT;
    }

    private static final OfShort vt$LAYOUT = (OfShort)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("vt"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VARTYPE vt
     * }
     */
    public static final OfShort vt$layout() {
        return vt$LAYOUT;
    }

    private static final long vt$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VARTYPE vt
     * }
     */
    public static final long vt$offset() {
        return vt$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VARTYPE vt
     * }
     */
    public static short vt(MemorySegment struct) {
        return struct.get(vt$LAYOUT, vt$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VARTYPE vt
     * }
     */
    public static void vt(MemorySegment struct, short fieldValue) {
        struct.set(vt$LAYOUT, vt$OFFSET, fieldValue);
    }

    private static final OfShort wReserved1$LAYOUT = (OfShort)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("wReserved1"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * WORD wReserved1
     * }
     */
    public static final OfShort wReserved1$layout() {
        return wReserved1$LAYOUT;
    }

    private static final long wReserved1$OFFSET = 2;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * WORD wReserved1
     * }
     */
    public static final long wReserved1$offset() {
        return wReserved1$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * WORD wReserved1
     * }
     */
    public static short wReserved1(MemorySegment struct) {
        return struct.get(wReserved1$LAYOUT, wReserved1$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * WORD wReserved1
     * }
     */
    public static void wReserved1(MemorySegment struct, short fieldValue) {
        struct.set(wReserved1$LAYOUT, wReserved1$OFFSET, fieldValue);
    }

    private static final OfShort wReserved2$LAYOUT = (OfShort)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("wReserved2"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * WORD wReserved2
     * }
     */
    public static final OfShort wReserved2$layout() {
        return wReserved2$LAYOUT;
    }

    private static final long wReserved2$OFFSET = 4;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * WORD wReserved2
     * }
     */
    public static final long wReserved2$offset() {
        return wReserved2$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * WORD wReserved2
     * }
     */
    public static short wReserved2(MemorySegment struct) {
        return struct.get(wReserved2$LAYOUT, wReserved2$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * WORD wReserved2
     * }
     */
    public static void wReserved2(MemorySegment struct, short fieldValue) {
        struct.set(wReserved2$LAYOUT, wReserved2$OFFSET, fieldValue);
    }

    private static final OfShort wReserved3$LAYOUT = (OfShort)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("wReserved3"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * WORD wReserved3
     * }
     */
    public static final OfShort wReserved3$layout() {
        return wReserved3$LAYOUT;
    }

    private static final long wReserved3$OFFSET = 6;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * WORD wReserved3
     * }
     */
    public static final long wReserved3$offset() {
        return wReserved3$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * WORD wReserved3
     * }
     */
    public static short wReserved3(MemorySegment struct) {
        return struct.get(wReserved3$LAYOUT, wReserved3$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * WORD wReserved3
     * }
     */
    public static void wReserved3(MemorySegment struct, short fieldValue) {
        struct.set(wReserved3$LAYOUT, wReserved3$OFFSET, fieldValue);
    }

    private static final OfLong llVal$LAYOUT = (OfLong)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("llVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * LONGLONG llVal
     * }
     */
    public static final OfLong llVal$layout() {
        return llVal$LAYOUT;
    }

    private static final long llVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * LONGLONG llVal
     * }
     */
    public static final long llVal$offset() {
        return llVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * LONGLONG llVal
     * }
     */
    public static long llVal(MemorySegment struct) {
        return struct.get(llVal$LAYOUT, llVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * LONGLONG llVal
     * }
     */
    public static void llVal(MemorySegment struct, long fieldValue) {
        struct.set(llVal$LAYOUT, llVal$OFFSET, fieldValue);
    }

    private static final OfInt lVal$LAYOUT = (OfInt)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("lVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * LONG lVal
     * }
     */
    public static final OfInt lVal$layout() {
        return lVal$LAYOUT;
    }

    private static final long lVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * LONG lVal
     * }
     */
    public static final long lVal$offset() {
        return lVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * LONG lVal
     * }
     */
    public static int lVal(MemorySegment struct) {
        return struct.get(lVal$LAYOUT, lVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * LONG lVal
     * }
     */
    public static void lVal(MemorySegment struct, int fieldValue) {
        struct.set(lVal$LAYOUT, lVal$OFFSET, fieldValue);
    }

    private static final OfByte bVal$LAYOUT = (OfByte)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("bVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BYTE bVal
     * }
     */
    public static final OfByte bVal$layout() {
        return bVal$LAYOUT;
    }

    private static final long bVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BYTE bVal
     * }
     */
    public static final long bVal$offset() {
        return bVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BYTE bVal
     * }
     */
    public static byte bVal(MemorySegment struct) {
        return struct.get(bVal$LAYOUT, bVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BYTE bVal
     * }
     */
    public static void bVal(MemorySegment struct, byte fieldValue) {
        struct.set(bVal$LAYOUT, bVal$OFFSET, fieldValue);
    }

    private static final OfShort iVal$LAYOUT = (OfShort)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("iVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * SHORT iVal
     * }
     */
    public static final OfShort iVal$layout() {
        return iVal$LAYOUT;
    }

    private static final long iVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * SHORT iVal
     * }
     */
    public static final long iVal$offset() {
        return iVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * SHORT iVal
     * }
     */
    public static short iVal(MemorySegment struct) {
        return struct.get(iVal$LAYOUT, iVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * SHORT iVal
     * }
     */
    public static void iVal(MemorySegment struct, short fieldValue) {
        struct.set(iVal$LAYOUT, iVal$OFFSET, fieldValue);
    }

    private static final OfFloat fltVal$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("fltVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * FLOAT fltVal
     * }
     */
    public static final OfFloat fltVal$layout() {
        return fltVal$LAYOUT;
    }

    private static final long fltVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * FLOAT fltVal
     * }
     */
    public static final long fltVal$offset() {
        return fltVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * FLOAT fltVal
     * }
     */
    public static float fltVal(MemorySegment struct) {
        return struct.get(fltVal$LAYOUT, fltVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * FLOAT fltVal
     * }
     */
    public static void fltVal(MemorySegment struct, float fieldValue) {
        struct.set(fltVal$LAYOUT, fltVal$OFFSET, fieldValue);
    }

    private static final OfDouble dblVal$LAYOUT = (OfDouble)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("dblVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * DOUBLE dblVal
     * }
     */
    public static final OfDouble dblVal$layout() {
        return dblVal$LAYOUT;
    }

    private static final long dblVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * DOUBLE dblVal
     * }
     */
    public static final long dblVal$offset() {
        return dblVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * DOUBLE dblVal
     * }
     */
    public static double dblVal(MemorySegment struct) {
        return struct.get(dblVal$LAYOUT, dblVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * DOUBLE dblVal
     * }
     */
    public static void dblVal(MemorySegment struct, double fieldValue) {
        struct.set(dblVal$LAYOUT, dblVal$OFFSET, fieldValue);
    }

    private static final OfShort boolVal$LAYOUT = (OfShort)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("boolVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VARIANT_BOOL boolVal
     * }
     */
    public static final OfShort boolVal$layout() {
        return boolVal$LAYOUT;
    }

    private static final long boolVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VARIANT_BOOL boolVal
     * }
     */
    public static final long boolVal$offset() {
        return boolVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VARIANT_BOOL boolVal
     * }
     */
    public static short boolVal(MemorySegment struct) {
        return struct.get(boolVal$LAYOUT, boolVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VARIANT_BOOL boolVal
     * }
     */
    public static void boolVal(MemorySegment struct, short fieldValue) {
        struct.set(boolVal$LAYOUT, boolVal$OFFSET, fieldValue);
    }

    private static final OfShort __OBSOLETE__VARIANT_BOOL$LAYOUT = (OfShort)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("__OBSOLETE__VARIANT_BOOL"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VARIANT_BOOL __OBSOLETE__VARIANT_BOOL
     * }
     */
    public static final OfShort __OBSOLETE__VARIANT_BOOL$layout() {
        return __OBSOLETE__VARIANT_BOOL$LAYOUT;
    }

    private static final long __OBSOLETE__VARIANT_BOOL$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VARIANT_BOOL __OBSOLETE__VARIANT_BOOL
     * }
     */
    public static final long __OBSOLETE__VARIANT_BOOL$offset() {
        return __OBSOLETE__VARIANT_BOOL$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VARIANT_BOOL __OBSOLETE__VARIANT_BOOL
     * }
     */
    public static short __OBSOLETE__VARIANT_BOOL(MemorySegment struct) {
        return struct.get(__OBSOLETE__VARIANT_BOOL$LAYOUT, __OBSOLETE__VARIANT_BOOL$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VARIANT_BOOL __OBSOLETE__VARIANT_BOOL
     * }
     */
    public static void __OBSOLETE__VARIANT_BOOL(MemorySegment struct, short fieldValue) {
        struct.set(__OBSOLETE__VARIANT_BOOL$LAYOUT, __OBSOLETE__VARIANT_BOOL$OFFSET, fieldValue);
    }

    private static final OfInt scode$LAYOUT = (OfInt)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("scode"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * SCODE scode
     * }
     */
    public static final OfInt scode$layout() {
        return scode$LAYOUT;
    }

    private static final long scode$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * SCODE scode
     * }
     */
    public static final long scode$offset() {
        return scode$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * SCODE scode
     * }
     */
    public static int scode(MemorySegment struct) {
        return struct.get(scode$LAYOUT, scode$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * SCODE scode
     * }
     */
    public static void scode(MemorySegment struct, int fieldValue) {
        struct.set(scode$LAYOUT, scode$OFFSET, fieldValue);
    }

    private static final GroupLayout cyVal$LAYOUT = (GroupLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("cyVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * CY cyVal
     * }
     */
    public static final GroupLayout cyVal$layout() {
        return cyVal$LAYOUT;
    }

    private static final long cyVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * CY cyVal
     * }
     */
    public static final long cyVal$offset() {
        return cyVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * CY cyVal
     * }
     */
    public static MemorySegment cyVal(MemorySegment struct) {
        return struct.asSlice(cyVal$OFFSET, cyVal$LAYOUT.byteSize());
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * CY cyVal
     * }
     */
    public static void cyVal(MemorySegment struct, MemorySegment fieldValue) {
        MemorySegment.copy(fieldValue, 0L, struct, cyVal$OFFSET, cyVal$LAYOUT.byteSize());
    }

    private static final OfDouble date$LAYOUT = (OfDouble)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("date"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * DATE date
     * }
     */
    public static final OfDouble date$layout() {
        return date$LAYOUT;
    }

    private static final long date$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * DATE date
     * }
     */
    public static final long date$offset() {
        return date$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * DATE date
     * }
     */
    public static double date(MemorySegment struct) {
        return struct.get(date$LAYOUT, date$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * DATE date
     * }
     */
    public static void date(MemorySegment struct, double fieldValue) {
        struct.set(date$LAYOUT, date$OFFSET, fieldValue);
    }

    private static final AddressLayout bstrVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("bstrVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BSTR bstrVal
     * }
     */
    public static final AddressLayout bstrVal$layout() {
        return bstrVal$LAYOUT;
    }

    private static final long bstrVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BSTR bstrVal
     * }
     */
    public static final long bstrVal$offset() {
        return bstrVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BSTR bstrVal
     * }
     */
    public static MemorySegment bstrVal(MemorySegment struct) {
        return struct.get(bstrVal$LAYOUT, bstrVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BSTR bstrVal
     * }
     */
    public static void bstrVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(bstrVal$LAYOUT, bstrVal$OFFSET, fieldValue);
    }

    private static final AddressLayout punkVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("punkVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * IUnknown *punkVal
     * }
     */
    public static final AddressLayout punkVal$layout() {
        return punkVal$LAYOUT;
    }

    private static final long punkVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * IUnknown *punkVal
     * }
     */
    public static final long punkVal$offset() {
        return punkVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * IUnknown *punkVal
     * }
     */
    public static MemorySegment punkVal(MemorySegment struct) {
        return struct.get(punkVal$LAYOUT, punkVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * IUnknown *punkVal
     * }
     */
    public static void punkVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(punkVal$LAYOUT, punkVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pdispVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pdispVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * IDispatch *pdispVal
     * }
     */
    public static final AddressLayout pdispVal$layout() {
        return pdispVal$LAYOUT;
    }

    private static final long pdispVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * IDispatch *pdispVal
     * }
     */
    public static final long pdispVal$offset() {
        return pdispVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * IDispatch *pdispVal
     * }
     */
    public static MemorySegment pdispVal(MemorySegment struct) {
        return struct.get(pdispVal$LAYOUT, pdispVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * IDispatch *pdispVal
     * }
     */
    public static void pdispVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pdispVal$LAYOUT, pdispVal$OFFSET, fieldValue);
    }

    private static final AddressLayout parray$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("parray"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * SAFEARRAY *parray
     * }
     */
    public static final AddressLayout parray$layout() {
        return parray$LAYOUT;
    }

    private static final long parray$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * SAFEARRAY *parray
     * }
     */
    public static final long parray$offset() {
        return parray$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * SAFEARRAY *parray
     * }
     */
    public static MemorySegment parray(MemorySegment struct) {
        return struct.get(parray$LAYOUT, parray$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * SAFEARRAY *parray
     * }
     */
    public static void parray(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(parray$LAYOUT, parray$OFFSET, fieldValue);
    }

    private static final AddressLayout pbVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pbVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BYTE *pbVal
     * }
     */
    public static final AddressLayout pbVal$layout() {
        return pbVal$LAYOUT;
    }

    private static final long pbVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BYTE *pbVal
     * }
     */
    public static final long pbVal$offset() {
        return pbVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BYTE *pbVal
     * }
     */
    public static MemorySegment pbVal(MemorySegment struct) {
        return struct.get(pbVal$LAYOUT, pbVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BYTE *pbVal
     * }
     */
    public static void pbVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pbVal$LAYOUT, pbVal$OFFSET, fieldValue);
    }

    private static final AddressLayout piVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("piVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * SHORT *piVal
     * }
     */
    public static final AddressLayout piVal$layout() {
        return piVal$LAYOUT;
    }

    private static final long piVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * SHORT *piVal
     * }
     */
    public static final long piVal$offset() {
        return piVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * SHORT *piVal
     * }
     */
    public static MemorySegment piVal(MemorySegment struct) {
        return struct.get(piVal$LAYOUT, piVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * SHORT *piVal
     * }
     */
    public static void piVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(piVal$LAYOUT, piVal$OFFSET, fieldValue);
    }

    private static final AddressLayout plVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("plVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * LONG *plVal
     * }
     */
    public static final AddressLayout plVal$layout() {
        return plVal$LAYOUT;
    }

    private static final long plVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * LONG *plVal
     * }
     */
    public static final long plVal$offset() {
        return plVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * LONG *plVal
     * }
     */
    public static MemorySegment plVal(MemorySegment struct) {
        return struct.get(plVal$LAYOUT, plVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * LONG *plVal
     * }
     */
    public static void plVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(plVal$LAYOUT, plVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pllVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pllVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * LONGLONG *pllVal
     * }
     */
    public static final AddressLayout pllVal$layout() {
        return pllVal$LAYOUT;
    }

    private static final long pllVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * LONGLONG *pllVal
     * }
     */
    public static final long pllVal$offset() {
        return pllVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * LONGLONG *pllVal
     * }
     */
    public static MemorySegment pllVal(MemorySegment struct) {
        return struct.get(pllVal$LAYOUT, pllVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * LONGLONG *pllVal
     * }
     */
    public static void pllVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pllVal$LAYOUT, pllVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pfltVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pfltVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * FLOAT *pfltVal
     * }
     */
    public static final AddressLayout pfltVal$layout() {
        return pfltVal$LAYOUT;
    }

    private static final long pfltVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * FLOAT *pfltVal
     * }
     */
    public static final long pfltVal$offset() {
        return pfltVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * FLOAT *pfltVal
     * }
     */
    public static MemorySegment pfltVal(MemorySegment struct) {
        return struct.get(pfltVal$LAYOUT, pfltVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * FLOAT *pfltVal
     * }
     */
    public static void pfltVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pfltVal$LAYOUT, pfltVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pdblVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pdblVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * DOUBLE *pdblVal
     * }
     */
    public static final AddressLayout pdblVal$layout() {
        return pdblVal$LAYOUT;
    }

    private static final long pdblVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * DOUBLE *pdblVal
     * }
     */
    public static final long pdblVal$offset() {
        return pdblVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * DOUBLE *pdblVal
     * }
     */
    public static MemorySegment pdblVal(MemorySegment struct) {
        return struct.get(pdblVal$LAYOUT, pdblVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * DOUBLE *pdblVal
     * }
     */
    public static void pdblVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pdblVal$LAYOUT, pdblVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pboolVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pboolVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VARIANT_BOOL *pboolVal
     * }
     */
    public static final AddressLayout pboolVal$layout() {
        return pboolVal$LAYOUT;
    }

    private static final long pboolVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VARIANT_BOOL *pboolVal
     * }
     */
    public static final long pboolVal$offset() {
        return pboolVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VARIANT_BOOL *pboolVal
     * }
     */
    public static MemorySegment pboolVal(MemorySegment struct) {
        return struct.get(pboolVal$LAYOUT, pboolVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VARIANT_BOOL *pboolVal
     * }
     */
    public static void pboolVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pboolVal$LAYOUT, pboolVal$OFFSET, fieldValue);
    }

    private static final AddressLayout __OBSOLETE__VARIANT_PBOOL$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("__OBSOLETE__VARIANT_PBOOL"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VARIANT_BOOL *__OBSOLETE__VARIANT_PBOOL
     * }
     */
    public static final AddressLayout __OBSOLETE__VARIANT_PBOOL$layout() {
        return __OBSOLETE__VARIANT_PBOOL$LAYOUT;
    }

    private static final long __OBSOLETE__VARIANT_PBOOL$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VARIANT_BOOL *__OBSOLETE__VARIANT_PBOOL
     * }
     */
    public static final long __OBSOLETE__VARIANT_PBOOL$offset() {
        return __OBSOLETE__VARIANT_PBOOL$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VARIANT_BOOL *__OBSOLETE__VARIANT_PBOOL
     * }
     */
    public static MemorySegment __OBSOLETE__VARIANT_PBOOL(MemorySegment struct) {
        return struct.get(__OBSOLETE__VARIANT_PBOOL$LAYOUT, __OBSOLETE__VARIANT_PBOOL$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VARIANT_BOOL *__OBSOLETE__VARIANT_PBOOL
     * }
     */
    public static void __OBSOLETE__VARIANT_PBOOL(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(__OBSOLETE__VARIANT_PBOOL$LAYOUT, __OBSOLETE__VARIANT_PBOOL$OFFSET, fieldValue);
    }

    private static final AddressLayout pscode$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pscode"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * SCODE *pscode
     * }
     */
    public static final AddressLayout pscode$layout() {
        return pscode$LAYOUT;
    }

    private static final long pscode$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * SCODE *pscode
     * }
     */
    public static final long pscode$offset() {
        return pscode$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * SCODE *pscode
     * }
     */
    public static MemorySegment pscode(MemorySegment struct) {
        return struct.get(pscode$LAYOUT, pscode$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * SCODE *pscode
     * }
     */
    public static void pscode(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pscode$LAYOUT, pscode$OFFSET, fieldValue);
    }

    private static final AddressLayout pcyVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pcyVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * CY *pcyVal
     * }
     */
    public static final AddressLayout pcyVal$layout() {
        return pcyVal$LAYOUT;
    }

    private static final long pcyVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * CY *pcyVal
     * }
     */
    public static final long pcyVal$offset() {
        return pcyVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * CY *pcyVal
     * }
     */
    public static MemorySegment pcyVal(MemorySegment struct) {
        return struct.get(pcyVal$LAYOUT, pcyVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * CY *pcyVal
     * }
     */
    public static void pcyVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pcyVal$LAYOUT, pcyVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pdate$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pdate"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * DATE *pdate
     * }
     */
    public static final AddressLayout pdate$layout() {
        return pdate$LAYOUT;
    }

    private static final long pdate$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * DATE *pdate
     * }
     */
    public static final long pdate$offset() {
        return pdate$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * DATE *pdate
     * }
     */
    public static MemorySegment pdate(MemorySegment struct) {
        return struct.get(pdate$LAYOUT, pdate$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * DATE *pdate
     * }
     */
    public static void pdate(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pdate$LAYOUT, pdate$OFFSET, fieldValue);
    }

    private static final AddressLayout pbstrVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pbstrVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * BSTR *pbstrVal
     * }
     */
    public static final AddressLayout pbstrVal$layout() {
        return pbstrVal$LAYOUT;
    }

    private static final long pbstrVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * BSTR *pbstrVal
     * }
     */
    public static final long pbstrVal$offset() {
        return pbstrVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * BSTR *pbstrVal
     * }
     */
    public static MemorySegment pbstrVal(MemorySegment struct) {
        return struct.get(pbstrVal$LAYOUT, pbstrVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * BSTR *pbstrVal
     * }
     */
    public static void pbstrVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pbstrVal$LAYOUT, pbstrVal$OFFSET, fieldValue);
    }

    private static final AddressLayout ppunkVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("ppunkVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * IUnknown **ppunkVal
     * }
     */
    public static final AddressLayout ppunkVal$layout() {
        return ppunkVal$LAYOUT;
    }

    private static final long ppunkVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * IUnknown **ppunkVal
     * }
     */
    public static final long ppunkVal$offset() {
        return ppunkVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * IUnknown **ppunkVal
     * }
     */
    public static MemorySegment ppunkVal(MemorySegment struct) {
        return struct.get(ppunkVal$LAYOUT, ppunkVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * IUnknown **ppunkVal
     * }
     */
    public static void ppunkVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(ppunkVal$LAYOUT, ppunkVal$OFFSET, fieldValue);
    }

    private static final AddressLayout ppdispVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("ppdispVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * IDispatch **ppdispVal
     * }
     */
    public static final AddressLayout ppdispVal$layout() {
        return ppdispVal$LAYOUT;
    }

    private static final long ppdispVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * IDispatch **ppdispVal
     * }
     */
    public static final long ppdispVal$offset() {
        return ppdispVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * IDispatch **ppdispVal
     * }
     */
    public static MemorySegment ppdispVal(MemorySegment struct) {
        return struct.get(ppdispVal$LAYOUT, ppdispVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * IDispatch **ppdispVal
     * }
     */
    public static void ppdispVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(ppdispVal$LAYOUT, ppdispVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pparray$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pparray"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * SAFEARRAY **pparray
     * }
     */
    public static final AddressLayout pparray$layout() {
        return pparray$LAYOUT;
    }

    private static final long pparray$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * SAFEARRAY **pparray
     * }
     */
    public static final long pparray$offset() {
        return pparray$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * SAFEARRAY **pparray
     * }
     */
    public static MemorySegment pparray(MemorySegment struct) {
        return struct.get(pparray$LAYOUT, pparray$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * SAFEARRAY **pparray
     * }
     */
    public static void pparray(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pparray$LAYOUT, pparray$OFFSET, fieldValue);
    }

    private static final AddressLayout pvarVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pvarVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VARIANT *pvarVal
     * }
     */
    public static final AddressLayout pvarVal$layout() {
        return pvarVal$LAYOUT;
    }

    private static final long pvarVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VARIANT *pvarVal
     * }
     */
    public static final long pvarVal$offset() {
        return pvarVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VARIANT *pvarVal
     * }
     */
    public static MemorySegment pvarVal(MemorySegment struct) {
        return struct.get(pvarVal$LAYOUT, pvarVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VARIANT *pvarVal
     * }
     */
    public static void pvarVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pvarVal$LAYOUT, pvarVal$OFFSET, fieldValue);
    }

    private static final AddressLayout byref$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("byref"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * PVOID byref
     * }
     */
    public static final AddressLayout byref$layout() {
        return byref$LAYOUT;
    }

    private static final long byref$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * PVOID byref
     * }
     */
    public static final long byref$offset() {
        return byref$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * PVOID byref
     * }
     */
    public static MemorySegment byref(MemorySegment struct) {
        return struct.get(byref$LAYOUT, byref$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * PVOID byref
     * }
     */
    public static void byref(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(byref$LAYOUT, byref$OFFSET, fieldValue);
    }

    private static final OfByte cVal$LAYOUT = (OfByte)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("cVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * CHAR cVal
     * }
     */
    public static final OfByte cVal$layout() {
        return cVal$LAYOUT;
    }

    private static final long cVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * CHAR cVal
     * }
     */
    public static final long cVal$offset() {
        return cVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * CHAR cVal
     * }
     */
    public static byte cVal(MemorySegment struct) {
        return struct.get(cVal$LAYOUT, cVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * CHAR cVal
     * }
     */
    public static void cVal(MemorySegment struct, byte fieldValue) {
        struct.set(cVal$LAYOUT, cVal$OFFSET, fieldValue);
    }

    private static final OfShort uiVal$LAYOUT = (OfShort)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("uiVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * USHORT uiVal
     * }
     */
    public static final OfShort uiVal$layout() {
        return uiVal$LAYOUT;
    }

    private static final long uiVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * USHORT uiVal
     * }
     */
    public static final long uiVal$offset() {
        return uiVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * USHORT uiVal
     * }
     */
    public static short uiVal(MemorySegment struct) {
        return struct.get(uiVal$LAYOUT, uiVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * USHORT uiVal
     * }
     */
    public static void uiVal(MemorySegment struct, short fieldValue) {
        struct.set(uiVal$LAYOUT, uiVal$OFFSET, fieldValue);
    }

    private static final OfInt ulVal$LAYOUT = (OfInt)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("ulVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * ULONG ulVal
     * }
     */
    public static final OfInt ulVal$layout() {
        return ulVal$LAYOUT;
    }

    private static final long ulVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * ULONG ulVal
     * }
     */
    public static final long ulVal$offset() {
        return ulVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * ULONG ulVal
     * }
     */
    public static int ulVal(MemorySegment struct) {
        return struct.get(ulVal$LAYOUT, ulVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * ULONG ulVal
     * }
     */
    public static void ulVal(MemorySegment struct, int fieldValue) {
        struct.set(ulVal$LAYOUT, ulVal$OFFSET, fieldValue);
    }

    private static final OfLong ullVal$LAYOUT = (OfLong)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("ullVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * ULONGLONG ullVal
     * }
     */
    public static final OfLong ullVal$layout() {
        return ullVal$LAYOUT;
    }

    private static final long ullVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * ULONGLONG ullVal
     * }
     */
    public static final long ullVal$offset() {
        return ullVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * ULONGLONG ullVal
     * }
     */
    public static long ullVal(MemorySegment struct) {
        return struct.get(ullVal$LAYOUT, ullVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * ULONGLONG ullVal
     * }
     */
    public static void ullVal(MemorySegment struct, long fieldValue) {
        struct.set(ullVal$LAYOUT, ullVal$OFFSET, fieldValue);
    }

    private static final OfInt intVal$LAYOUT = (OfInt)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("intVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * INT intVal
     * }
     */
    public static final OfInt intVal$layout() {
        return intVal$LAYOUT;
    }

    private static final long intVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * INT intVal
     * }
     */
    public static final long intVal$offset() {
        return intVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * INT intVal
     * }
     */
    public static int intVal(MemorySegment struct) {
        return struct.get(intVal$LAYOUT, intVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * INT intVal
     * }
     */
    public static void intVal(MemorySegment struct, int fieldValue) {
        struct.set(intVal$LAYOUT, intVal$OFFSET, fieldValue);
    }

    private static final OfInt uintVal$LAYOUT = (OfInt)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("uintVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * UINT uintVal
     * }
     */
    public static final OfInt uintVal$layout() {
        return uintVal$LAYOUT;
    }

    private static final long uintVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * UINT uintVal
     * }
     */
    public static final long uintVal$offset() {
        return uintVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * UINT uintVal
     * }
     */
    public static int uintVal(MemorySegment struct) {
        return struct.get(uintVal$LAYOUT, uintVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * UINT uintVal
     * }
     */
    public static void uintVal(MemorySegment struct, int fieldValue) {
        struct.set(uintVal$LAYOUT, uintVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pdecVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pdecVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * DECIMAL *pdecVal
     * }
     */
    public static final AddressLayout pdecVal$layout() {
        return pdecVal$LAYOUT;
    }

    private static final long pdecVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * DECIMAL *pdecVal
     * }
     */
    public static final long pdecVal$offset() {
        return pdecVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * DECIMAL *pdecVal
     * }
     */
    public static MemorySegment pdecVal(MemorySegment struct) {
        return struct.get(pdecVal$LAYOUT, pdecVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * DECIMAL *pdecVal
     * }
     */
    public static void pdecVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pdecVal$LAYOUT, pdecVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pcVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pcVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * CHAR *pcVal
     * }
     */
    public static final AddressLayout pcVal$layout() {
        return pcVal$LAYOUT;
    }

    private static final long pcVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * CHAR *pcVal
     * }
     */
    public static final long pcVal$offset() {
        return pcVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * CHAR *pcVal
     * }
     */
    public static MemorySegment pcVal(MemorySegment struct) {
        return struct.get(pcVal$LAYOUT, pcVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * CHAR *pcVal
     * }
     */
    public static void pcVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pcVal$LAYOUT, pcVal$OFFSET, fieldValue);
    }

    private static final AddressLayout puiVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("puiVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * USHORT *puiVal
     * }
     */
    public static final AddressLayout puiVal$layout() {
        return puiVal$LAYOUT;
    }

    private static final long puiVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * USHORT *puiVal
     * }
     */
    public static final long puiVal$offset() {
        return puiVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * USHORT *puiVal
     * }
     */
    public static MemorySegment puiVal(MemorySegment struct) {
        return struct.get(puiVal$LAYOUT, puiVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * USHORT *puiVal
     * }
     */
    public static void puiVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(puiVal$LAYOUT, puiVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pulVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pulVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * ULONG *pulVal
     * }
     */
    public static final AddressLayout pulVal$layout() {
        return pulVal$LAYOUT;
    }

    private static final long pulVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * ULONG *pulVal
     * }
     */
    public static final long pulVal$offset() {
        return pulVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * ULONG *pulVal
     * }
     */
    public static MemorySegment pulVal(MemorySegment struct) {
        return struct.get(pulVal$LAYOUT, pulVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * ULONG *pulVal
     * }
     */
    public static void pulVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pulVal$LAYOUT, pulVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pullVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pullVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * ULONGLONG *pullVal
     * }
     */
    public static final AddressLayout pullVal$layout() {
        return pullVal$LAYOUT;
    }

    private static final long pullVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * ULONGLONG *pullVal
     * }
     */
    public static final long pullVal$offset() {
        return pullVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * ULONGLONG *pullVal
     * }
     */
    public static MemorySegment pullVal(MemorySegment struct) {
        return struct.get(pullVal$LAYOUT, pullVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * ULONGLONG *pullVal
     * }
     */
    public static void pullVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pullVal$LAYOUT, pullVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pintVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("pintVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * INT *pintVal
     * }
     */
    public static final AddressLayout pintVal$layout() {
        return pintVal$LAYOUT;
    }

    private static final long pintVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * INT *pintVal
     * }
     */
    public static final long pintVal$offset() {
        return pintVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * INT *pintVal
     * }
     */
    public static MemorySegment pintVal(MemorySegment struct) {
        return struct.get(pintVal$LAYOUT, pintVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * INT *pintVal
     * }
     */
    public static void pintVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pintVal$LAYOUT, pintVal$OFFSET, fieldValue);
    }

    private static final AddressLayout puintVal$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("puintVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * UINT *puintVal
     * }
     */
    public static final AddressLayout puintVal$layout() {
        return puintVal$LAYOUT;
    }

    private static final long puintVal$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * UINT *puintVal
     * }
     */
    public static final long puintVal$offset() {
        return puintVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * UINT *puintVal
     * }
     */
    public static MemorySegment puintVal(MemorySegment struct) {
        return struct.get(puintVal$LAYOUT, puintVal$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * UINT *puintVal
     * }
     */
    public static void puintVal(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(puintVal$LAYOUT, puintVal$OFFSET, fieldValue);
    }

    private static final AddressLayout pvRecord$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("$anon$525:17"), groupElement("pvRecord"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * PVOID pvRecord
     * }
     */
    public static final AddressLayout pvRecord$layout() {
        return pvRecord$LAYOUT;
    }

    private static final long pvRecord$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * PVOID pvRecord
     * }
     */
    public static final long pvRecord$offset() {
        return pvRecord$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * PVOID pvRecord
     * }
     */
    public static MemorySegment pvRecord(MemorySegment struct) {
        return struct.get(pvRecord$LAYOUT, pvRecord$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * PVOID pvRecord
     * }
     */
    public static void pvRecord(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pvRecord$LAYOUT, pvRecord$OFFSET, fieldValue);
    }

    private static final AddressLayout pRecInfo$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("$anon$472:9"), groupElement("$anon$478:13"), groupElement("$anon$525:17"), groupElement("pRecInfo"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * IRecordInfo *pRecInfo
     * }
     */
    public static final AddressLayout pRecInfo$layout() {
        return pRecInfo$LAYOUT;
    }

    private static final long pRecInfo$OFFSET = 16;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * IRecordInfo *pRecInfo
     * }
     */
    public static final long pRecInfo$offset() {
        return pRecInfo$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * IRecordInfo *pRecInfo
     * }
     */
    public static MemorySegment pRecInfo(MemorySegment struct) {
        return struct.get(pRecInfo$LAYOUT, pRecInfo$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * IRecordInfo *pRecInfo
     * }
     */
    public static void pRecInfo(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pRecInfo$LAYOUT, pRecInfo$OFFSET, fieldValue);
    }

    private static final GroupLayout decVal$LAYOUT = (GroupLayout)$LAYOUT.select(groupElement("$anon$470:5"), groupElement("decVal"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * DECIMAL decVal
     * }
     */
    public static final GroupLayout decVal$layout() {
        return decVal$LAYOUT;
    }

    private static final long decVal$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * DECIMAL decVal
     * }
     */
    public static final long decVal$offset() {
        return decVal$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * DECIMAL decVal
     * }
     */
    public static MemorySegment decVal(MemorySegment struct) {
        return struct.asSlice(decVal$OFFSET, decVal$LAYOUT.byteSize());
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * DECIMAL decVal
     * }
     */
    public static void decVal(MemorySegment struct, MemorySegment fieldValue) {
        MemorySegment.copy(fieldValue, 0L, struct, decVal$OFFSET, decVal$LAYOUT.byteSize());
    }

    /**
     * Obtains a slice of {@code arrayParam} which selects the array element at {@code index}.
     * The returned segment has address {@code arrayParam.address() + index * layout().byteSize()}
     */
    public static MemorySegment asSlice(MemorySegment array, long index) {
        return array.asSlice(layout().byteSize() * index);
    }

    /**
     * The size (in bytes) of this struct
     */
    public static long sizeof() { return layout().byteSize(); }

    /**
     * Allocate a segment of size {@code layout().byteSize()} using {@code allocator}
     */
    public static MemorySegment allocate(SegmentAllocator allocator) {
        return allocator.allocate(layout());
    }

    /**
     * Allocate an array of size {@code elementCount} using {@code allocator}.
     * The returned segment has size {@code elementCount * layout().byteSize()}.
     */
    public static MemorySegment allocateArray(long elementCount, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(elementCount, layout()));
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, Arena arena, Consumer<MemorySegment> cleanup) {
        return reinterpret(addr, 1, arena, cleanup);
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code elementCount * layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, long elementCount, Arena arena, Consumer<MemorySegment> cleanup) {
        return addr.reinterpret(layout().byteSize() * elementCount, arena, cleanup);
    }
}

