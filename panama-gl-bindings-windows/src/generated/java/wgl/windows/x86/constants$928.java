// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$928 {

    static final FunctionDescriptor _wtof$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _wtof$MH = RuntimeHelper.downcallHandle(
        "_wtof",
        constants$928._wtof$FUNC
    );
    static final FunctionDescriptor _wtof_l$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _wtof_l$MH = RuntimeHelper.downcallHandle(
        "_wtof_l",
        constants$928._wtof_l$FUNC
    );
    static final FunctionDescriptor _wtoi$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _wtoi$MH = RuntimeHelper.downcallHandle(
        "_wtoi",
        constants$928._wtoi$FUNC
    );
    static final FunctionDescriptor _wtoi_l$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _wtoi_l$MH = RuntimeHelper.downcallHandle(
        "_wtoi_l",
        constants$928._wtoi_l$FUNC
    );
    static final FunctionDescriptor _wtol$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _wtol$MH = RuntimeHelper.downcallHandle(
        "_wtol",
        constants$928._wtol$FUNC
    );
    static final FunctionDescriptor _wtol_l$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _wtol_l$MH = RuntimeHelper.downcallHandle(
        "_wtol_l",
        constants$928._wtol_l$FUNC
    );
}


