// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _STORAGE_OFFLOAD_TOKEN {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(4, Constants$root.C_CHAR$LAYOUT).withName("TokenType"),
        MemoryLayout.sequenceLayout(2, Constants$root.C_CHAR$LAYOUT).withName("Reserved"),
        MemoryLayout.sequenceLayout(2, Constants$root.C_CHAR$LAYOUT).withName("TokenIdLength"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                MemoryLayout.sequenceLayout(504, Constants$root.C_CHAR$LAYOUT).withName("Reserved2")
            ).withName("StorageOffloadZeroDataToken"),
            MemoryLayout.sequenceLayout(504, Constants$root.C_CHAR$LAYOUT).withName("Token")
        ).withName("$anon$0")
    ).withName("_STORAGE_OFFLOAD_TOKEN");
    public static MemoryLayout $LAYOUT() {
        return _STORAGE_OFFLOAD_TOKEN.$struct$LAYOUT;
    }
    public static MemorySegment TokenType$slice(MemorySegment seg) {
        return seg.asSlice(0, 4);
    }
    public static MemorySegment Reserved$slice(MemorySegment seg) {
        return seg.asSlice(4, 2);
    }
    public static MemorySegment TokenIdLength$slice(MemorySegment seg) {
        return seg.asSlice(6, 2);
    }
    public static class StorageOffloadZeroDataToken {

        static final  GroupLayout StorageOffloadZeroDataToken$struct$LAYOUT = MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(504, Constants$root.C_CHAR$LAYOUT).withName("Reserved2")
        );
        public static MemoryLayout $LAYOUT() {
            return StorageOffloadZeroDataToken.StorageOffloadZeroDataToken$struct$LAYOUT;
        }
        public static MemorySegment Reserved2$slice(MemorySegment seg) {
            return seg.asSlice(0, 504);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
    }

    public static MemorySegment StorageOffloadZeroDataToken$slice(MemorySegment seg) {
        return seg.asSlice(8, 504);
    }
    public static MemorySegment Token$slice(MemorySegment seg) {
        return seg.asSlice(8, 504);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


