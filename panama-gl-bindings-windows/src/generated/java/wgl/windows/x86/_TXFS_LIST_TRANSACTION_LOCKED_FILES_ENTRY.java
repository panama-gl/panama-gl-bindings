// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG_LONG$LAYOUT.withName("Offset"),
        Constants$root.C_LONG$LAYOUT.withName("NameFlags"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_LONG_LONG$LAYOUT.withName("FileId"),
        Constants$root.C_LONG$LAYOUT.withName("Reserved1"),
        Constants$root.C_LONG$LAYOUT.withName("Reserved2"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("Reserved3"),
        MemoryLayout.sequenceLayout(1, Constants$root.C_SHORT$LAYOUT).withName("FileName"),
        MemoryLayout.paddingLayout(48)
    ).withName("_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY");
    public static MemoryLayout $LAYOUT() {
        return _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.$struct$LAYOUT;
    }
    static final VarHandle Offset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Offset"));
    public static VarHandle Offset$VH() {
        return _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Offset$VH;
    }
    public static long Offset$get(MemorySegment seg) {
        return (long)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Offset$VH.get(seg);
    }
    public static void Offset$set( MemorySegment seg, long x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Offset$VH.set(seg, x);
    }
    public static long Offset$get(MemorySegment seg, long index) {
        return (long)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Offset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Offset$set(MemorySegment seg, long index, long x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Offset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle NameFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("NameFlags"));
    public static VarHandle NameFlags$VH() {
        return _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.NameFlags$VH;
    }
    public static int NameFlags$get(MemorySegment seg) {
        return (int)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.NameFlags$VH.get(seg);
    }
    public static void NameFlags$set( MemorySegment seg, int x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.NameFlags$VH.set(seg, x);
    }
    public static int NameFlags$get(MemorySegment seg, long index) {
        return (int)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.NameFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void NameFlags$set(MemorySegment seg, long index, int x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.NameFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle FileId$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("FileId"));
    public static VarHandle FileId$VH() {
        return _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.FileId$VH;
    }
    public static long FileId$get(MemorySegment seg) {
        return (long)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.FileId$VH.get(seg);
    }
    public static void FileId$set( MemorySegment seg, long x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.FileId$VH.set(seg, x);
    }
    public static long FileId$get(MemorySegment seg, long index) {
        return (long)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.FileId$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void FileId$set(MemorySegment seg, long index, long x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.FileId$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved1"));
    public static VarHandle Reserved1$VH() {
        return _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved1$VH;
    }
    public static int Reserved1$get(MemorySegment seg) {
        return (int)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved1$VH.get(seg);
    }
    public static void Reserved1$set( MemorySegment seg, int x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved1$VH.set(seg, x);
    }
    public static int Reserved1$get(MemorySegment seg, long index) {
        return (int)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved1$set(MemorySegment seg, long index, int x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved2"));
    public static VarHandle Reserved2$VH() {
        return _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved2$VH;
    }
    public static int Reserved2$get(MemorySegment seg) {
        return (int)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved2$VH.get(seg);
    }
    public static void Reserved2$set( MemorySegment seg, int x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved2$VH.set(seg, x);
    }
    public static int Reserved2$get(MemorySegment seg, long index) {
        return (int)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved2$set(MemorySegment seg, long index, int x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved3"));
    public static VarHandle Reserved3$VH() {
        return _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved3$VH;
    }
    public static long Reserved3$get(MemorySegment seg) {
        return (long)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved3$VH.get(seg);
    }
    public static void Reserved3$set( MemorySegment seg, long x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved3$VH.set(seg, x);
    }
    public static long Reserved3$get(MemorySegment seg, long index) {
        return (long)_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved3$set(MemorySegment seg, long index, long x) {
        _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY.Reserved3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment FileName$slice(MemorySegment seg) {
        return seg.asSlice(40, 2);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


