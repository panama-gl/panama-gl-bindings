// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNWGLSWAPLAYERBUFFERSMSCOMLPROC {

    long apply(java.lang.foreign.MemoryAddress hdc, int fuPlanes, long target_msc, long divisor, long remainder);
    static MemorySegment allocate(PFNWGLSWAPLAYERBUFFERSMSCOMLPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNWGLSWAPLAYERBUFFERSMSCOMLPROC.class, fi, constants$1415.PFNWGLSWAPLAYERBUFFERSMSCOMLPROC$FUNC, session);
    }
    static PFNWGLSWAPLAYERBUFFERSMSCOMLPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _hdc, int _fuPlanes, long _target_msc, long _divisor, long _remainder) -> {
            try {
                return (long)constants$1415.PFNWGLSWAPLAYERBUFFERSMSCOMLPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_hdc, _fuPlanes, _target_msc, _divisor, _remainder);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


