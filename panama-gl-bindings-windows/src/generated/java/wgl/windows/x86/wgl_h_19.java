// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class wgl_h_19 extends wgl_h_18 {

    public static MethodHandle DdeUnaccessData$MH() {
        return RuntimeHelper.requireNonNull(constants$609.DdeUnaccessData$MH,"DdeUnaccessData");
    }
    public static int DdeUnaccessData ( Addressable hData) {
        var mh$ = DdeUnaccessData$MH();
        try {
            return (int)mh$.invokeExact(hData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeFreeDataHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$609.DdeFreeDataHandle$MH,"DdeFreeDataHandle");
    }
    public static int DdeFreeDataHandle ( Addressable hData) {
        var mh$ = DdeFreeDataHandle$MH();
        try {
            return (int)mh$.invokeExact(hData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeGetLastError$MH() {
        return RuntimeHelper.requireNonNull(constants$609.DdeGetLastError$MH,"DdeGetLastError");
    }
    public static int DdeGetLastError ( int idInst) {
        var mh$ = DdeGetLastError$MH();
        try {
            return (int)mh$.invokeExact(idInst);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeCreateStringHandleA$MH() {
        return RuntimeHelper.requireNonNull(constants$609.DdeCreateStringHandleA$MH,"DdeCreateStringHandleA");
    }
    public static MemoryAddress DdeCreateStringHandleA ( int idInst,  Addressable psz,  int iCodePage) {
        var mh$ = DdeCreateStringHandleA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(idInst, psz, iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeCreateStringHandleW$MH() {
        return RuntimeHelper.requireNonNull(constants$609.DdeCreateStringHandleW$MH,"DdeCreateStringHandleW");
    }
    public static MemoryAddress DdeCreateStringHandleW ( int idInst,  Addressable psz,  int iCodePage) {
        var mh$ = DdeCreateStringHandleW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(idInst, psz, iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeQueryStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$610.DdeQueryStringA$MH,"DdeQueryStringA");
    }
    public static int DdeQueryStringA ( int idInst,  Addressable hsz,  Addressable psz,  int cchMax,  int iCodePage) {
        var mh$ = DdeQueryStringA$MH();
        try {
            return (int)mh$.invokeExact(idInst, hsz, psz, cchMax, iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeQueryStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$610.DdeQueryStringW$MH,"DdeQueryStringW");
    }
    public static int DdeQueryStringW ( int idInst,  Addressable hsz,  Addressable psz,  int cchMax,  int iCodePage) {
        var mh$ = DdeQueryStringW$MH();
        try {
            return (int)mh$.invokeExact(idInst, hsz, psz, cchMax, iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeFreeStringHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$610.DdeFreeStringHandle$MH,"DdeFreeStringHandle");
    }
    public static int DdeFreeStringHandle ( int idInst,  Addressable hsz) {
        var mh$ = DdeFreeStringHandle$MH();
        try {
            return (int)mh$.invokeExact(idInst, hsz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeKeepStringHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$610.DdeKeepStringHandle$MH,"DdeKeepStringHandle");
    }
    public static int DdeKeepStringHandle ( int idInst,  Addressable hsz) {
        var mh$ = DdeKeepStringHandle$MH();
        try {
            return (int)mh$.invokeExact(idInst, hsz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeCmpStringHandles$MH() {
        return RuntimeHelper.requireNonNull(constants$610.DdeCmpStringHandles$MH,"DdeCmpStringHandles");
    }
    public static int DdeCmpStringHandles ( Addressable hsz1,  Addressable hsz2) {
        var mh$ = DdeCmpStringHandles$MH();
        try {
            return (int)mh$.invokeExact(hsz1, hsz2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PDDEML_MSG_HOOK_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONMSGSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONCBSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONHSZSTRUCTA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONHSZSTRUCTW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONHSZSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONERRSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONLINKSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONCONVSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle LZStart$MH() {
        return RuntimeHelper.requireNonNull(constants$610.LZStart$MH,"LZStart");
    }
    public static int LZStart () {
        var mh$ = LZStart$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZDone$MH() {
        return RuntimeHelper.requireNonNull(constants$611.LZDone$MH,"LZDone");
    }
    public static void LZDone () {
        var mh$ = LZDone$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyLZFile$MH() {
        return RuntimeHelper.requireNonNull(constants$611.CopyLZFile$MH,"CopyLZFile");
    }
    public static int CopyLZFile ( int hfSource,  int hfDest) {
        var mh$ = CopyLZFile$MH();
        try {
            return (int)mh$.invokeExact(hfSource, hfDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$611.LZCopy$MH,"LZCopy");
    }
    public static int LZCopy ( int hfSource,  int hfDest) {
        var mh$ = LZCopy$MH();
        try {
            return (int)mh$.invokeExact(hfSource, hfDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZInit$MH() {
        return RuntimeHelper.requireNonNull(constants$611.LZInit$MH,"LZInit");
    }
    public static int LZInit ( int hfSource) {
        var mh$ = LZInit$MH();
        try {
            return (int)mh$.invokeExact(hfSource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetExpandedNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$611.GetExpandedNameA$MH,"GetExpandedNameA");
    }
    public static int GetExpandedNameA ( Addressable lpszSource,  Addressable lpszBuffer) {
        var mh$ = GetExpandedNameA$MH();
        try {
            return (int)mh$.invokeExact(lpszSource, lpszBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetExpandedNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$611.GetExpandedNameW$MH,"GetExpandedNameW");
    }
    public static int GetExpandedNameW ( Addressable lpszSource,  Addressable lpszBuffer) {
        var mh$ = GetExpandedNameW$MH();
        try {
            return (int)mh$.invokeExact(lpszSource, lpszBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZOpenFileA$MH() {
        return RuntimeHelper.requireNonNull(constants$612.LZOpenFileA$MH,"LZOpenFileA");
    }
    public static int LZOpenFileA ( Addressable lpFileName,  Addressable lpReOpenBuf,  short wStyle) {
        var mh$ = LZOpenFileA$MH();
        try {
            return (int)mh$.invokeExact(lpFileName, lpReOpenBuf, wStyle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZOpenFileW$MH() {
        return RuntimeHelper.requireNonNull(constants$612.LZOpenFileW$MH,"LZOpenFileW");
    }
    public static int LZOpenFileW ( Addressable lpFileName,  Addressable lpReOpenBuf,  short wStyle) {
        var mh$ = LZOpenFileW$MH();
        try {
            return (int)mh$.invokeExact(lpFileName, lpReOpenBuf, wStyle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZSeek$MH() {
        return RuntimeHelper.requireNonNull(constants$612.LZSeek$MH,"LZSeek");
    }
    public static int LZSeek ( int hFile,  int lOffset,  int iOrigin) {
        var mh$ = LZSeek$MH();
        try {
            return (int)mh$.invokeExact(hFile, lOffset, iOrigin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZRead$MH() {
        return RuntimeHelper.requireNonNull(constants$612.LZRead$MH,"LZRead");
    }
    public static int LZRead ( int hFile,  Addressable lpBuffer,  int cbRead) {
        var mh$ = LZRead$MH();
        try {
            return (int)mh$.invokeExact(hFile, lpBuffer, cbRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZClose$MH() {
        return RuntimeHelper.requireNonNull(constants$612.LZClose$MH,"LZClose");
    }
    public static void LZClose ( int hFile) {
        var mh$ = LZClose$MH();
        try {
            mh$.invokeExact(hFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPUINT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMMTIME = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMMTIME = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMMTIME = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress HDRVR = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mciSendCommandA$MH() {
        return RuntimeHelper.requireNonNull(constants$614.mciSendCommandA$MH,"mciSendCommandA");
    }
    public static int mciSendCommandA ( int mciId,  int uMsg,  long dwParam1,  long dwParam2) {
        var mh$ = mciSendCommandA$MH();
        try {
            return (int)mh$.invokeExact(mciId, uMsg, dwParam1, dwParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSendCommandW$MH() {
        return RuntimeHelper.requireNonNull(constants$614.mciSendCommandW$MH,"mciSendCommandW");
    }
    public static int mciSendCommandW ( int mciId,  int uMsg,  long dwParam1,  long dwParam2) {
        var mh$ = mciSendCommandW$MH();
        try {
            return (int)mh$.invokeExact(mciId, uMsg, dwParam1, dwParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSendStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$614.mciSendStringA$MH,"mciSendStringA");
    }
    public static int mciSendStringA ( Addressable lpstrCommand,  Addressable lpstrReturnString,  int uReturnLength,  Addressable hwndCallback) {
        var mh$ = mciSendStringA$MH();
        try {
            return (int)mh$.invokeExact(lpstrCommand, lpstrReturnString, uReturnLength, hwndCallback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSendStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$614.mciSendStringW$MH,"mciSendStringW");
    }
    public static int mciSendStringW ( Addressable lpstrCommand,  Addressable lpstrReturnString,  int uReturnLength,  Addressable hwndCallback) {
        var mh$ = mciSendStringW$MH();
        try {
            return (int)mh$.invokeExact(lpstrCommand, lpstrReturnString, uReturnLength, hwndCallback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDA$MH() {
        return RuntimeHelper.requireNonNull(constants$614.mciGetDeviceIDA$MH,"mciGetDeviceIDA");
    }
    public static int mciGetDeviceIDA ( Addressable pszDevice) {
        var mh$ = mciGetDeviceIDA$MH();
        try {
            return (int)mh$.invokeExact(pszDevice);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDW$MH() {
        return RuntimeHelper.requireNonNull(constants$615.mciGetDeviceIDW$MH,"mciGetDeviceIDW");
    }
    public static int mciGetDeviceIDW ( Addressable pszDevice) {
        var mh$ = mciGetDeviceIDW$MH();
        try {
            return (int)mh$.invokeExact(pszDevice);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDFromElementIDA$MH() {
        return RuntimeHelper.requireNonNull(constants$615.mciGetDeviceIDFromElementIDA$MH,"mciGetDeviceIDFromElementIDA");
    }
    public static int mciGetDeviceIDFromElementIDA ( int dwElementID,  Addressable lpstrType) {
        var mh$ = mciGetDeviceIDFromElementIDA$MH();
        try {
            return (int)mh$.invokeExact(dwElementID, lpstrType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDFromElementIDW$MH() {
        return RuntimeHelper.requireNonNull(constants$615.mciGetDeviceIDFromElementIDW$MH,"mciGetDeviceIDFromElementIDW");
    }
    public static int mciGetDeviceIDFromElementIDW ( int dwElementID,  Addressable lpstrType) {
        var mh$ = mciGetDeviceIDFromElementIDW$MH();
        try {
            return (int)mh$.invokeExact(dwElementID, lpstrType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetErrorStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$615.mciGetErrorStringA$MH,"mciGetErrorStringA");
    }
    public static int mciGetErrorStringA ( int mcierr,  Addressable pszText,  int cchText) {
        var mh$ = mciGetErrorStringA$MH();
        try {
            return (int)mh$.invokeExact(mcierr, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetErrorStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$615.mciGetErrorStringW$MH,"mciGetErrorStringW");
    }
    public static int mciGetErrorStringW ( int mcierr,  Addressable pszText,  int cchText) {
        var mh$ = mciGetErrorStringW$MH();
        try {
            return (int)mh$.invokeExact(mcierr, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSetYieldProc$MH() {
        return RuntimeHelper.requireNonNull(constants$615.mciSetYieldProc$MH,"mciSetYieldProc");
    }
    public static int mciSetYieldProc ( int mciId,  Addressable fpYieldProc,  int dwYieldData) {
        var mh$ = mciSetYieldProc$MH();
        try {
            return (int)mh$.invokeExact(mciId, fpYieldProc, dwYieldData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetCreatorTask$MH() {
        return RuntimeHelper.requireNonNull(constants$616.mciGetCreatorTask$MH,"mciGetCreatorTask");
    }
    public static MemoryAddress mciGetCreatorTask ( int mciId) {
        var mh$ = mciGetCreatorTask$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mciId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetYieldProc$MH() {
        return RuntimeHelper.requireNonNull(constants$616.mciGetYieldProc$MH,"mciGetYieldProc");
    }
    public static MemoryAddress mciGetYieldProc ( int mciId,  Addressable pdwYieldData) {
        var mh$ = mciGetYieldProc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mciId, pdwYieldData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PMCI_GENERIC_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_GENERIC_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_SEEK_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_SEEK_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_STATUS_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_STATUS_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_INFO_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_INFO_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_INFO_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_GETDEVCAPS_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_GETDEVCAPS_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_SYSINFO_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_SYSINFO_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_SYSINFO_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_SYSINFO_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_SYSINFO_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_SYSINFO_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_BREAK_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_BREAK_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_SAVE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_SAVE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_SAVE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_SAVE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_SAVE_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_SAVE_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_LOAD_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_LOAD_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_LOAD_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_LOAD_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_LOAD_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_LOAD_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_RECORD_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_VD_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_VD_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_VD_STEP_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_VD_STEP_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_VD_ESCAPE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_VD_ESCAPE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_VD_ESCAPE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_VD_ESCAPE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_VD_ESCAPE_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_VD_ESCAPE_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_WAVE_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_WAVE_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_WAVE_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_WAVE_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_WAVE_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_WAVE_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_WAVE_DELETE_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_WAVE_DELETE_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_WAVE_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_WAVE_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_SEQ_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_SEQ_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_ANIM_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_ANIM_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_ANIM_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_ANIM_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_ANIM_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_ANIM_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_ANIM_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_ANIM_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_ANIM_STEP_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_ANIM_STEP_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_ANIM_WINDOW_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_ANIM_WINDOW_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_ANIM_WINDOW_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_ANIM_WINDOW_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_ANIM_WINDOW_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_ANIM_WINDOW_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_ANIM_RECT_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_ANIM_RECT_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_ANIM_UPDATE_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_ANIM_UPDATE_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_WINDOW_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_WINDOW_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_WINDOW_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_WINDOW_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_WINDOW_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_WINDOW_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_RECT_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_RECT_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_SAVE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_SAVE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_SAVE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_SAVE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_SAVE_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_SAVE_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_LOAD_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_LOAD_PARMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_LOAD_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_LOAD_PARMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMCI_OVLY_LOAD_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMCI_OVLY_LOAD_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mciGetDriverData$MH() {
        return RuntimeHelper.requireNonNull(constants$616.mciGetDriverData$MH,"mciGetDriverData");
    }
    public static long mciGetDriverData ( int wDeviceID) {
        var mh$ = mciGetDriverData$MH();
        try {
            return (long)mh$.invokeExact(wDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciLoadCommandResource$MH() {
        return RuntimeHelper.requireNonNull(constants$616.mciLoadCommandResource$MH,"mciLoadCommandResource");
    }
    public static int mciLoadCommandResource ( Addressable hInstance,  Addressable lpResName,  int wType) {
        var mh$ = mciLoadCommandResource$MH();
        try {
            return (int)mh$.invokeExact(hInstance, lpResName, wType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSetDriverData$MH() {
        return RuntimeHelper.requireNonNull(constants$616.mciSetDriverData$MH,"mciSetDriverData");
    }
    public static int mciSetDriverData ( int wDeviceID,  long dwData) {
        var mh$ = mciSetDriverData$MH();
        try {
            return (int)mh$.invokeExact(wDeviceID, dwData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciDriverYield$MH() {
        return RuntimeHelper.requireNonNull(constants$616.mciDriverYield$MH,"mciDriverYield");
    }
    public static int mciDriverYield ( int wDeviceID) {
        var mh$ = mciDriverYield$MH();
        try {
            return (int)mh$.invokeExact(wDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciDriverNotify$MH() {
        return RuntimeHelper.requireNonNull(constants$617.mciDriverNotify$MH,"mciDriverNotify");
    }
    public static int mciDriverNotify ( Addressable hwndCallback,  int wDeviceID,  int uStatus) {
        var mh$ = mciDriverNotify$MH();
        try {
            return (int)mh$.invokeExact(hwndCallback, wDeviceID, uStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciFreeCommandResource$MH() {
        return RuntimeHelper.requireNonNull(constants$617.mciFreeCommandResource$MH,"mciFreeCommandResource");
    }
    public static int mciFreeCommandResource ( int wTable) {
        var mh$ = mciFreeCommandResource$MH();
        try {
            return (int)mh$.invokeExact(wTable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PDRVCONFIGINFOEX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPDRVCONFIGINFOEX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRVCONFIGINFOEX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRVCONFIGINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPDRVCONFIGINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRVCONFIGINFO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle CloseDriver$MH() {
        return RuntimeHelper.requireNonNull(constants$617.CloseDriver$MH,"CloseDriver");
    }
    public static long CloseDriver ( Addressable hDriver,  long lParam1,  long lParam2) {
        var mh$ = CloseDriver$MH();
        try {
            return (long)mh$.invokeExact(hDriver, lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenDriver$MH() {
        return RuntimeHelper.requireNonNull(constants$617.OpenDriver$MH,"OpenDriver");
    }
    public static MemoryAddress OpenDriver ( Addressable szDriverName,  Addressable szSectionName,  long lParam2) {
        var mh$ = OpenDriver$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(szDriverName, szSectionName, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendDriverMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$618.SendDriverMessage$MH,"SendDriverMessage");
    }
    public static long SendDriverMessage ( Addressable hDriver,  int message,  long lParam1,  long lParam2) {
        var mh$ = SendDriverMessage$MH();
        try {
            return (long)mh$.invokeExact(hDriver, message, lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrvGetModuleHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$618.DrvGetModuleHandle$MH,"DrvGetModuleHandle");
    }
    public static MemoryAddress DrvGetModuleHandle ( Addressable hDriver) {
        var mh$ = DrvGetModuleHandle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hDriver);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDriverModuleHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$618.GetDriverModuleHandle$MH,"GetDriverModuleHandle");
    }
    public static MemoryAddress GetDriverModuleHandle ( Addressable hDriver) {
        var mh$ = GetDriverModuleHandle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hDriver);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefDriverProc$MH() {
        return RuntimeHelper.requireNonNull(constants$618.DefDriverProc$MH,"DefDriverProc");
    }
    public static long DefDriverProc ( long dwDriverIdentifier,  Addressable hdrvr,  int uMsg,  long lParam1,  long lParam2) {
        var mh$ = DefDriverProc$MH();
        try {
            return (long)mh$.invokeExact(dwDriverIdentifier, hdrvr, uMsg, lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DriverCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$618.DriverCallback$MH,"DriverCallback");
    }
    public static int DriverCallback ( long dwCallback,  int dwFlags,  Addressable hDevice,  int dwMsg,  long dwUser,  long dwParam1,  long dwParam2) {
        var mh$ = DriverCallback$MH();
        try {
            return (int)mh$.invokeExact(dwCallback, dwFlags, hDevice, dwMsg, dwUser, dwParam1, dwParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sndOpenSound$MH() {
        return RuntimeHelper.requireNonNull(constants$618.sndOpenSound$MH,"sndOpenSound");
    }
    public static int sndOpenSound ( Addressable EventName,  Addressable AppName,  int Flags,  Addressable FileHandle) {
        var mh$ = sndOpenSound$MH();
        try {
            return (int)mh$.invokeExact(EventName, AppName, Flags, FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmDrvInstall$MH() {
        return RuntimeHelper.requireNonNull(constants$619.mmDrvInstall$MH,"mmDrvInstall");
    }
    public static int mmDrvInstall ( Addressable hDriver,  Addressable wszDrvEntry,  Addressable drvMessage,  int wFlags) {
        var mh$ = mmDrvInstall$MH();
        try {
            return (int)mh$.invokeExact(hDriver, wszDrvEntry, drvMessage, wFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress HPSTR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress HMMIO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMMIOINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMMIOINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMMIOINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCMMIOINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMMCKINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMMCKINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMMCKINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCMMCKINFO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mmioStringToFOURCCA$MH() {
        return RuntimeHelper.requireNonNull(constants$620.mmioStringToFOURCCA$MH,"mmioStringToFOURCCA");
    }
    public static int mmioStringToFOURCCA ( Addressable sz,  int uFlags) {
        var mh$ = mmioStringToFOURCCA$MH();
        try {
            return (int)mh$.invokeExact(sz, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioStringToFOURCCW$MH() {
        return RuntimeHelper.requireNonNull(constants$620.mmioStringToFOURCCW$MH,"mmioStringToFOURCCW");
    }
    public static int mmioStringToFOURCCW ( Addressable sz,  int uFlags) {
        var mh$ = mmioStringToFOURCCW$MH();
        try {
            return (int)mh$.invokeExact(sz, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioInstallIOProcA$MH() {
        return RuntimeHelper.requireNonNull(constants$620.mmioInstallIOProcA$MH,"mmioInstallIOProcA");
    }
    public static MemoryAddress mmioInstallIOProcA ( int fccIOProc,  Addressable pIOProc,  int dwFlags) {
        var mh$ = mmioInstallIOProcA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fccIOProc, pIOProc, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioInstallIOProcW$MH() {
        return RuntimeHelper.requireNonNull(constants$620.mmioInstallIOProcW$MH,"mmioInstallIOProcW");
    }
    public static MemoryAddress mmioInstallIOProcW ( int fccIOProc,  Addressable pIOProc,  int dwFlags) {
        var mh$ = mmioInstallIOProcW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fccIOProc, pIOProc, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioOpenA$MH() {
        return RuntimeHelper.requireNonNull(constants$620.mmioOpenA$MH,"mmioOpenA");
    }
    public static MemoryAddress mmioOpenA ( Addressable pszFileName,  Addressable pmmioinfo,  int fdwOpen) {
        var mh$ = mmioOpenA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pszFileName, pmmioinfo, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioOpenW$MH() {
        return RuntimeHelper.requireNonNull(constants$621.mmioOpenW$MH,"mmioOpenW");
    }
    public static MemoryAddress mmioOpenW ( Addressable pszFileName,  Addressable pmmioinfo,  int fdwOpen) {
        var mh$ = mmioOpenW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pszFileName, pmmioinfo, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioRenameA$MH() {
        return RuntimeHelper.requireNonNull(constants$621.mmioRenameA$MH,"mmioRenameA");
    }
    public static int mmioRenameA ( Addressable pszFileName,  Addressable pszNewFileName,  Addressable pmmioinfo,  int fdwRename) {
        var mh$ = mmioRenameA$MH();
        try {
            return (int)mh$.invokeExact(pszFileName, pszNewFileName, pmmioinfo, fdwRename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioRenameW$MH() {
        return RuntimeHelper.requireNonNull(constants$621.mmioRenameW$MH,"mmioRenameW");
    }
    public static int mmioRenameW ( Addressable pszFileName,  Addressable pszNewFileName,  Addressable pmmioinfo,  int fdwRename) {
        var mh$ = mmioRenameW$MH();
        try {
            return (int)mh$.invokeExact(pszFileName, pszNewFileName, pmmioinfo, fdwRename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioClose$MH() {
        return RuntimeHelper.requireNonNull(constants$621.mmioClose$MH,"mmioClose");
    }
    public static int mmioClose ( Addressable hmmio,  int fuClose) {
        var mh$ = mmioClose$MH();
        try {
            return (int)mh$.invokeExact(hmmio, fuClose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioRead$MH() {
        return RuntimeHelper.requireNonNull(constants$621.mmioRead$MH,"mmioRead");
    }
    public static int mmioRead ( Addressable hmmio,  Addressable pch,  int cch) {
        var mh$ = mmioRead$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pch, cch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioWrite$MH() {
        return RuntimeHelper.requireNonNull(constants$621.mmioWrite$MH,"mmioWrite");
    }
    public static int mmioWrite ( Addressable hmmio,  Addressable pch,  int cch) {
        var mh$ = mmioWrite$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pch, cch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSeek$MH() {
        return RuntimeHelper.requireNonNull(constants$622.mmioSeek$MH,"mmioSeek");
    }
    public static int mmioSeek ( Addressable hmmio,  int lOffset,  int iOrigin) {
        var mh$ = mmioSeek$MH();
        try {
            return (int)mh$.invokeExact(hmmio, lOffset, iOrigin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioGetInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$622.mmioGetInfo$MH,"mmioGetInfo");
    }
    public static int mmioGetInfo ( Addressable hmmio,  Addressable pmmioinfo,  int fuInfo) {
        var mh$ = mmioGetInfo$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmioinfo, fuInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSetInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$622.mmioSetInfo$MH,"mmioSetInfo");
    }
    public static int mmioSetInfo ( Addressable hmmio,  Addressable pmmioinfo,  int fuInfo) {
        var mh$ = mmioSetInfo$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmioinfo, fuInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSetBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$622.mmioSetBuffer$MH,"mmioSetBuffer");
    }
    public static int mmioSetBuffer ( Addressable hmmio,  Addressable pchBuffer,  int cchBuffer,  int fuBuffer) {
        var mh$ = mmioSetBuffer$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pchBuffer, cchBuffer, fuBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioFlush$MH() {
        return RuntimeHelper.requireNonNull(constants$622.mmioFlush$MH,"mmioFlush");
    }
    public static int mmioFlush ( Addressable hmmio,  int fuFlush) {
        var mh$ = mmioFlush$MH();
        try {
            return (int)mh$.invokeExact(hmmio, fuFlush);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioAdvance$MH() {
        return RuntimeHelper.requireNonNull(constants$622.mmioAdvance$MH,"mmioAdvance");
    }
    public static int mmioAdvance ( Addressable hmmio,  Addressable pmmioinfo,  int fuAdvance) {
        var mh$ = mmioAdvance$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmioinfo, fuAdvance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSendMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$623.mmioSendMessage$MH,"mmioSendMessage");
    }
    public static long mmioSendMessage ( Addressable hmmio,  int uMsg,  long lParam1,  long lParam2) {
        var mh$ = mmioSendMessage$MH();
        try {
            return (long)mh$.invokeExact(hmmio, uMsg, lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioDescend$MH() {
        return RuntimeHelper.requireNonNull(constants$623.mmioDescend$MH,"mmioDescend");
    }
    public static int mmioDescend ( Addressable hmmio,  Addressable pmmcki,  Addressable pmmckiParent,  int fuDescend) {
        var mh$ = mmioDescend$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmcki, pmmckiParent, fuDescend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioAscend$MH() {
        return RuntimeHelper.requireNonNull(constants$623.mmioAscend$MH,"mmioAscend");
    }
    public static int mmioAscend ( Addressable hmmio,  Addressable pmmcki,  int fuAscend) {
        var mh$ = mmioAscend$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmcki, fuAscend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioCreateChunk$MH() {
        return RuntimeHelper.requireNonNull(constants$623.mmioCreateChunk$MH,"mmioCreateChunk");
    }
    public static int mmioCreateChunk ( Addressable hmmio,  Addressable pmmcki,  int fuCreate) {
        var mh$ = mmioCreateChunk$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmcki, fuCreate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeSetEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$624.timeSetEvent$MH,"timeSetEvent");
    }
    public static int timeSetEvent ( int uDelay,  int uResolution,  Addressable fptc,  long dwUser,  int fuEvent) {
        var mh$ = timeSetEvent$MH();
        try {
            return (int)mh$.invokeExact(uDelay, uResolution, fptc, dwUser, fuEvent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeKillEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$624.timeKillEvent$MH,"timeKillEvent");
    }
    public static int timeKillEvent ( int uTimerID) {
        var mh$ = timeKillEvent$MH();
        try {
            return (int)mh$.invokeExact(uTimerID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sndPlaySoundA$MH() {
        return RuntimeHelper.requireNonNull(constants$624.sndPlaySoundA$MH,"sndPlaySoundA");
    }
    public static int sndPlaySoundA ( Addressable pszSound,  int fuSound) {
        var mh$ = sndPlaySoundA$MH();
        try {
            return (int)mh$.invokeExact(pszSound, fuSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sndPlaySoundW$MH() {
        return RuntimeHelper.requireNonNull(constants$624.sndPlaySoundW$MH,"sndPlaySoundW");
    }
    public static int sndPlaySoundW ( Addressable pszSound,  int fuSound) {
        var mh$ = sndPlaySoundW$MH();
        try {
            return (int)mh$.invokeExact(pszSound, fuSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PlaySoundA$MH() {
        return RuntimeHelper.requireNonNull(constants$625.PlaySoundA$MH,"PlaySoundA");
    }
    public static int PlaySoundA ( Addressable pszSound,  Addressable hmod,  int fdwSound) {
        var mh$ = PlaySoundA$MH();
        try {
            return (int)mh$.invokeExact(pszSound, hmod, fdwSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PlaySoundW$MH() {
        return RuntimeHelper.requireNonNull(constants$625.PlaySoundW$MH,"PlaySoundW");
    }
    public static int PlaySoundW ( Addressable pszSound,  Addressable hmod,  int fdwSound) {
        var mh$ = PlaySoundW$MH();
        try {
            return (int)mh$.invokeExact(pszSound, hmod, fdwSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress HWAVE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress HWAVEIN = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress HWAVEOUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPHWAVEIN = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPHWAVEOUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEHDR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEHDR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEHDR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEINCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEINCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEINCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEINCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEINCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEINCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEINCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEINCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEINCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPCMWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPPCMWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPCMWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWAVEFORMATEX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPWAVEFORMATEX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWAVEFORMATEX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCWAVEFORMATEX = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle waveOutGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$626.waveOutGetNumDevs$MH,"waveOutGetNumDevs");
    }
    public static int waveOutGetNumDevs () {
        var mh$ = waveOutGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$626.waveOutGetDevCapsA$MH,"waveOutGetDevCapsA");
    }
    public static int waveOutGetDevCapsA ( long uDeviceID,  Addressable pwoc,  int cbwoc) {
        var mh$ = waveOutGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pwoc, cbwoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$626.waveOutGetDevCapsW$MH,"waveOutGetDevCapsW");
    }
    public static int waveOutGetDevCapsW ( long uDeviceID,  Addressable pwoc,  int cbwoc) {
        var mh$ = waveOutGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pwoc, cbwoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$626.waveOutGetVolume$MH,"waveOutGetVolume");
    }
    public static int waveOutGetVolume ( Addressable hwo,  Addressable pdwVolume) {
        var mh$ = waveOutGetVolume$MH();
        try {
            return (int)mh$.invokeExact(hwo, pdwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutSetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$626.waveOutSetVolume$MH,"waveOutSetVolume");
    }
    public static int waveOutSetVolume ( Addressable hwo,  int dwVolume) {
        var mh$ = waveOutSetVolume$MH();
        try {
            return (int)mh$.invokeExact(hwo, dwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$626.waveOutGetErrorTextA$MH,"waveOutGetErrorTextA");
    }
    public static int waveOutGetErrorTextA ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = waveOutGetErrorTextA$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$627.waveOutGetErrorTextW$MH,"waveOutGetErrorTextW");
    }
    public static int waveOutGetErrorTextW ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = waveOutGetErrorTextW$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$627.waveOutOpen$MH,"waveOutOpen");
    }
    public static int waveOutOpen ( Addressable phwo,  int uDeviceID,  Addressable pwfx,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = waveOutOpen$MH();
        try {
            return (int)mh$.invokeExact(phwo, uDeviceID, pwfx, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutClose$MH() {
        return RuntimeHelper.requireNonNull(constants$627.waveOutClose$MH,"waveOutClose");
    }
    public static int waveOutClose ( Addressable hwo) {
        var mh$ = waveOutClose$MH();
        try {
            return (int)mh$.invokeExact(hwo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$627.waveOutPrepareHeader$MH,"waveOutPrepareHeader");
    }
    public static int waveOutPrepareHeader ( Addressable hwo,  Addressable pwh,  int cbwh) {
        var mh$ = waveOutPrepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hwo, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$627.waveOutUnprepareHeader$MH,"waveOutUnprepareHeader");
    }
    public static int waveOutUnprepareHeader ( Addressable hwo,  Addressable pwh,  int cbwh) {
        var mh$ = waveOutUnprepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hwo, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutWrite$MH() {
        return RuntimeHelper.requireNonNull(constants$627.waveOutWrite$MH,"waveOutWrite");
    }
    public static int waveOutWrite ( Addressable hwo,  Addressable pwh,  int cbwh) {
        var mh$ = waveOutWrite$MH();
        try {
            return (int)mh$.invokeExact(hwo, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutPause$MH() {
        return RuntimeHelper.requireNonNull(constants$628.waveOutPause$MH,"waveOutPause");
    }
    public static int waveOutPause ( Addressable hwo) {
        var mh$ = waveOutPause$MH();
        try {
            return (int)mh$.invokeExact(hwo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutRestart$MH() {
        return RuntimeHelper.requireNonNull(constants$628.waveOutRestart$MH,"waveOutRestart");
    }
    public static int waveOutRestart ( Addressable hwo) {
        var mh$ = waveOutRestart$MH();
        try {
            return (int)mh$.invokeExact(hwo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutReset$MH() {
        return RuntimeHelper.requireNonNull(constants$628.waveOutReset$MH,"waveOutReset");
    }
    public static int waveOutReset ( Addressable hwo) {
        var mh$ = waveOutReset$MH();
        try {
            return (int)mh$.invokeExact(hwo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutBreakLoop$MH() {
        return RuntimeHelper.requireNonNull(constants$628.waveOutBreakLoop$MH,"waveOutBreakLoop");
    }
    public static int waveOutBreakLoop ( Addressable hwo) {
        var mh$ = waveOutBreakLoop$MH();
        try {
            return (int)mh$.invokeExact(hwo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$628.waveOutGetPosition$MH,"waveOutGetPosition");
    }
    public static int waveOutGetPosition ( Addressable hwo,  Addressable pmmt,  int cbmmt) {
        var mh$ = waveOutGetPosition$MH();
        try {
            return (int)mh$.invokeExact(hwo, pmmt, cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetPitch$MH() {
        return RuntimeHelper.requireNonNull(constants$628.waveOutGetPitch$MH,"waveOutGetPitch");
    }
    public static int waveOutGetPitch ( Addressable hwo,  Addressable pdwPitch) {
        var mh$ = waveOutGetPitch$MH();
        try {
            return (int)mh$.invokeExact(hwo, pdwPitch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutSetPitch$MH() {
        return RuntimeHelper.requireNonNull(constants$629.waveOutSetPitch$MH,"waveOutSetPitch");
    }
    public static int waveOutSetPitch ( Addressable hwo,  int dwPitch) {
        var mh$ = waveOutSetPitch$MH();
        try {
            return (int)mh$.invokeExact(hwo, dwPitch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetPlaybackRate$MH() {
        return RuntimeHelper.requireNonNull(constants$629.waveOutGetPlaybackRate$MH,"waveOutGetPlaybackRate");
    }
    public static int waveOutGetPlaybackRate ( Addressable hwo,  Addressable pdwRate) {
        var mh$ = waveOutGetPlaybackRate$MH();
        try {
            return (int)mh$.invokeExact(hwo, pdwRate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutSetPlaybackRate$MH() {
        return RuntimeHelper.requireNonNull(constants$629.waveOutSetPlaybackRate$MH,"waveOutSetPlaybackRate");
    }
    public static int waveOutSetPlaybackRate ( Addressable hwo,  int dwRate) {
        var mh$ = waveOutSetPlaybackRate$MH();
        try {
            return (int)mh$.invokeExact(hwo, dwRate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$629.waveOutGetID$MH,"waveOutGetID");
    }
    public static int waveOutGetID ( Addressable hwo,  Addressable puDeviceID) {
        var mh$ = waveOutGetID$MH();
        try {
            return (int)mh$.invokeExact(hwo, puDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$629.waveOutMessage$MH,"waveOutMessage");
    }
    public static int waveOutMessage ( Addressable hwo,  int uMsg,  long dw1,  long dw2) {
        var mh$ = waveOutMessage$MH();
        try {
            return (int)mh$.invokeExact(hwo, uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$629.waveInGetNumDevs$MH,"waveInGetNumDevs");
    }
    public static int waveInGetNumDevs () {
        var mh$ = waveInGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$630.waveInGetDevCapsA$MH,"waveInGetDevCapsA");
    }
    public static int waveInGetDevCapsA ( long uDeviceID,  Addressable pwic,  int cbwic) {
        var mh$ = waveInGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pwic, cbwic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$630.waveInGetDevCapsW$MH,"waveInGetDevCapsW");
    }
    public static int waveInGetDevCapsW ( long uDeviceID,  Addressable pwic,  int cbwic) {
        var mh$ = waveInGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pwic, cbwic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$630.waveInGetErrorTextA$MH,"waveInGetErrorTextA");
    }
    public static int waveInGetErrorTextA ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = waveInGetErrorTextA$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$630.waveInGetErrorTextW$MH,"waveInGetErrorTextW");
    }
    public static int waveInGetErrorTextW ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = waveInGetErrorTextW$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$630.waveInOpen$MH,"waveInOpen");
    }
    public static int waveInOpen ( Addressable phwi,  int uDeviceID,  Addressable pwfx,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = waveInOpen$MH();
        try {
            return (int)mh$.invokeExact(phwi, uDeviceID, pwfx, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInClose$MH() {
        return RuntimeHelper.requireNonNull(constants$630.waveInClose$MH,"waveInClose");
    }
    public static int waveInClose ( Addressable hwi) {
        var mh$ = waveInClose$MH();
        try {
            return (int)mh$.invokeExact(hwi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$631.waveInPrepareHeader$MH,"waveInPrepareHeader");
    }
    public static int waveInPrepareHeader ( Addressable hwi,  Addressable pwh,  int cbwh) {
        var mh$ = waveInPrepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hwi, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$631.waveInUnprepareHeader$MH,"waveInUnprepareHeader");
    }
    public static int waveInUnprepareHeader ( Addressable hwi,  Addressable pwh,  int cbwh) {
        var mh$ = waveInUnprepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hwi, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInAddBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$631.waveInAddBuffer$MH,"waveInAddBuffer");
    }
    public static int waveInAddBuffer ( Addressable hwi,  Addressable pwh,  int cbwh) {
        var mh$ = waveInAddBuffer$MH();
        try {
            return (int)mh$.invokeExact(hwi, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInStart$MH() {
        return RuntimeHelper.requireNonNull(constants$631.waveInStart$MH,"waveInStart");
    }
    public static int waveInStart ( Addressable hwi) {
        var mh$ = waveInStart$MH();
        try {
            return (int)mh$.invokeExact(hwi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInStop$MH() {
        return RuntimeHelper.requireNonNull(constants$631.waveInStop$MH,"waveInStop");
    }
    public static int waveInStop ( Addressable hwi) {
        var mh$ = waveInStop$MH();
        try {
            return (int)mh$.invokeExact(hwi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInReset$MH() {
        return RuntimeHelper.requireNonNull(constants$631.waveInReset$MH,"waveInReset");
    }
    public static int waveInReset ( Addressable hwi) {
        var mh$ = waveInReset$MH();
        try {
            return (int)mh$.invokeExact(hwi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$632.waveInGetPosition$MH,"waveInGetPosition");
    }
    public static int waveInGetPosition ( Addressable hwi,  Addressable pmmt,  int cbmmt) {
        var mh$ = waveInGetPosition$MH();
        try {
            return (int)mh$.invokeExact(hwi, pmmt, cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$632.waveInGetID$MH,"waveInGetID");
    }
    public static int waveInGetID ( Addressable hwi,  Addressable puDeviceID) {
        var mh$ = waveInGetID$MH();
        try {
            return (int)mh$.invokeExact(hwi, puDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$632.waveInMessage$MH,"waveInMessage");
    }
    public static int waveInMessage ( Addressable hwi,  int uMsg,  long dw1,  long dw2) {
        var mh$ = waveInMessage$MH();
        try {
            return (int)mh$.invokeExact(hwi, uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress HMIDI = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress HMIDIIN = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress HMIDIOUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress HMIDISTRM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPHMIDI = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPHMIDIIN = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPHMIDIOUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPHMIDISTRM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPATCHARRAY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPKEYARRAY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIINCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIINCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIINCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIINCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIINCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIINCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIINCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIINCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIINCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIDIHDR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPMIDIHDR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIHDR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIPROPTIMEDIV = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIDIPROPTEMPO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle midiOutGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$633.midiOutGetNumDevs$MH,"midiOutGetNumDevs");
    }
    public static int midiOutGetNumDevs () {
        var mh$ = midiOutGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$633.midiStreamOpen$MH,"midiStreamOpen");
    }
    public static int midiStreamOpen ( Addressable phms,  Addressable puDeviceID,  int cMidi,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = midiStreamOpen$MH();
        try {
            return (int)mh$.invokeExact(phms, puDeviceID, cMidi, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamClose$MH() {
        return RuntimeHelper.requireNonNull(constants$633.midiStreamClose$MH,"midiStreamClose");
    }
    public static int midiStreamClose ( Addressable hms) {
        var mh$ = midiStreamClose$MH();
        try {
            return (int)mh$.invokeExact(hms);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$633.midiStreamProperty$MH,"midiStreamProperty");
    }
    public static int midiStreamProperty ( Addressable hms,  Addressable lppropdata,  int dwProperty) {
        var mh$ = midiStreamProperty$MH();
        try {
            return (int)mh$.invokeExact(hms, lppropdata, dwProperty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$633.midiStreamPosition$MH,"midiStreamPosition");
    }
    public static int midiStreamPosition ( Addressable hms,  Addressable lpmmt,  int cbmmt) {
        var mh$ = midiStreamPosition$MH();
        try {
            return (int)mh$.invokeExact(hms, lpmmt, cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamOut$MH() {
        return RuntimeHelper.requireNonNull(constants$634.midiStreamOut$MH,"midiStreamOut");
    }
    public static int midiStreamOut ( Addressable hms,  Addressable pmh,  int cbmh) {
        var mh$ = midiStreamOut$MH();
        try {
            return (int)mh$.invokeExact(hms, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamPause$MH() {
        return RuntimeHelper.requireNonNull(constants$634.midiStreamPause$MH,"midiStreamPause");
    }
    public static int midiStreamPause ( Addressable hms) {
        var mh$ = midiStreamPause$MH();
        try {
            return (int)mh$.invokeExact(hms);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamRestart$MH() {
        return RuntimeHelper.requireNonNull(constants$634.midiStreamRestart$MH,"midiStreamRestart");
    }
    public static int midiStreamRestart ( Addressable hms) {
        var mh$ = midiStreamRestart$MH();
        try {
            return (int)mh$.invokeExact(hms);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamStop$MH() {
        return RuntimeHelper.requireNonNull(constants$634.midiStreamStop$MH,"midiStreamStop");
    }
    public static int midiStreamStop ( Addressable hms) {
        var mh$ = midiStreamStop$MH();
        try {
            return (int)mh$.invokeExact(hms);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiConnect$MH() {
        return RuntimeHelper.requireNonNull(constants$634.midiConnect$MH,"midiConnect");
    }
    public static int midiConnect ( Addressable hmi,  Addressable hmo,  Addressable pReserved) {
        var mh$ = midiConnect$MH();
        try {
            return (int)mh$.invokeExact(hmi, hmo, pReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiDisconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$634.midiDisconnect$MH,"midiDisconnect");
    }
    public static int midiDisconnect ( Addressable hmi,  Addressable hmo,  Addressable pReserved) {
        var mh$ = midiDisconnect$MH();
        try {
            return (int)mh$.invokeExact(hmi, hmo, pReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$635.midiOutGetDevCapsA$MH,"midiOutGetDevCapsA");
    }
    public static int midiOutGetDevCapsA ( long uDeviceID,  Addressable pmoc,  int cbmoc) {
        var mh$ = midiOutGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pmoc, cbmoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$635.midiOutGetDevCapsW$MH,"midiOutGetDevCapsW");
    }
    public static int midiOutGetDevCapsW ( long uDeviceID,  Addressable pmoc,  int cbmoc) {
        var mh$ = midiOutGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pmoc, cbmoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$635.midiOutGetVolume$MH,"midiOutGetVolume");
    }
    public static int midiOutGetVolume ( Addressable hmo,  Addressable pdwVolume) {
        var mh$ = midiOutGetVolume$MH();
        try {
            return (int)mh$.invokeExact(hmo, pdwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutSetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$635.midiOutSetVolume$MH,"midiOutSetVolume");
    }
    public static int midiOutSetVolume ( Addressable hmo,  int dwVolume) {
        var mh$ = midiOutSetVolume$MH();
        try {
            return (int)mh$.invokeExact(hmo, dwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$635.midiOutGetErrorTextA$MH,"midiOutGetErrorTextA");
    }
    public static int midiOutGetErrorTextA ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = midiOutGetErrorTextA$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$635.midiOutGetErrorTextW$MH,"midiOutGetErrorTextW");
    }
    public static int midiOutGetErrorTextW ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = midiOutGetErrorTextW$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$636.midiOutOpen$MH,"midiOutOpen");
    }
    public static int midiOutOpen ( Addressable phmo,  int uDeviceID,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = midiOutOpen$MH();
        try {
            return (int)mh$.invokeExact(phmo, uDeviceID, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutClose$MH() {
        return RuntimeHelper.requireNonNull(constants$636.midiOutClose$MH,"midiOutClose");
    }
    public static int midiOutClose ( Addressable hmo) {
        var mh$ = midiOutClose$MH();
        try {
            return (int)mh$.invokeExact(hmo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$636.midiOutPrepareHeader$MH,"midiOutPrepareHeader");
    }
    public static int midiOutPrepareHeader ( Addressable hmo,  Addressable pmh,  int cbmh) {
        var mh$ = midiOutPrepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hmo, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$636.midiOutUnprepareHeader$MH,"midiOutUnprepareHeader");
    }
    public static int midiOutUnprepareHeader ( Addressable hmo,  Addressable pmh,  int cbmh) {
        var mh$ = midiOutUnprepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hmo, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutShortMsg$MH() {
        return RuntimeHelper.requireNonNull(constants$636.midiOutShortMsg$MH,"midiOutShortMsg");
    }
    public static int midiOutShortMsg ( Addressable hmo,  int dwMsg) {
        var mh$ = midiOutShortMsg$MH();
        try {
            return (int)mh$.invokeExact(hmo, dwMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutLongMsg$MH() {
        return RuntimeHelper.requireNonNull(constants$636.midiOutLongMsg$MH,"midiOutLongMsg");
    }
    public static int midiOutLongMsg ( Addressable hmo,  Addressable pmh,  int cbmh) {
        var mh$ = midiOutLongMsg$MH();
        try {
            return (int)mh$.invokeExact(hmo, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutReset$MH() {
        return RuntimeHelper.requireNonNull(constants$637.midiOutReset$MH,"midiOutReset");
    }
    public static int midiOutReset ( Addressable hmo) {
        var mh$ = midiOutReset$MH();
        try {
            return (int)mh$.invokeExact(hmo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutCachePatches$MH() {
        return RuntimeHelper.requireNonNull(constants$637.midiOutCachePatches$MH,"midiOutCachePatches");
    }
    public static int midiOutCachePatches ( Addressable hmo,  int uBank,  Addressable pwpa,  int fuCache) {
        var mh$ = midiOutCachePatches$MH();
        try {
            return (int)mh$.invokeExact(hmo, uBank, pwpa, fuCache);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutCacheDrumPatches$MH() {
        return RuntimeHelper.requireNonNull(constants$637.midiOutCacheDrumPatches$MH,"midiOutCacheDrumPatches");
    }
    public static int midiOutCacheDrumPatches ( Addressable hmo,  int uPatch,  Addressable pwkya,  int fuCache) {
        var mh$ = midiOutCacheDrumPatches$MH();
        try {
            return (int)mh$.invokeExact(hmo, uPatch, pwkya, fuCache);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$637.midiOutGetID$MH,"midiOutGetID");
    }
    public static int midiOutGetID ( Addressable hmo,  Addressable puDeviceID) {
        var mh$ = midiOutGetID$MH();
        try {
            return (int)mh$.invokeExact(hmo, puDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$637.midiOutMessage$MH,"midiOutMessage");
    }
    public static int midiOutMessage ( Addressable hmo,  int uMsg,  long dw1,  long dw2) {
        var mh$ = midiOutMessage$MH();
        try {
            return (int)mh$.invokeExact(hmo, uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$637.midiInGetNumDevs$MH,"midiInGetNumDevs");
    }
    public static int midiInGetNumDevs () {
        var mh$ = midiInGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$638.midiInGetDevCapsA$MH,"midiInGetDevCapsA");
    }
    public static int midiInGetDevCapsA ( long uDeviceID,  Addressable pmic,  int cbmic) {
        var mh$ = midiInGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pmic, cbmic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$638.midiInGetDevCapsW$MH,"midiInGetDevCapsW");
    }
    public static int midiInGetDevCapsW ( long uDeviceID,  Addressable pmic,  int cbmic) {
        var mh$ = midiInGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pmic, cbmic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$638.midiInGetErrorTextA$MH,"midiInGetErrorTextA");
    }
    public static int midiInGetErrorTextA ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = midiInGetErrorTextA$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$638.midiInGetErrorTextW$MH,"midiInGetErrorTextW");
    }
    public static int midiInGetErrorTextW ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = midiInGetErrorTextW$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$638.midiInOpen$MH,"midiInOpen");
    }
    public static int midiInOpen ( Addressable phmi,  int uDeviceID,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = midiInOpen$MH();
        try {
            return (int)mh$.invokeExact(phmi, uDeviceID, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInClose$MH() {
        return RuntimeHelper.requireNonNull(constants$638.midiInClose$MH,"midiInClose");
    }
    public static int midiInClose ( Addressable hmi) {
        var mh$ = midiInClose$MH();
        try {
            return (int)mh$.invokeExact(hmi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$639.midiInPrepareHeader$MH,"midiInPrepareHeader");
    }
    public static int midiInPrepareHeader ( Addressable hmi,  Addressable pmh,  int cbmh) {
        var mh$ = midiInPrepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hmi, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$639.midiInUnprepareHeader$MH,"midiInUnprepareHeader");
    }
    public static int midiInUnprepareHeader ( Addressable hmi,  Addressable pmh,  int cbmh) {
        var mh$ = midiInUnprepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hmi, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInAddBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$639.midiInAddBuffer$MH,"midiInAddBuffer");
    }
    public static int midiInAddBuffer ( Addressable hmi,  Addressable pmh,  int cbmh) {
        var mh$ = midiInAddBuffer$MH();
        try {
            return (int)mh$.invokeExact(hmi, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInStart$MH() {
        return RuntimeHelper.requireNonNull(constants$639.midiInStart$MH,"midiInStart");
    }
    public static int midiInStart ( Addressable hmi) {
        var mh$ = midiInStart$MH();
        try {
            return (int)mh$.invokeExact(hmi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInStop$MH() {
        return RuntimeHelper.requireNonNull(constants$639.midiInStop$MH,"midiInStop");
    }
    public static int midiInStop ( Addressable hmi) {
        var mh$ = midiInStop$MH();
        try {
            return (int)mh$.invokeExact(hmi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInReset$MH() {
        return RuntimeHelper.requireNonNull(constants$639.midiInReset$MH,"midiInReset");
    }
    public static int midiInReset ( Addressable hmi) {
        var mh$ = midiInReset$MH();
        try {
            return (int)mh$.invokeExact(hmi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$640.midiInGetID$MH,"midiInGetID");
    }
    public static int midiInGetID ( Addressable hmi,  Addressable puDeviceID) {
        var mh$ = midiInGetID$MH();
        try {
            return (int)mh$.invokeExact(hmi, puDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$640.midiInMessage$MH,"midiInMessage");
    }
    public static int midiInMessage ( Addressable hmi,  int uMsg,  long dw1,  long dw2) {
        var mh$ = midiInMessage$MH();
        try {
            return (int)mh$.invokeExact(hmi, uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PAUXCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPAUXCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPAUXCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PAUXCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPAUXCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPAUXCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PAUXCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPAUXCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPAUXCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PAUXCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPAUXCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPAUXCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PAUXCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPAUXCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPAUXCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PAUXCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPAUXCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPAUXCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle auxGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$640.auxGetNumDevs$MH,"auxGetNumDevs");
    }
    public static int auxGetNumDevs () {
        var mh$ = auxGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$640.auxGetDevCapsA$MH,"auxGetDevCapsA");
    }
    public static int auxGetDevCapsA ( long uDeviceID,  Addressable pac,  int cbac) {
        var mh$ = auxGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pac, cbac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$640.auxGetDevCapsW$MH,"auxGetDevCapsW");
    }
    public static int auxGetDevCapsW ( long uDeviceID,  Addressable pac,  int cbac) {
        var mh$ = auxGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pac, cbac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxSetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$640.auxSetVolume$MH,"auxSetVolume");
    }
    public static int auxSetVolume ( int uDeviceID,  int dwVolume) {
        var mh$ = auxSetVolume$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, dwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxGetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$641.auxGetVolume$MH,"auxGetVolume");
    }
    public static int auxGetVolume ( int uDeviceID,  Addressable pdwVolume) {
        var mh$ = auxGetVolume$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pdwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxOutMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$641.auxOutMessage$MH,"auxOutMessage");
    }
    public static int auxOutMessage ( int uDeviceID,  int uMsg,  long dw1,  long dw2) {
        var mh$ = auxOutMessage$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress HMIXEROBJ = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPHMIXEROBJ = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress HMIXER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPHMIXER = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mixerGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$641.mixerGetNumDevs$MH,"mixerGetNumDevs");
    }
    public static int mixerGetNumDevs () {
        var mh$ = mixerGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PMIXERCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mixerGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$641.mixerGetDevCapsA$MH,"mixerGetDevCapsA");
    }
    public static int mixerGetDevCapsA ( long uMxId,  Addressable pmxcaps,  int cbmxcaps) {
        var mh$ = mixerGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uMxId, pmxcaps, cbmxcaps);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$641.mixerGetDevCapsW$MH,"mixerGetDevCapsW");
    }
    public static int mixerGetDevCapsW ( long uMxId,  Addressable pmxcaps,  int cbmxcaps) {
        var mh$ = mixerGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uMxId, pmxcaps, cbmxcaps);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$641.mixerOpen$MH,"mixerOpen");
    }
    public static int mixerOpen ( Addressable phmx,  int uMxId,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = mixerOpen$MH();
        try {
            return (int)mh$.invokeExact(phmx, uMxId, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerClose$MH() {
        return RuntimeHelper.requireNonNull(constants$642.mixerClose$MH,"mixerClose");
    }
    public static int mixerClose ( Addressable hmx) {
        var mh$ = mixerClose$MH();
        try {
            return (int)mh$.invokeExact(hmx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$642.mixerMessage$MH,"mixerMessage");
    }
    public static int mixerMessage ( Addressable hmx,  int uMsg,  long dwParam1,  long dwParam2) {
        var mh$ = mixerMessage$MH();
        try {
            return (int)mh$.invokeExact(hmx, uMsg, dwParam1, dwParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PMIXERLINEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERLINEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERLINEW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERLINEW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERLINE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERLINE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mixerGetLineInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$642.mixerGetLineInfoA$MH,"mixerGetLineInfoA");
    }
    public static int mixerGetLineInfoA ( Addressable hmxobj,  Addressable pmxl,  int fdwInfo) {
        var mh$ = mixerGetLineInfoA$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxl, fdwInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetLineInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$642.mixerGetLineInfoW$MH,"mixerGetLineInfoW");
    }
    public static int mixerGetLineInfoW ( Addressable hmxobj,  Addressable pmxl,  int fdwInfo) {
        var mh$ = mixerGetLineInfoW$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxl, fdwInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$642.mixerGetID$MH,"mixerGetID");
    }
    public static int mixerGetID ( Addressable hmxobj,  Addressable puMxId,  int fdwId) {
        var mh$ = mixerGetID$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, puMxId, fdwId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PMIXERCONTROLA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCONTROLA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCONTROLW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCONTROLW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCONTROL = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCONTROL = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERLINECONTROLSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERLINECONTROLSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERLINECONTROLSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERLINECONTROLSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERLINECONTROLS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERLINECONTROLS = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mixerGetLineControlsA$MH() {
        return RuntimeHelper.requireNonNull(constants$642.mixerGetLineControlsA$MH,"mixerGetLineControlsA");
    }
    public static int mixerGetLineControlsA ( Addressable hmxobj,  Addressable pmxlc,  int fdwControls) {
        var mh$ = mixerGetLineControlsA$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxlc, fdwControls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetLineControlsW$MH() {
        return RuntimeHelper.requireNonNull(constants$643.mixerGetLineControlsW$MH,"mixerGetLineControlsW");
    }
    public static int mixerGetLineControlsW ( Addressable hmxobj,  Addressable pmxlc,  int fdwControls) {
        var mh$ = mixerGetLineControlsW$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxlc, fdwControls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PMIXERCONTROLDETAILS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCONTROLDETAILS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCONTROLDETAILS_LISTTEXTA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCONTROLDETAILS_LISTTEXTA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCONTROLDETAILS_LISTTEXTW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCONTROLDETAILS_LISTTEXTW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCONTROLDETAILS_LISTTEXT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCONTROLDETAILS_LISTTEXT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCONTROLDETAILS_BOOLEAN = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCONTROLDETAILS_BOOLEAN = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCONTROLDETAILS_SIGNED = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCONTROLDETAILS_SIGNED = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMIXERCONTROLDETAILS_UNSIGNED = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMIXERCONTROLDETAILS_UNSIGNED = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mixerGetControlDetailsA$MH() {
        return RuntimeHelper.requireNonNull(constants$643.mixerGetControlDetailsA$MH,"mixerGetControlDetailsA");
    }
    public static int mixerGetControlDetailsA ( Addressable hmxobj,  Addressable pmxcd,  int fdwDetails) {
        var mh$ = mixerGetControlDetailsA$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxcd, fdwDetails);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetControlDetailsW$MH() {
        return RuntimeHelper.requireNonNull(constants$643.mixerGetControlDetailsW$MH,"mixerGetControlDetailsW");
    }
    public static int mixerGetControlDetailsW ( Addressable hmxobj,  Addressable pmxcd,  int fdwDetails) {
        var mh$ = mixerGetControlDetailsW$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxcd, fdwDetails);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerSetControlDetails$MH() {
        return RuntimeHelper.requireNonNull(constants$643.mixerSetControlDetails$MH,"mixerSetControlDetails");
    }
    public static int mixerSetControlDetails ( Addressable hmxobj,  Addressable pmxcd,  int fdwDetails) {
        var mh$ = mixerSetControlDetails$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxcd, fdwDetails);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PTIMECAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPTIMECAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPTIMECAPS = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle timeGetSystemTime$MH() {
        return RuntimeHelper.requireNonNull(constants$643.timeGetSystemTime$MH,"timeGetSystemTime");
    }
    public static int timeGetSystemTime ( Addressable pmmt,  int cbmmt) {
        var mh$ = timeGetSystemTime$MH();
        try {
            return (int)mh$.invokeExact(pmmt, cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeGetTime$MH() {
        return RuntimeHelper.requireNonNull(constants$643.timeGetTime$MH,"timeGetTime");
    }
    public static int timeGetTime () {
        var mh$ = timeGetTime$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeGetDevCaps$MH() {
        return RuntimeHelper.requireNonNull(constants$644.timeGetDevCaps$MH,"timeGetDevCaps");
    }
    public static int timeGetDevCaps ( Addressable ptc,  int cbtc) {
        var mh$ = timeGetDevCaps$MH();
        try {
            return (int)mh$.invokeExact(ptc, cbtc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeBeginPeriod$MH() {
        return RuntimeHelper.requireNonNull(constants$644.timeBeginPeriod$MH,"timeBeginPeriod");
    }
    public static int timeBeginPeriod ( int uPeriod) {
        var mh$ = timeBeginPeriod$MH();
        try {
            return (int)mh$.invokeExact(uPeriod);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeEndPeriod$MH() {
        return RuntimeHelper.requireNonNull(constants$644.timeEndPeriod$MH,"timeEndPeriod");
    }
    public static int timeEndPeriod ( int uPeriod) {
        var mh$ = timeEndPeriod$MH();
        try {
            return (int)mh$.invokeExact(uPeriod);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PJOYCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPJOYCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOYCAPSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOYCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPJOYCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOYCAPSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOYCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPJOYCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOYCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOYCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPJOYCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOYCAPS2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOYCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPJOYCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOYCAPS2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOYCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPJOYCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOYCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOYINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPJOYINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOYINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOYINFOEX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPJOYINFOEX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOYINFOEX = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle joyGetPosEx$MH() {
        return RuntimeHelper.requireNonNull(constants$644.joyGetPosEx$MH,"joyGetPosEx");
    }
    public static int joyGetPosEx ( int uJoyID,  Addressable pji) {
        var mh$ = joyGetPosEx$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, pji);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$644.joyGetNumDevs$MH,"joyGetNumDevs");
    }
    public static int joyGetNumDevs () {
        var mh$ = joyGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$644.joyGetDevCapsA$MH,"joyGetDevCapsA");
    }
    public static int joyGetDevCapsA ( long uJoyID,  Addressable pjc,  int cbjc) {
        var mh$ = joyGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, pjc, cbjc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$645.joyGetDevCapsW$MH,"joyGetDevCapsW");
    }
    public static int joyGetDevCapsW ( long uJoyID,  Addressable pjc,  int cbjc) {
        var mh$ = joyGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, pjc, cbjc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetPos$MH() {
        return RuntimeHelper.requireNonNull(constants$645.joyGetPos$MH,"joyGetPos");
    }
    public static int joyGetPos ( int uJoyID,  Addressable pji) {
        var mh$ = joyGetPos$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, pji);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetThreshold$MH() {
        return RuntimeHelper.requireNonNull(constants$645.joyGetThreshold$MH,"joyGetThreshold");
    }
    public static int joyGetThreshold ( int uJoyID,  Addressable puThreshold) {
        var mh$ = joyGetThreshold$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, puThreshold);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyReleaseCapture$MH() {
        return RuntimeHelper.requireNonNull(constants$645.joyReleaseCapture$MH,"joyReleaseCapture");
    }
    public static int joyReleaseCapture ( int uJoyID) {
        var mh$ = joyReleaseCapture$MH();
        try {
            return (int)mh$.invokeExact(uJoyID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joySetCapture$MH() {
        return RuntimeHelper.requireNonNull(constants$645.joySetCapture$MH,"joySetCapture");
    }
    public static int joySetCapture ( Addressable hwnd,  int uJoyID,  int uPeriod,  int fChanged) {
        var mh$ = joySetCapture$MH();
        try {
            return (int)mh$.invokeExact(hwnd, uJoyID, uPeriod, fChanged);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joySetThreshold$MH() {
        return RuntimeHelper.requireNonNull(constants$645.joySetThreshold$MH,"joySetThreshold");
    }
    public static int joySetThreshold ( int uJoyID,  int uThreshold) {
        var mh$ = joySetThreshold$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, uThreshold);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyConfigChanged$MH() {
        return RuntimeHelper.requireNonNull(constants$646.joyConfigChanged$MH,"joyConfigChanged");
    }
    public static int joyConfigChanged ( int dwFlags) {
        var mh$ = joyConfigChanged$MH();
        try {
            return (int)mh$.invokeExact(dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PNCB = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PADAPTER_STATUS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PNAME_BUFFER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSESSION_HEADER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSESSION_BUFFER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PLANA_ENUM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFIND_NAME_HEADER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFIND_NAME_BUFFER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PACTION_HEADER = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle Netbios$MH() {
        return RuntimeHelper.requireNonNull(constants$646.Netbios$MH,"Netbios");
    }
    public static byte Netbios ( Addressable pncb) {
        var mh$ = Netbios$MH();
        try {
            return (byte)mh$.invokeExact(pncb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress I_RPC_HANDLE = Constants$root.C_POINTER$LAYOUT;
    public static OfInt RPC_STATUS = Constants$root.C_LONG$LAYOUT;
    public static OfAddress RPC_CSTR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress RPC_WSTR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress RPC_CWSTR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress RPC_BINDING_HANDLE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress handle_t = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress RPC_IF_HANDLE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_POLICY = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcBindingCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$647.RpcBindingCopy$MH,"RpcBindingCopy");
    }
    public static int RpcBindingCopy ( Addressable SourceBinding,  Addressable DestinationBinding) {
        var mh$ = RpcBindingCopy$MH();
        try {
            return (int)mh$.invokeExact(SourceBinding, DestinationBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingFree$MH() {
        return RuntimeHelper.requireNonNull(constants$647.RpcBindingFree$MH,"RpcBindingFree");
    }
    public static int RpcBindingFree ( Addressable Binding) {
        var mh$ = RpcBindingFree$MH();
        try {
            return (int)mh$.invokeExact(Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetOption$MH() {
        return RuntimeHelper.requireNonNull(constants$647.RpcBindingSetOption$MH,"RpcBindingSetOption");
    }
    public static int RpcBindingSetOption ( Addressable hBinding,  int option,  long optionValue) {
        var mh$ = RpcBindingSetOption$MH();
        try {
            return (int)mh$.invokeExact(hBinding, option, optionValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqOption$MH() {
        return RuntimeHelper.requireNonNull(constants$647.RpcBindingInqOption$MH,"RpcBindingInqOption");
    }
    public static int RpcBindingInqOption ( Addressable hBinding,  int option,  Addressable pOptionValue) {
        var mh$ = RpcBindingInqOption$MH();
        try {
            return (int)mh$.invokeExact(hBinding, option, pOptionValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingFromStringBindingA$MH() {
        return RuntimeHelper.requireNonNull(constants$648.RpcBindingFromStringBindingA$MH,"RpcBindingFromStringBindingA");
    }
    public static int RpcBindingFromStringBindingA ( Addressable StringBinding,  Addressable Binding) {
        var mh$ = RpcBindingFromStringBindingA$MH();
        try {
            return (int)mh$.invokeExact(StringBinding, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingFromStringBindingW$MH() {
        return RuntimeHelper.requireNonNull(constants$648.RpcBindingFromStringBindingW$MH,"RpcBindingFromStringBindingW");
    }
    public static int RpcBindingFromStringBindingW ( Addressable StringBinding,  Addressable Binding) {
        var mh$ = RpcBindingFromStringBindingW$MH();
        try {
            return (int)mh$.invokeExact(StringBinding, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsGetContextBinding$MH() {
        return RuntimeHelper.requireNonNull(constants$648.RpcSsGetContextBinding$MH,"RpcSsGetContextBinding");
    }
    public static int RpcSsGetContextBinding ( Addressable ContextHandle,  Addressable Binding) {
        var mh$ = RpcSsGetContextBinding$MH();
        try {
            return (int)mh$.invokeExact(ContextHandle, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqObject$MH() {
        return RuntimeHelper.requireNonNull(constants$648.RpcBindingInqObject$MH,"RpcBindingInqObject");
    }
    public static int RpcBindingInqObject ( Addressable Binding,  Addressable ObjectUuid) {
        var mh$ = RpcBindingInqObject$MH();
        try {
            return (int)mh$.invokeExact(Binding, ObjectUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingReset$MH() {
        return RuntimeHelper.requireNonNull(constants$648.RpcBindingReset$MH,"RpcBindingReset");
    }
    public static int RpcBindingReset ( Addressable Binding) {
        var mh$ = RpcBindingReset$MH();
        try {
            return (int)mh$.invokeExact(Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetObject$MH() {
        return RuntimeHelper.requireNonNull(constants$648.RpcBindingSetObject$MH,"RpcBindingSetObject");
    }
    public static int RpcBindingSetObject ( Addressable Binding,  Addressable ObjectUuid) {
        var mh$ = RpcBindingSetObject$MH();
        try {
            return (int)mh$.invokeExact(Binding, ObjectUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqDefaultProtectLevel$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcMgmtInqDefaultProtectLevel$MH,"RpcMgmtInqDefaultProtectLevel");
    }
    public static int RpcMgmtInqDefaultProtectLevel ( int AuthnSvc,  Addressable AuthnLevel) {
        var mh$ = RpcMgmtInqDefaultProtectLevel$MH();
        try {
            return (int)mh$.invokeExact(AuthnSvc, AuthnLevel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingToStringBindingA$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcBindingToStringBindingA$MH,"RpcBindingToStringBindingA");
    }
    public static int RpcBindingToStringBindingA ( Addressable Binding,  Addressable StringBinding) {
        var mh$ = RpcBindingToStringBindingA$MH();
        try {
            return (int)mh$.invokeExact(Binding, StringBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingToStringBindingW$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcBindingToStringBindingW$MH,"RpcBindingToStringBindingW");
    }
    public static int RpcBindingToStringBindingW ( Addressable Binding,  Addressable StringBinding) {
        var mh$ = RpcBindingToStringBindingW$MH();
        try {
            return (int)mh$.invokeExact(Binding, StringBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingVectorFree$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcBindingVectorFree$MH,"RpcBindingVectorFree");
    }
    public static int RpcBindingVectorFree ( Addressable BindingVector) {
        var mh$ = RpcBindingVectorFree$MH();
        try {
            return (int)mh$.invokeExact(BindingVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingComposeA$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcStringBindingComposeA$MH,"RpcStringBindingComposeA");
    }
    public static int RpcStringBindingComposeA ( Addressable ObjUuid,  Addressable ProtSeq,  Addressable NetworkAddr,  Addressable Endpoint,  Addressable Options,  Addressable StringBinding) {
        var mh$ = RpcStringBindingComposeA$MH();
        try {
            return (int)mh$.invokeExact(ObjUuid, ProtSeq, NetworkAddr, Endpoint, Options, StringBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingComposeW$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcStringBindingComposeW$MH,"RpcStringBindingComposeW");
    }
    public static int RpcStringBindingComposeW ( Addressable ObjUuid,  Addressable ProtSeq,  Addressable NetworkAddr,  Addressable Endpoint,  Addressable Options,  Addressable StringBinding) {
        var mh$ = RpcStringBindingComposeW$MH();
        try {
            return (int)mh$.invokeExact(ObjUuid, ProtSeq, NetworkAddr, Endpoint, Options, StringBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingParseA$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcStringBindingParseA$MH,"RpcStringBindingParseA");
    }
    public static int RpcStringBindingParseA ( Addressable StringBinding,  Addressable ObjUuid,  Addressable Protseq,  Addressable NetworkAddr,  Addressable Endpoint,  Addressable NetworkOptions) {
        var mh$ = RpcStringBindingParseA$MH();
        try {
            return (int)mh$.invokeExact(StringBinding, ObjUuid, Protseq, NetworkAddr, Endpoint, NetworkOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingParseW$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcStringBindingParseW$MH,"RpcStringBindingParseW");
    }
    public static int RpcStringBindingParseW ( Addressable StringBinding,  Addressable ObjUuid,  Addressable Protseq,  Addressable NetworkAddr,  Addressable Endpoint,  Addressable NetworkOptions) {
        var mh$ = RpcStringBindingParseW$MH();
        try {
            return (int)mh$.invokeExact(StringBinding, ObjUuid, Protseq, NetworkAddr, Endpoint, NetworkOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringFreeA$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcStringFreeA$MH,"RpcStringFreeA");
    }
    public static int RpcStringFreeA ( Addressable String_) {
        var mh$ = RpcStringFreeA$MH();
        try {
            return (int)mh$.invokeExact(String_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringFreeW$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcStringFreeW$MH,"RpcStringFreeW");
    }
    public static int RpcStringFreeW ( Addressable String_) {
        var mh$ = RpcStringFreeW$MH();
        try {
            return (int)mh$.invokeExact(String_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcIfInqId$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcIfInqId$MH,"RpcIfInqId");
    }
    public static int RpcIfInqId ( Addressable RpcIfHandle,  Addressable RpcIfId) {
        var mh$ = RpcIfInqId$MH();
        try {
            return (int)mh$.invokeExact(RpcIfHandle, RpcIfId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkIsProtseqValidA$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcNetworkIsProtseqValidA$MH,"RpcNetworkIsProtseqValidA");
    }
    public static int RpcNetworkIsProtseqValidA ( Addressable Protseq) {
        var mh$ = RpcNetworkIsProtseqValidA$MH();
        try {
            return (int)mh$.invokeExact(Protseq);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkIsProtseqValidW$MH() {
        return RuntimeHelper.requireNonNull(constants$651.RpcNetworkIsProtseqValidW$MH,"RpcNetworkIsProtseqValidW");
    }
    public static int RpcNetworkIsProtseqValidW ( Addressable Protseq) {
        var mh$ = RpcNetworkIsProtseqValidW$MH();
        try {
            return (int)mh$.invokeExact(Protseq);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqComTimeout$MH() {
        return RuntimeHelper.requireNonNull(constants$651.RpcMgmtInqComTimeout$MH,"RpcMgmtInqComTimeout");
    }
    public static int RpcMgmtInqComTimeout ( Addressable Binding,  Addressable Timeout) {
        var mh$ = RpcMgmtInqComTimeout$MH();
        try {
            return (int)mh$.invokeExact(Binding, Timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetComTimeout$MH() {
        return RuntimeHelper.requireNonNull(constants$651.RpcMgmtSetComTimeout$MH,"RpcMgmtSetComTimeout");
    }
    public static int RpcMgmtSetComTimeout ( Addressable Binding,  int Timeout) {
        var mh$ = RpcMgmtSetComTimeout$MH();
        try {
            return (int)mh$.invokeExact(Binding, Timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetCancelTimeout$MH() {
        return RuntimeHelper.requireNonNull(constants$651.RpcMgmtSetCancelTimeout$MH,"RpcMgmtSetCancelTimeout");
    }
    public static int RpcMgmtSetCancelTimeout ( int Timeout) {
        var mh$ = RpcMgmtSetCancelTimeout$MH();
        try {
            return (int)mh$.invokeExact(Timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkInqProtseqsA$MH() {
        return RuntimeHelper.requireNonNull(constants$651.RpcNetworkInqProtseqsA$MH,"RpcNetworkInqProtseqsA");
    }
    public static int RpcNetworkInqProtseqsA ( Addressable ProtseqVector) {
        var mh$ = RpcNetworkInqProtseqsA$MH();
        try {
            return (int)mh$.invokeExact(ProtseqVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkInqProtseqsW$MH() {
        return RuntimeHelper.requireNonNull(constants$651.RpcNetworkInqProtseqsW$MH,"RpcNetworkInqProtseqsW");
    }
    public static int RpcNetworkInqProtseqsW ( Addressable ProtseqVector) {
        var mh$ = RpcNetworkInqProtseqsW$MH();
        try {
            return (int)mh$.invokeExact(ProtseqVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcObjectInqType$MH() {
        return RuntimeHelper.requireNonNull(constants$652.RpcObjectInqType$MH,"RpcObjectInqType");
    }
    public static int RpcObjectInqType ( Addressable ObjUuid,  Addressable TypeUuid) {
        var mh$ = RpcObjectInqType$MH();
        try {
            return (int)mh$.invokeExact(ObjUuid, TypeUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcObjectSetInqFn$MH() {
        return RuntimeHelper.requireNonNull(constants$652.RpcObjectSetInqFn$MH,"RpcObjectSetInqFn");
    }
    public static int RpcObjectSetInqFn ( Addressable InquiryFn) {
        var mh$ = RpcObjectSetInqFn$MH();
        try {
            return (int)mh$.invokeExact(InquiryFn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcObjectSetType$MH() {
        return RuntimeHelper.requireNonNull(constants$652.RpcObjectSetType$MH,"RpcObjectSetType");
    }
    public static int RpcObjectSetType ( Addressable ObjUuid,  Addressable TypeUuid) {
        var mh$ = RpcObjectSetType$MH();
        try {
            return (int)mh$.invokeExact(ObjUuid, TypeUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcProtseqVectorFreeA$MH() {
        return RuntimeHelper.requireNonNull(constants$652.RpcProtseqVectorFreeA$MH,"RpcProtseqVectorFreeA");
    }
    public static int RpcProtseqVectorFreeA ( Addressable ProtseqVector) {
        var mh$ = RpcProtseqVectorFreeA$MH();
        try {
            return (int)mh$.invokeExact(ProtseqVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcProtseqVectorFreeW$MH() {
        return RuntimeHelper.requireNonNull(constants$653.RpcProtseqVectorFreeW$MH,"RpcProtseqVectorFreeW");
    }
    public static int RpcProtseqVectorFreeW ( Addressable ProtseqVector) {
        var mh$ = RpcProtseqVectorFreeW$MH();
        try {
            return (int)mh$.invokeExact(ProtseqVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqBindings$MH() {
        return RuntimeHelper.requireNonNull(constants$653.RpcServerInqBindings$MH,"RpcServerInqBindings");
    }
    public static int RpcServerInqBindings ( Addressable BindingVector) {
        var mh$ = RpcServerInqBindings$MH();
        try {
            return (int)mh$.invokeExact(BindingVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqBindingsEx$MH() {
        return RuntimeHelper.requireNonNull(constants$653.RpcServerInqBindingsEx$MH,"RpcServerInqBindingsEx");
    }
    public static int RpcServerInqBindingsEx ( Addressable SecurityDescriptor,  Addressable BindingVector) {
        var mh$ = RpcServerInqBindingsEx$MH();
        try {
            return (int)mh$.invokeExact(SecurityDescriptor, BindingVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqIf$MH() {
        return RuntimeHelper.requireNonNull(constants$653.RpcServerInqIf$MH,"RpcServerInqIf");
    }
    public static int RpcServerInqIf ( Addressable IfSpec,  Addressable MgrTypeUuid,  Addressable MgrEpv) {
        var mh$ = RpcServerInqIf$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, MgrEpv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerListen$MH() {
        return RuntimeHelper.requireNonNull(constants$653.RpcServerListen$MH,"RpcServerListen");
    }
    public static int RpcServerListen ( int MinimumCallThreads,  int MaxCalls,  int DontWait) {
        var mh$ = RpcServerListen$MH();
        try {
            return (int)mh$.invokeExact(MinimumCallThreads, MaxCalls, DontWait);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterIf$MH() {
        return RuntimeHelper.requireNonNull(constants$653.RpcServerRegisterIf$MH,"RpcServerRegisterIf");
    }
    public static int RpcServerRegisterIf ( Addressable IfSpec,  Addressable MgrTypeUuid,  Addressable MgrEpv) {
        var mh$ = RpcServerRegisterIf$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, MgrEpv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterIfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$654.RpcServerRegisterIfEx$MH,"RpcServerRegisterIfEx");
    }
    public static int RpcServerRegisterIfEx ( Addressable IfSpec,  Addressable MgrTypeUuid,  Addressable MgrEpv,  int Flags,  int MaxCalls,  Addressable IfCallback) {
        var mh$ = RpcServerRegisterIfEx$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, MgrEpv, Flags, MaxCalls, IfCallback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterIf2$MH() {
        return RuntimeHelper.requireNonNull(constants$654.RpcServerRegisterIf2$MH,"RpcServerRegisterIf2");
    }
    public static int RpcServerRegisterIf2 ( Addressable IfSpec,  Addressable MgrTypeUuid,  Addressable MgrEpv,  int Flags,  int MaxCalls,  int MaxRpcSize,  Addressable IfCallbackFn) {
        var mh$ = RpcServerRegisterIf2$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, MgrEpv, Flags, MaxCalls, MaxRpcSize, IfCallbackFn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterIf3$MH() {
        return RuntimeHelper.requireNonNull(constants$655.RpcServerRegisterIf3$MH,"RpcServerRegisterIf3");
    }
    public static int RpcServerRegisterIf3 ( Addressable IfSpec,  Addressable MgrTypeUuid,  Addressable MgrEpv,  int Flags,  int MaxCalls,  int MaxRpcSize,  Addressable IfCallback,  Addressable SecurityDescriptor) {
        var mh$ = RpcServerRegisterIf3$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, MgrEpv, Flags, MaxCalls, MaxRpcSize, IfCallback, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUnregisterIf$MH() {
        return RuntimeHelper.requireNonNull(constants$655.RpcServerUnregisterIf$MH,"RpcServerUnregisterIf");
    }
    public static int RpcServerUnregisterIf ( Addressable IfSpec,  Addressable MgrTypeUuid,  int WaitForCallsToComplete) {
        var mh$ = RpcServerUnregisterIf$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, WaitForCallsToComplete);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUnregisterIfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$655.RpcServerUnregisterIfEx$MH,"RpcServerUnregisterIfEx");
    }
    public static int RpcServerUnregisterIfEx ( Addressable IfSpec,  Addressable MgrTypeUuid,  int RundownContextHandles) {
        var mh$ = RpcServerUnregisterIfEx$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, RundownContextHandles);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqs$MH() {
        return RuntimeHelper.requireNonNull(constants$655.RpcServerUseAllProtseqs$MH,"RpcServerUseAllProtseqs");
    }
    public static int RpcServerUseAllProtseqs ( int MaxCalls,  Addressable SecurityDescriptor) {
        var mh$ = RpcServerUseAllProtseqs$MH();
        try {
            return (int)mh$.invokeExact(MaxCalls, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqsEx$MH() {
        return RuntimeHelper.requireNonNull(constants$656.RpcServerUseAllProtseqsEx$MH,"RpcServerUseAllProtseqsEx");
    }
    public static int RpcServerUseAllProtseqsEx ( int MaxCalls,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RpcServerUseAllProtseqsEx$MH();
        try {
            return (int)mh$.invokeExact(MaxCalls, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqsIf$MH() {
        return RuntimeHelper.requireNonNull(constants$656.RpcServerUseAllProtseqsIf$MH,"RpcServerUseAllProtseqsIf");
    }
    public static int RpcServerUseAllProtseqsIf ( int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor) {
        var mh$ = RpcServerUseAllProtseqsIf$MH();
        try {
            return (int)mh$.invokeExact(MaxCalls, IfSpec, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqsIfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$656.RpcServerUseAllProtseqsIfEx$MH,"RpcServerUseAllProtseqsIfEx");
    }
    public static int RpcServerUseAllProtseqsIfEx ( int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RpcServerUseAllProtseqsIfEx$MH();
        try {
            return (int)mh$.invokeExact(MaxCalls, IfSpec, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqA$MH() {
        return RuntimeHelper.requireNonNull(constants$656.RpcServerUseProtseqA$MH,"RpcServerUseProtseqA");
    }
    public static int RpcServerUseProtseqA ( Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqExA$MH() {
        return RuntimeHelper.requireNonNull(constants$656.RpcServerUseProtseqExA$MH,"RpcServerUseProtseqExA");
    }
    public static int RpcServerUseProtseqExA ( Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RpcServerUseProtseqExA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqW$MH() {
        return RuntimeHelper.requireNonNull(constants$656.RpcServerUseProtseqW$MH,"RpcServerUseProtseqW");
    }
    public static int RpcServerUseProtseqW ( Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqExW$MH() {
        return RuntimeHelper.requireNonNull(constants$657.RpcServerUseProtseqExW$MH,"RpcServerUseProtseqExW");
    }
    public static int RpcServerUseProtseqExW ( Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RpcServerUseProtseqExW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpA$MH() {
        return RuntimeHelper.requireNonNull(constants$657.RpcServerUseProtseqEpA$MH,"RpcServerUseProtseqEpA");
    }
    public static int RpcServerUseProtseqEpA ( Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqEpA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, Endpoint, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpExA$MH() {
        return RuntimeHelper.requireNonNull(constants$657.RpcServerUseProtseqEpExA$MH,"RpcServerUseProtseqEpExA");
    }
    public static int RpcServerUseProtseqEpExA ( Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RpcServerUseProtseqEpExA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpW$MH() {
        return RuntimeHelper.requireNonNull(constants$657.RpcServerUseProtseqEpW$MH,"RpcServerUseProtseqEpW");
    }
    public static int RpcServerUseProtseqEpW ( Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqEpW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, Endpoint, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpExW$MH() {
        return RuntimeHelper.requireNonNull(constants$657.RpcServerUseProtseqEpExW$MH,"RpcServerUseProtseqEpExW");
    }
    public static int RpcServerUseProtseqEpExW ( Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RpcServerUseProtseqEpExW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfA$MH() {
        return RuntimeHelper.requireNonNull(constants$657.RpcServerUseProtseqIfA$MH,"RpcServerUseProtseqIfA");
    }
    public static int RpcServerUseProtseqIfA ( Addressable Protseq,  int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqIfA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, IfSpec, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfExA$MH() {
        return RuntimeHelper.requireNonNull(constants$658.RpcServerUseProtseqIfExA$MH,"RpcServerUseProtseqIfExA");
    }
    public static int RpcServerUseProtseqIfExA ( Addressable Protseq,  int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RpcServerUseProtseqIfExA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, IfSpec, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfW$MH() {
        return RuntimeHelper.requireNonNull(constants$658.RpcServerUseProtseqIfW$MH,"RpcServerUseProtseqIfW");
    }
    public static int RpcServerUseProtseqIfW ( Addressable Protseq,  int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqIfW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, IfSpec, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfExW$MH() {
        return RuntimeHelper.requireNonNull(constants$658.RpcServerUseProtseqIfExW$MH,"RpcServerUseProtseqIfExW");
    }
    public static int RpcServerUseProtseqIfExW ( Addressable Protseq,  int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RpcServerUseProtseqIfExW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, IfSpec, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerYield$MH() {
        return RuntimeHelper.requireNonNull(constants$658.RpcServerYield$MH,"RpcServerYield");
    }
    public static void RpcServerYield () {
        var mh$ = RpcServerYield$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtStatsVectorFree$MH() {
        return RuntimeHelper.requireNonNull(constants$658.RpcMgmtStatsVectorFree$MH,"RpcMgmtStatsVectorFree");
    }
    public static int RpcMgmtStatsVectorFree ( Addressable StatsVector) {
        var mh$ = RpcMgmtStatsVectorFree$MH();
        try {
            return (int)mh$.invokeExact(StatsVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqStats$MH() {
        return RuntimeHelper.requireNonNull(constants$658.RpcMgmtInqStats$MH,"RpcMgmtInqStats");
    }
    public static int RpcMgmtInqStats ( Addressable Binding,  Addressable Statistics) {
        var mh$ = RpcMgmtInqStats$MH();
        try {
            return (int)mh$.invokeExact(Binding, Statistics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtIsServerListening$MH() {
        return RuntimeHelper.requireNonNull(constants$659.RpcMgmtIsServerListening$MH,"RpcMgmtIsServerListening");
    }
    public static int RpcMgmtIsServerListening ( Addressable Binding) {
        var mh$ = RpcMgmtIsServerListening$MH();
        try {
            return (int)mh$.invokeExact(Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtStopServerListening$MH() {
        return RuntimeHelper.requireNonNull(constants$659.RpcMgmtStopServerListening$MH,"RpcMgmtStopServerListening");
    }
    public static int RpcMgmtStopServerListening ( Addressable Binding) {
        var mh$ = RpcMgmtStopServerListening$MH();
        try {
            return (int)mh$.invokeExact(Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtWaitServerListen$MH() {
        return RuntimeHelper.requireNonNull(constants$659.RpcMgmtWaitServerListen$MH,"RpcMgmtWaitServerListen");
    }
    public static int RpcMgmtWaitServerListen () {
        var mh$ = RpcMgmtWaitServerListen$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetServerStackSize$MH() {
        return RuntimeHelper.requireNonNull(constants$659.RpcMgmtSetServerStackSize$MH,"RpcMgmtSetServerStackSize");
    }
    public static int RpcMgmtSetServerStackSize ( int ThreadStackSize) {
        var mh$ = RpcMgmtSetServerStackSize$MH();
        try {
            return (int)mh$.invokeExact(ThreadStackSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsDontSerializeContext$MH() {
        return RuntimeHelper.requireNonNull(constants$659.RpcSsDontSerializeContext$MH,"RpcSsDontSerializeContext");
    }
    public static void RpcSsDontSerializeContext () {
        var mh$ = RpcSsDontSerializeContext$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEnableIdleCleanup$MH() {
        return RuntimeHelper.requireNonNull(constants$659.RpcMgmtEnableIdleCleanup$MH,"RpcMgmtEnableIdleCleanup");
    }
    public static int RpcMgmtEnableIdleCleanup () {
        var mh$ = RpcMgmtEnableIdleCleanup$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqIfIds$MH() {
        return RuntimeHelper.requireNonNull(constants$660.RpcMgmtInqIfIds$MH,"RpcMgmtInqIfIds");
    }
    public static int RpcMgmtInqIfIds ( Addressable Binding,  Addressable IfIdVector) {
        var mh$ = RpcMgmtInqIfIds$MH();
        try {
            return (int)mh$.invokeExact(Binding, IfIdVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcIfIdVectorFree$MH() {
        return RuntimeHelper.requireNonNull(constants$660.RpcIfIdVectorFree$MH,"RpcIfIdVectorFree");
    }
    public static int RpcIfIdVectorFree ( Addressable IfIdVector) {
        var mh$ = RpcIfIdVectorFree$MH();
        try {
            return (int)mh$.invokeExact(IfIdVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqServerPrincNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$660.RpcMgmtInqServerPrincNameA$MH,"RpcMgmtInqServerPrincNameA");
    }
    public static int RpcMgmtInqServerPrincNameA ( Addressable Binding,  int AuthnSvc,  Addressable ServerPrincName) {
        var mh$ = RpcMgmtInqServerPrincNameA$MH();
        try {
            return (int)mh$.invokeExact(Binding, AuthnSvc, ServerPrincName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqServerPrincNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$660.RpcMgmtInqServerPrincNameW$MH,"RpcMgmtInqServerPrincNameW");
    }
    public static int RpcMgmtInqServerPrincNameW ( Addressable Binding,  int AuthnSvc,  Addressable ServerPrincName) {
        var mh$ = RpcMgmtInqServerPrincNameW$MH();
        try {
            return (int)mh$.invokeExact(Binding, AuthnSvc, ServerPrincName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqDefaultPrincNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$660.RpcServerInqDefaultPrincNameA$MH,"RpcServerInqDefaultPrincNameA");
    }
    public static int RpcServerInqDefaultPrincNameA ( int AuthnSvc,  Addressable PrincName) {
        var mh$ = RpcServerInqDefaultPrincNameA$MH();
        try {
            return (int)mh$.invokeExact(AuthnSvc, PrincName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqDefaultPrincNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$660.RpcServerInqDefaultPrincNameW$MH,"RpcServerInqDefaultPrincNameW");
    }
    public static int RpcServerInqDefaultPrincNameW ( int AuthnSvc,  Addressable PrincName) {
        var mh$ = RpcServerInqDefaultPrincNameW$MH();
        try {
            return (int)mh$.invokeExact(AuthnSvc, PrincName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpResolveBinding$MH() {
        return RuntimeHelper.requireNonNull(constants$661.RpcEpResolveBinding$MH,"RpcEpResolveBinding");
    }
    public static int RpcEpResolveBinding ( Addressable Binding,  Addressable IfSpec) {
        var mh$ = RpcEpResolveBinding$MH();
        try {
            return (int)mh$.invokeExact(Binding, IfSpec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingInqEntryNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$661.RpcNsBindingInqEntryNameA$MH,"RpcNsBindingInqEntryNameA");
    }
    public static int RpcNsBindingInqEntryNameA ( Addressable Binding,  int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RpcNsBindingInqEntryNameA$MH();
        try {
            return (int)mh$.invokeExact(Binding, EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingInqEntryNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$661.RpcNsBindingInqEntryNameW$MH,"RpcNsBindingInqEntryNameW");
    }
    public static int RpcNsBindingInqEntryNameW ( Addressable Binding,  int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RpcNsBindingInqEntryNameW$MH();
        try {
            return (int)mh$.invokeExact(Binding, EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress RPC_AUTH_IDENTITY_HANDLE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress RPC_AUTHZ_HANDLE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_SECURITY_QOS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSEC_WINNT_AUTH_IDENTITY_W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSEC_WINNT_AUTH_IDENTITY_A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_SECURITY_QOS_V2_W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_SECURITY_QOS_V2_A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_SECURITY_QOS_V3_W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_SECURITY_QOS_V3_A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_SECURITY_QOS_V4_W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_SECURITY_QOS_V4_A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_SECURITY_QOS_V5_W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_SECURITY_QOS_V5_A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_BINDING_HANDLE_TEMPLATE_V1_W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_BINDING_HANDLE_TEMPLATE_V1_A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_BINDING_HANDLE_SECURITY_V1_W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_BINDING_HANDLE_SECURITY_V1_A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_BINDING_HANDLE_OPTIONS_V1 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcBindingCreateA$MH() {
        return RuntimeHelper.requireNonNull(constants$661.RpcBindingCreateA$MH,"RpcBindingCreateA");
    }
    public static int RpcBindingCreateA ( Addressable Template,  Addressable Security,  Addressable Options,  Addressable Binding) {
        var mh$ = RpcBindingCreateA$MH();
        try {
            return (int)mh$.invokeExact(Template, Security, Options, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingCreateW$MH() {
        return RuntimeHelper.requireNonNull(constants$661.RpcBindingCreateW$MH,"RpcBindingCreateW");
    }
    public static int RpcBindingCreateW ( Addressable Template,  Addressable Security,  Addressable Options,  Addressable Binding) {
        var mh$ = RpcBindingCreateW$MH();
        try {
            return (int)mh$.invokeExact(Template, Security, Options, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingGetTrainingContextHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$661.RpcBindingGetTrainingContextHandle$MH,"RpcBindingGetTrainingContextHandle");
    }
    public static int RpcBindingGetTrainingContextHandle ( Addressable Binding,  Addressable ContextHandle) {
        var mh$ = RpcBindingGetTrainingContextHandle$MH();
        try {
            return (int)mh$.invokeExact(Binding, ContextHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqBindingHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$662.RpcServerInqBindingHandle$MH,"RpcServerInqBindingHandle");
    }
    public static int RpcServerInqBindingHandle ( Addressable Binding) {
        var mh$ = RpcServerInqBindingHandle$MH();
        try {
            return (int)mh$.invokeExact(Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int RPCHTTP_RS_REDIRECT() {
        return (int)1L;
    }
    public static int RPCHTTP_RS_ACCESS_1() {
        return (int)2L;
    }
    public static int RPCHTTP_RS_SESSION() {
        return (int)3L;
    }
    public static int RPCHTTP_RS_ACCESS_2() {
        return (int)4L;
    }
    public static int RPCHTTP_RS_INTERFACE() {
        return (int)5L;
    }
    public static MethodHandle RpcImpersonateClient$MH() {
        return RuntimeHelper.requireNonNull(constants$662.RpcImpersonateClient$MH,"RpcImpersonateClient");
    }
    public static int RpcImpersonateClient ( Addressable BindingHandle) {
        var mh$ = RpcImpersonateClient$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcImpersonateClient2$MH() {
        return RuntimeHelper.requireNonNull(constants$663.RpcImpersonateClient2$MH,"RpcImpersonateClient2");
    }
    public static int RpcImpersonateClient2 ( Addressable BindingHandle) {
        var mh$ = RpcImpersonateClient2$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcRevertToSelfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$663.RpcRevertToSelfEx$MH,"RpcRevertToSelfEx");
    }
    public static int RpcRevertToSelfEx ( Addressable BindingHandle) {
        var mh$ = RpcRevertToSelfEx$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcRevertToSelf$MH() {
        return RuntimeHelper.requireNonNull(constants$663.RpcRevertToSelf$MH,"RpcRevertToSelf");
    }
    public static int RpcRevertToSelf () {
        var mh$ = RpcRevertToSelf$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcImpersonateClientContainer$MH() {
        return RuntimeHelper.requireNonNull(constants$663.RpcImpersonateClientContainer$MH,"RpcImpersonateClientContainer");
    }
    public static int RpcImpersonateClientContainer ( Addressable BindingHandle) {
        var mh$ = RpcImpersonateClientContainer$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcRevertContainerImpersonation$MH() {
        return RuntimeHelper.requireNonNull(constants$663.RpcRevertContainerImpersonation$MH,"RpcRevertContainerImpersonation");
    }
    public static int RpcRevertContainerImpersonation () {
        var mh$ = RpcRevertContainerImpersonation$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientA$MH() {
        return RuntimeHelper.requireNonNull(constants$663.RpcBindingInqAuthClientA$MH,"RpcBindingInqAuthClientA");
    }
    public static int RpcBindingInqAuthClientA ( Addressable ClientBinding,  Addressable Privs,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthzSvc) {
        var mh$ = RpcBindingInqAuthClientA$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientW$MH() {
        return RuntimeHelper.requireNonNull(constants$664.RpcBindingInqAuthClientW$MH,"RpcBindingInqAuthClientW");
    }
    public static int RpcBindingInqAuthClientW ( Addressable ClientBinding,  Addressable Privs,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthzSvc) {
        var mh$ = RpcBindingInqAuthClientW$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientExA$MH() {
        return RuntimeHelper.requireNonNull(constants$664.RpcBindingInqAuthClientExA$MH,"RpcBindingInqAuthClientExA");
    }
    public static int RpcBindingInqAuthClientExA ( Addressable ClientBinding,  Addressable Privs,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthzSvc,  int Flags) {
        var mh$ = RpcBindingInqAuthClientExA$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientExW$MH() {
        return RuntimeHelper.requireNonNull(constants$664.RpcBindingInqAuthClientExW$MH,"RpcBindingInqAuthClientExW");
    }
    public static int RpcBindingInqAuthClientExW ( Addressable ClientBinding,  Addressable Privs,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthzSvc,  int Flags) {
        var mh$ = RpcBindingInqAuthClientExW$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$664.RpcBindingInqAuthInfoA$MH,"RpcBindingInqAuthInfoA");
    }
    public static int RpcBindingInqAuthInfoA ( Addressable Binding,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthIdentity,  Addressable AuthzSvc) {
        var mh$ = RpcBindingInqAuthInfoA$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$664.RpcBindingInqAuthInfoW$MH,"RpcBindingInqAuthInfoW");
    }
    public static int RpcBindingInqAuthInfoW ( Addressable Binding,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthIdentity,  Addressable AuthzSvc) {
        var mh$ = RpcBindingInqAuthInfoW$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$664.RpcBindingSetAuthInfoA$MH,"RpcBindingSetAuthInfoA");
    }
    public static int RpcBindingSetAuthInfoA ( Addressable Binding,  Addressable ServerPrincName,  int AuthnLevel,  int AuthnSvc,  Addressable AuthIdentity,  int AuthzSvc) {
        var mh$ = RpcBindingSetAuthInfoA$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$665.RpcBindingSetAuthInfoExA$MH,"RpcBindingSetAuthInfoExA");
    }
    public static int RpcBindingSetAuthInfoExA ( Addressable Binding,  Addressable ServerPrincName,  int AuthnLevel,  int AuthnSvc,  Addressable AuthIdentity,  int AuthzSvc,  Addressable SecurityQos) {
        var mh$ = RpcBindingSetAuthInfoExA$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, SecurityQos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$665.RpcBindingSetAuthInfoW$MH,"RpcBindingSetAuthInfoW");
    }
    public static int RpcBindingSetAuthInfoW ( Addressable Binding,  Addressable ServerPrincName,  int AuthnLevel,  int AuthnSvc,  Addressable AuthIdentity,  int AuthzSvc) {
        var mh$ = RpcBindingSetAuthInfoW$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$665.RpcBindingSetAuthInfoExW$MH,"RpcBindingSetAuthInfoExW");
    }
    public static int RpcBindingSetAuthInfoExW ( Addressable Binding,  Addressable ServerPrincName,  int AuthnLevel,  int AuthnSvc,  Addressable AuthIdentity,  int AuthzSvc,  Addressable SecurityQOS) {
        var mh$ = RpcBindingSetAuthInfoExW$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, SecurityQOS);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$665.RpcBindingInqAuthInfoExA$MH,"RpcBindingInqAuthInfoExA");
    }
    public static int RpcBindingInqAuthInfoExA ( Addressable Binding,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthIdentity,  Addressable AuthzSvc,  int RpcQosVersion,  Addressable SecurityQOS) {
        var mh$ = RpcBindingInqAuthInfoExA$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, RpcQosVersion, SecurityQOS);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$665.RpcBindingInqAuthInfoExW$MH,"RpcBindingInqAuthInfoExW");
    }
    public static int RpcBindingInqAuthInfoExW ( Addressable Binding,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthIdentity,  Addressable AuthzSvc,  int RpcQosVersion,  Addressable SecurityQOS) {
        var mh$ = RpcBindingInqAuthInfoExW$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, RpcQosVersion, SecurityQOS);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerCompleteSecurityCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$666.RpcServerCompleteSecurityCallback$MH,"RpcServerCompleteSecurityCallback");
    }
    public static int RpcServerCompleteSecurityCallback ( Addressable BindingHandle,  int Status) {
        var mh$ = RpcServerCompleteSecurityCallback$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterAuthInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$666.RpcServerRegisterAuthInfoA$MH,"RpcServerRegisterAuthInfoA");
    }
    public static int RpcServerRegisterAuthInfoA ( Addressable ServerPrincName,  int AuthnSvc,  Addressable GetKeyFn,  Addressable Arg) {
        var mh$ = RpcServerRegisterAuthInfoA$MH();
        try {
            return (int)mh$.invokeExact(ServerPrincName, AuthnSvc, GetKeyFn, Arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterAuthInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$666.RpcServerRegisterAuthInfoW$MH,"RpcServerRegisterAuthInfoW");
    }
    public static int RpcServerRegisterAuthInfoW ( Addressable ServerPrincName,  int AuthnSvc,  Addressable GetKeyFn,  Addressable Arg) {
        var mh$ = RpcServerRegisterAuthInfoW$MH();
        try {
            return (int)mh$.invokeExact(ServerPrincName, AuthnSvc, GetKeyFn, Arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PRPC_CLIENT_INFORMATION1 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcBindingServerFromClient$MH() {
        return RuntimeHelper.requireNonNull(constants$666.RpcBindingServerFromClient$MH,"RpcBindingServerFromClient");
    }
    public static int RpcBindingServerFromClient ( Addressable ClientBinding,  Addressable ServerBinding) {
        var mh$ = RpcBindingServerFromClient$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, ServerBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcRaiseException$MH() {
        return RuntimeHelper.requireNonNull(constants$666.RpcRaiseException$MH,"RpcRaiseException");
    }
    public static void RpcRaiseException ( int exception) {
        var mh$ = RpcRaiseException$MH();
        try {
            mh$.invokeExact(exception);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcTestCancel$MH() {
        return RuntimeHelper.requireNonNull(constants$667.RpcTestCancel$MH,"RpcTestCancel");
    }
    public static int RpcTestCancel () {
        var mh$ = RpcTestCancel$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerTestCancel$MH() {
        return RuntimeHelper.requireNonNull(constants$667.RpcServerTestCancel$MH,"RpcServerTestCancel");
    }
    public static int RpcServerTestCancel ( Addressable BindingHandle) {
        var mh$ = RpcServerTestCancel$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcCancelThread$MH() {
        return RuntimeHelper.requireNonNull(constants$667.RpcCancelThread$MH,"RpcCancelThread");
    }
    public static int RpcCancelThread ( Addressable Thread) {
        var mh$ = RpcCancelThread$MH();
        try {
            return (int)mh$.invokeExact(Thread);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcCancelThreadEx$MH() {
        return RuntimeHelper.requireNonNull(constants$667.RpcCancelThreadEx$MH,"RpcCancelThreadEx");
    }
    public static int RpcCancelThreadEx ( Addressable Thread,  int Timeout) {
        var mh$ = RpcCancelThreadEx$MH();
        try {
            return (int)mh$.invokeExact(Thread, Timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCreate$MH() {
        return RuntimeHelper.requireNonNull(constants$667.UuidCreate$MH,"UuidCreate");
    }
    public static int UuidCreate ( Addressable Uuid) {
        var mh$ = UuidCreate$MH();
        try {
            return (int)mh$.invokeExact(Uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCreateSequential$MH() {
        return RuntimeHelper.requireNonNull(constants$667.UuidCreateSequential$MH,"UuidCreateSequential");
    }
    public static int UuidCreateSequential ( Addressable Uuid) {
        var mh$ = UuidCreateSequential$MH();
        try {
            return (int)mh$.invokeExact(Uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidToStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$668.UuidToStringA$MH,"UuidToStringA");
    }
    public static int UuidToStringA ( Addressable Uuid,  Addressable StringUuid) {
        var mh$ = UuidToStringA$MH();
        try {
            return (int)mh$.invokeExact(Uuid, StringUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidFromStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$668.UuidFromStringA$MH,"UuidFromStringA");
    }
    public static int UuidFromStringA ( Addressable StringUuid,  Addressable Uuid) {
        var mh$ = UuidFromStringA$MH();
        try {
            return (int)mh$.invokeExact(StringUuid, Uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidToStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$668.UuidToStringW$MH,"UuidToStringW");
    }
    public static int UuidToStringW ( Addressable Uuid,  Addressable StringUuid) {
        var mh$ = UuidToStringW$MH();
        try {
            return (int)mh$.invokeExact(Uuid, StringUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidFromStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$668.UuidFromStringW$MH,"UuidFromStringW");
    }
    public static int UuidFromStringW ( Addressable StringUuid,  Addressable Uuid) {
        var mh$ = UuidFromStringW$MH();
        try {
            return (int)mh$.invokeExact(StringUuid, Uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCompare$MH() {
        return RuntimeHelper.requireNonNull(constants$668.UuidCompare$MH,"UuidCompare");
    }
    public static int UuidCompare ( Addressable Uuid1,  Addressable Uuid2,  Addressable Status) {
        var mh$ = UuidCompare$MH();
        try {
            return (int)mh$.invokeExact(Uuid1, Uuid2, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCreateNil$MH() {
        return RuntimeHelper.requireNonNull(constants$668.UuidCreateNil$MH,"UuidCreateNil");
    }
    public static int UuidCreateNil ( Addressable NilUuid) {
        var mh$ = UuidCreateNil$MH();
        try {
            return (int)mh$.invokeExact(NilUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidEqual$MH() {
        return RuntimeHelper.requireNonNull(constants$669.UuidEqual$MH,"UuidEqual");
    }
    public static int UuidEqual ( Addressable Uuid1,  Addressable Uuid2,  Addressable Status) {
        var mh$ = UuidEqual$MH();
        try {
            return (int)mh$.invokeExact(Uuid1, Uuid2, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidHash$MH() {
        return RuntimeHelper.requireNonNull(constants$669.UuidHash$MH,"UuidHash");
    }
    public static short UuidHash ( Addressable Uuid,  Addressable Status) {
        var mh$ = UuidHash$MH();
        try {
            return (short)mh$.invokeExact(Uuid, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidIsNil$MH() {
        return RuntimeHelper.requireNonNull(constants$669.UuidIsNil$MH,"UuidIsNil");
    }
    public static int UuidIsNil ( Addressable Uuid,  Addressable Status) {
        var mh$ = UuidIsNil$MH();
        try {
            return (int)mh$.invokeExact(Uuid, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterNoReplaceA$MH() {
        return RuntimeHelper.requireNonNull(constants$669.RpcEpRegisterNoReplaceA$MH,"RpcEpRegisterNoReplaceA");
    }
    public static int RpcEpRegisterNoReplaceA ( Addressable IfSpec,  Addressable BindingVector,  Addressable UuidVector,  Addressable Annotation) {
        var mh$ = RpcEpRegisterNoReplaceA$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, BindingVector, UuidVector, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterNoReplaceW$MH() {
        return RuntimeHelper.requireNonNull(constants$669.RpcEpRegisterNoReplaceW$MH,"RpcEpRegisterNoReplaceW");
    }
    public static int RpcEpRegisterNoReplaceW ( Addressable IfSpec,  Addressable BindingVector,  Addressable UuidVector,  Addressable Annotation) {
        var mh$ = RpcEpRegisterNoReplaceW$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, BindingVector, UuidVector, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterA$MH() {
        return RuntimeHelper.requireNonNull(constants$669.RpcEpRegisterA$MH,"RpcEpRegisterA");
    }
    public static int RpcEpRegisterA ( Addressable IfSpec,  Addressable BindingVector,  Addressable UuidVector,  Addressable Annotation) {
        var mh$ = RpcEpRegisterA$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, BindingVector, UuidVector, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterW$MH() {
        return RuntimeHelper.requireNonNull(constants$670.RpcEpRegisterW$MH,"RpcEpRegisterW");
    }
    public static int RpcEpRegisterW ( Addressable IfSpec,  Addressable BindingVector,  Addressable UuidVector,  Addressable Annotation) {
        var mh$ = RpcEpRegisterW$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, BindingVector, UuidVector, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpUnregister$MH() {
        return RuntimeHelper.requireNonNull(constants$670.RpcEpUnregister$MH,"RpcEpUnregister");
    }
    public static int RpcEpUnregister ( Addressable IfSpec,  Addressable BindingVector,  Addressable UuidVector) {
        var mh$ = RpcEpUnregister$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, BindingVector, UuidVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DceErrorInqTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$670.DceErrorInqTextA$MH,"DceErrorInqTextA");
    }
    public static int DceErrorInqTextA ( int RpcStatus,  Addressable ErrorText) {
        var mh$ = DceErrorInqTextA$MH();
        try {
            return (int)mh$.invokeExact(RpcStatus, ErrorText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DceErrorInqTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$670.DceErrorInqTextW$MH,"DceErrorInqTextW");
    }
    public static int DceErrorInqTextW ( int RpcStatus,  Addressable ErrorText) {
        var mh$ = DceErrorInqTextW$MH();
        try {
            return (int)mh$.invokeExact(RpcStatus, ErrorText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress RPC_EP_INQ_HANDLE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcMgmtEpEltInqBegin$MH() {
        return RuntimeHelper.requireNonNull(constants$670.RpcMgmtEpEltInqBegin$MH,"RpcMgmtEpEltInqBegin");
    }
    public static int RpcMgmtEpEltInqBegin ( Addressable EpBinding,  int InquiryType,  Addressable IfId,  int VersOption,  Addressable ObjectUuid,  Addressable InquiryContext) {
        var mh$ = RpcMgmtEpEltInqBegin$MH();
        try {
            return (int)mh$.invokeExact(EpBinding, InquiryType, IfId, VersOption, ObjectUuid, InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpEltInqDone$MH() {
        return RuntimeHelper.requireNonNull(constants$670.RpcMgmtEpEltInqDone$MH,"RpcMgmtEpEltInqDone");
    }
    public static int RpcMgmtEpEltInqDone ( Addressable InquiryContext) {
        var mh$ = RpcMgmtEpEltInqDone$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpEltInqNextA$MH() {
        return RuntimeHelper.requireNonNull(constants$671.RpcMgmtEpEltInqNextA$MH,"RpcMgmtEpEltInqNextA");
    }
    public static int RpcMgmtEpEltInqNextA ( Addressable InquiryContext,  Addressable IfId,  Addressable Binding,  Addressable ObjectUuid,  Addressable Annotation) {
        var mh$ = RpcMgmtEpEltInqNextA$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext, IfId, Binding, ObjectUuid, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpEltInqNextW$MH() {
        return RuntimeHelper.requireNonNull(constants$671.RpcMgmtEpEltInqNextW$MH,"RpcMgmtEpEltInqNextW");
    }
    public static int RpcMgmtEpEltInqNextW ( Addressable InquiryContext,  Addressable IfId,  Addressable Binding,  Addressable ObjectUuid,  Addressable Annotation) {
        var mh$ = RpcMgmtEpEltInqNextW$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext, IfId, Binding, ObjectUuid, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpUnregister$MH() {
        return RuntimeHelper.requireNonNull(constants$671.RpcMgmtEpUnregister$MH,"RpcMgmtEpUnregister");
    }
    public static int RpcMgmtEpUnregister ( Addressable EpBinding,  Addressable IfId,  Addressable Binding,  Addressable ObjectUuid) {
        var mh$ = RpcMgmtEpUnregister$MH();
        try {
            return (int)mh$.invokeExact(EpBinding, IfId, Binding, ObjectUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetAuthorizationFn$MH() {
        return RuntimeHelper.requireNonNull(constants$671.RpcMgmtSetAuthorizationFn$MH,"RpcMgmtSetAuthorizationFn");
    }
    public static int RpcMgmtSetAuthorizationFn ( Addressable AuthorizationFn) {
        var mh$ = RpcMgmtSetAuthorizationFn$MH();
        try {
            return (int)mh$.invokeExact(AuthorizationFn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcExceptionFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$672.RpcExceptionFilter$MH,"RpcExceptionFilter");
    }
    public static int RpcExceptionFilter ( int ExceptionCode) {
        var mh$ = RpcExceptionFilter$MH();
        try {
            return (int)mh$.invokeExact(ExceptionCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress RPC_INTERFACE_GROUP = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_INTERFACE_GROUP = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_ENDPOINT_TEMPLATEW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_ENDPOINT_TEMPLATEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_INTERFACE_TEMPLATEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_INTERFACE_TEMPLATEW = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcServerInterfaceGroupCreateW$MH() {
        return RuntimeHelper.requireNonNull(constants$672.RpcServerInterfaceGroupCreateW$MH,"RpcServerInterfaceGroupCreateW");
    }
    public static int RpcServerInterfaceGroupCreateW ( Addressable Interfaces,  int NumIfs,  Addressable Endpoints,  int NumEndpoints,  int IdlePeriod,  Addressable IdleCallbackFn,  Addressable IdleCallbackContext,  Addressable IfGroup) {
        var mh$ = RpcServerInterfaceGroupCreateW$MH();
        try {
            return (int)mh$.invokeExact(Interfaces, NumIfs, Endpoints, NumEndpoints, IdlePeriod, IdleCallbackFn, IdleCallbackContext, IfGroup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInterfaceGroupCreateA$MH() {
        return RuntimeHelper.requireNonNull(constants$673.RpcServerInterfaceGroupCreateA$MH,"RpcServerInterfaceGroupCreateA");
    }
    public static int RpcServerInterfaceGroupCreateA ( Addressable Interfaces,  int NumIfs,  Addressable Endpoints,  int NumEndpoints,  int IdlePeriod,  Addressable IdleCallbackFn,  Addressable IdleCallbackContext,  Addressable IfGroup) {
        var mh$ = RpcServerInterfaceGroupCreateA$MH();
        try {
            return (int)mh$.invokeExact(Interfaces, NumIfs, Endpoints, NumEndpoints, IdlePeriod, IdleCallbackFn, IdleCallbackContext, IfGroup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInterfaceGroupClose$MH() {
        return RuntimeHelper.requireNonNull(constants$673.RpcServerInterfaceGroupClose$MH,"RpcServerInterfaceGroupClose");
    }
    public static int RpcServerInterfaceGroupClose ( Addressable IfGroup) {
        var mh$ = RpcServerInterfaceGroupClose$MH();
        try {
            return (int)mh$.invokeExact(IfGroup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInterfaceGroupActivate$MH() {
        return RuntimeHelper.requireNonNull(constants$673.RpcServerInterfaceGroupActivate$MH,"RpcServerInterfaceGroupActivate");
    }
    public static int RpcServerInterfaceGroupActivate ( Addressable IfGroup) {
        var mh$ = RpcServerInterfaceGroupActivate$MH();
        try {
            return (int)mh$.invokeExact(IfGroup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInterfaceGroupDeactivate$MH() {
        return RuntimeHelper.requireNonNull(constants$673.RpcServerInterfaceGroupDeactivate$MH,"RpcServerInterfaceGroupDeactivate");
    }
    public static int RpcServerInterfaceGroupDeactivate ( Addressable IfGroup,  int ForceDeactivation) {
        var mh$ = RpcServerInterfaceGroupDeactivate$MH();
        try {
            return (int)mh$.invokeExact(IfGroup, ForceDeactivation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInterfaceGroupInqBindings$MH() {
        return RuntimeHelper.requireNonNull(constants$674.RpcServerInterfaceGroupInqBindings$MH,"RpcServerInterfaceGroupInqBindings");
    }
    public static int RpcServerInterfaceGroupInqBindings ( Addressable IfGroup,  Addressable BindingVector) {
        var mh$ = RpcServerInterfaceGroupInqBindings$MH();
        try {
            return (int)mh$.invokeExact(IfGroup, BindingVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PRPC_SYNTAX_IDENTIFIER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_MESSAGE = Constants$root.C_POINTER$LAYOUT;
    public static int PROTOCOL_NOT_LOADED() {
        return (int)1L;
    }
    public static int PROTOCOL_LOADED() {
        return (int)2L;
    }
    public static int PROTOCOL_ADDRESS_CHANGE() {
        return (int)3L;
    }
    public static OfAddress PRPC_DISPATCH_TABLE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_PROTSEQ_ENDPOINT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_SERVER_INTERFACE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_CLIENT_INTERFACE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle I_RpcNegotiateTransferSyntax$MH() {
        return RuntimeHelper.requireNonNull(constants$675.I_RpcNegotiateTransferSyntax$MH,"I_RpcNegotiateTransferSyntax");
    }
    public static int I_RpcNegotiateTransferSyntax ( Addressable Message) {
        var mh$ = I_RpcNegotiateTransferSyntax$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$675.I_RpcGetBuffer$MH,"I_RpcGetBuffer");
    }
    public static int I_RpcGetBuffer ( Addressable Message) {
        var mh$ = I_RpcGetBuffer$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetBufferWithObject$MH() {
        return RuntimeHelper.requireNonNull(constants$675.I_RpcGetBufferWithObject$MH,"I_RpcGetBufferWithObject");
    }
    public static int I_RpcGetBufferWithObject ( Addressable Message,  Addressable ObjectUuid) {
        var mh$ = I_RpcGetBufferWithObject$MH();
        try {
            return (int)mh$.invokeExact(Message, ObjectUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSendReceive$MH() {
        return RuntimeHelper.requireNonNull(constants$675.I_RpcSendReceive$MH,"I_RpcSendReceive");
    }
    public static int I_RpcSendReceive ( Addressable Message) {
        var mh$ = I_RpcSendReceive$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFreeBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$675.I_RpcFreeBuffer$MH,"I_RpcFreeBuffer");
    }
    public static int I_RpcFreeBuffer ( Addressable Message) {
        var mh$ = I_RpcFreeBuffer$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSend$MH() {
        return RuntimeHelper.requireNonNull(constants$676.I_RpcSend$MH,"I_RpcSend");
    }
    public static int I_RpcSend ( Addressable Message) {
        var mh$ = I_RpcSend$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcReceive$MH() {
        return RuntimeHelper.requireNonNull(constants$676.I_RpcReceive$MH,"I_RpcReceive");
    }
    public static int I_RpcReceive ( Addressable Message,  int Size) {
        var mh$ = I_RpcReceive$MH();
        try {
            return (int)mh$.invokeExact(Message, Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFreePipeBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$676.I_RpcFreePipeBuffer$MH,"I_RpcFreePipeBuffer");
    }
    public static int I_RpcFreePipeBuffer ( Addressable Message) {
        var mh$ = I_RpcFreePipeBuffer$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcReallocPipeBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$676.I_RpcReallocPipeBuffer$MH,"I_RpcReallocPipeBuffer");
    }
    public static int I_RpcReallocPipeBuffer ( Addressable Message,  int NewSize) {
        var mh$ = I_RpcReallocPipeBuffer$MH();
        try {
            return (int)mh$.invokeExact(Message, NewSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress I_RPC_MUTEX = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle I_RpcRequestMutex$MH() {
        return RuntimeHelper.requireNonNull(constants$676.I_RpcRequestMutex$MH,"I_RpcRequestMutex");
    }
    public static void I_RpcRequestMutex ( Addressable Mutex) {
        var mh$ = I_RpcRequestMutex$MH();
        try {
            mh$.invokeExact(Mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcClearMutex$MH() {
        return RuntimeHelper.requireNonNull(constants$676.I_RpcClearMutex$MH,"I_RpcClearMutex");
    }
    public static void I_RpcClearMutex ( Addressable Mutex) {
        var mh$ = I_RpcClearMutex$MH();
        try {
            mh$.invokeExact(Mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcDeleteMutex$MH() {
        return RuntimeHelper.requireNonNull(constants$677.I_RpcDeleteMutex$MH,"I_RpcDeleteMutex");
    }
    public static void I_RpcDeleteMutex ( Addressable Mutex) {
        var mh$ = I_RpcDeleteMutex$MH();
        try {
            mh$.invokeExact(Mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$677.I_RpcAllocate$MH,"I_RpcAllocate");
    }
    public static MemoryAddress I_RpcAllocate ( int Size) {
        var mh$ = I_RpcAllocate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFree$MH() {
        return RuntimeHelper.requireNonNull(constants$677.I_RpcFree$MH,"I_RpcFree");
    }
    public static void I_RpcFree ( Addressable Object) {
        var mh$ = I_RpcFree$MH();
        try {
            mh$.invokeExact(Object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFreeSystemHandleCollection$MH() {
        return RuntimeHelper.requireNonNull(constants$677.I_RpcFreeSystemHandleCollection$MH,"I_RpcFreeSystemHandleCollection");
    }
    public static int I_RpcFreeSystemHandleCollection ( Addressable CallObj,  int FreeFlags) {
        var mh$ = I_RpcFreeSystemHandleCollection$MH();
        try {
            return (int)mh$.invokeExact(CallObj, FreeFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSetSystemHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$677.I_RpcSetSystemHandle$MH,"I_RpcSetSystemHandle");
    }
    public static int I_RpcSetSystemHandle ( Addressable Handle,  byte Type,  int AccessMask,  Addressable CallObj,  Addressable HandleIndex) {
        var mh$ = I_RpcSetSystemHandle$MH();
        try {
            return (int)mh$.invokeExact(Handle, Type, AccessMask, CallObj, HandleIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetSystemHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$677.I_RpcGetSystemHandle$MH,"I_RpcGetSystemHandle");
    }
    public static int I_RpcGetSystemHandle ( Addressable pMemory,  byte Type,  int AccessMask,  int HandleIndex,  Addressable CallObj) {
        var mh$ = I_RpcGetSystemHandle$MH();
        try {
            return (int)mh$.invokeExact(pMemory, Type, AccessMask, HandleIndex, CallObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFreeSystemHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$678.I_RpcFreeSystemHandle$MH,"I_RpcFreeSystemHandle");
    }
    public static void I_RpcFreeSystemHandle ( byte Type,  Addressable Handle) {
        var mh$ = I_RpcFreeSystemHandle$MH();
        try {
            mh$.invokeExact(Type, Handle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcPauseExecution$MH() {
        return RuntimeHelper.requireNonNull(constants$678.I_RpcPauseExecution$MH,"I_RpcPauseExecution");
    }
    public static void I_RpcPauseExecution ( int Milliseconds) {
        var mh$ = I_RpcPauseExecution$MH();
        try {
            mh$.invokeExact(Milliseconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetExtendedError$MH() {
        return RuntimeHelper.requireNonNull(constants$678.I_RpcGetExtendedError$MH,"I_RpcGetExtendedError");
    }
    public static int I_RpcGetExtendedError () {
        var mh$ = I_RpcGetExtendedError$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int MarshalDirectionMarshal() {
        return (int)0L;
    }
    public static int MarshalDirectionUnmarshal() {
        return (int)1L;
    }
    public static MethodHandle I_RpcSystemHandleTypeSpecificWork$MH() {
        return RuntimeHelper.requireNonNull(constants$678.I_RpcSystemHandleTypeSpecificWork$MH,"I_RpcSystemHandleTypeSpecificWork");
    }
    public static int I_RpcSystemHandleTypeSpecificWork ( Addressable Handle,  byte ActualType,  byte IdlType,  int MarshalDirection) {
        var mh$ = I_RpcSystemHandleTypeSpecificWork$MH();
        try {
            return (int)mh$.invokeExact(Handle, ActualType, IdlType, MarshalDirection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcMonitorAssociation$MH() {
        return RuntimeHelper.requireNonNull(constants$679.I_RpcMonitorAssociation$MH,"I_RpcMonitorAssociation");
    }
    public static int I_RpcMonitorAssociation ( Addressable Handle,  Addressable RundownRoutine,  Addressable Context) {
        var mh$ = I_RpcMonitorAssociation$MH();
        try {
            return (int)mh$.invokeExact(Handle, RundownRoutine, Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcStopMonitorAssociation$MH() {
        return RuntimeHelper.requireNonNull(constants$679.I_RpcStopMonitorAssociation$MH,"I_RpcStopMonitorAssociation");
    }
    public static int I_RpcStopMonitorAssociation ( Addressable Handle) {
        var mh$ = I_RpcStopMonitorAssociation$MH();
        try {
            return (int)mh$.invokeExact(Handle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetCurrentCallHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$679.I_RpcGetCurrentCallHandle$MH,"I_RpcGetCurrentCallHandle");
    }
    public static MemoryAddress I_RpcGetCurrentCallHandle () {
        var mh$ = I_RpcGetCurrentCallHandle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetAssociationContext$MH() {
        return RuntimeHelper.requireNonNull(constants$679.I_RpcGetAssociationContext$MH,"I_RpcGetAssociationContext");
    }
    public static int I_RpcGetAssociationContext ( Addressable BindingHandle,  Addressable AssociationContext) {
        var mh$ = I_RpcGetAssociationContext$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle, AssociationContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetServerContextList$MH() {
        return RuntimeHelper.requireNonNull(constants$679.I_RpcGetServerContextList$MH,"I_RpcGetServerContextList");
    }
    public static MemoryAddress I_RpcGetServerContextList ( Addressable BindingHandle) {
        var mh$ = I_RpcGetServerContextList$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSetServerContextList$MH() {
        return RuntimeHelper.requireNonNull(constants$679.I_RpcSetServerContextList$MH,"I_RpcSetServerContextList");
    }
    public static void I_RpcSetServerContextList ( Addressable BindingHandle,  Addressable ServerContextList) {
        var mh$ = I_RpcSetServerContextList$MH();
        try {
            mh$.invokeExact(BindingHandle, ServerContextList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsInterfaceExported$MH() {
        return RuntimeHelper.requireNonNull(constants$680.I_RpcNsInterfaceExported$MH,"I_RpcNsInterfaceExported");
    }
    public static int I_RpcNsInterfaceExported ( int EntryNameSyntax,  Addressable EntryName,  Addressable RpcInterfaceInformation) {
        var mh$ = I_RpcNsInterfaceExported$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, RpcInterfaceInformation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsInterfaceUnexported$MH() {
        return RuntimeHelper.requireNonNull(constants$680.I_RpcNsInterfaceUnexported$MH,"I_RpcNsInterfaceUnexported");
    }
    public static int I_RpcNsInterfaceUnexported ( int EntryNameSyntax,  Addressable EntryName,  Addressable RpcInterfaceInformation) {
        var mh$ = I_RpcNsInterfaceUnexported$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, RpcInterfaceInformation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingToStaticStringBindingW$MH() {
        return RuntimeHelper.requireNonNull(constants$680.I_RpcBindingToStaticStringBindingW$MH,"I_RpcBindingToStaticStringBindingW");
    }
    public static int I_RpcBindingToStaticStringBindingW ( Addressable Binding,  Addressable StringBinding) {
        var mh$ = I_RpcBindingToStaticStringBindingW$MH();
        try {
            return (int)mh$.invokeExact(Binding, StringBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqSecurityContext$MH() {
        return RuntimeHelper.requireNonNull(constants$680.I_RpcBindingInqSecurityContext$MH,"I_RpcBindingInqSecurityContext");
    }
    public static int I_RpcBindingInqSecurityContext ( Addressable Binding,  Addressable SecurityContextHandle) {
        var mh$ = I_RpcBindingInqSecurityContext$MH();
        try {
            return (int)mh$.invokeExact(Binding, SecurityContextHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PRPC_SEC_CONTEXT_KEY_INFO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle I_RpcBindingInqSecurityContextKeyInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$680.I_RpcBindingInqSecurityContextKeyInfo$MH,"I_RpcBindingInqSecurityContextKeyInfo");
    }
    public static int I_RpcBindingInqSecurityContextKeyInfo ( Addressable Binding,  Addressable KeyInfo) {
        var mh$ = I_RpcBindingInqSecurityContextKeyInfo$MH();
        try {
            return (int)mh$.invokeExact(Binding, KeyInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqWireIdForSnego$MH() {
        return RuntimeHelper.requireNonNull(constants$680.I_RpcBindingInqWireIdForSnego$MH,"I_RpcBindingInqWireIdForSnego");
    }
    public static int I_RpcBindingInqWireIdForSnego ( Addressable Binding,  Addressable WireId) {
        var mh$ = I_RpcBindingInqWireIdForSnego$MH();
        try {
            return (int)mh$.invokeExact(Binding, WireId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqMarshalledTargetInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$681.I_RpcBindingInqMarshalledTargetInfo$MH,"I_RpcBindingInqMarshalledTargetInfo");
    }
    public static int I_RpcBindingInqMarshalledTargetInfo ( Addressable Binding,  Addressable MarshalledTargetInfoSize,  Addressable MarshalledTargetInfo) {
        var mh$ = I_RpcBindingInqMarshalledTargetInfo$MH();
        try {
            return (int)mh$.invokeExact(Binding, MarshalledTargetInfoSize, MarshalledTargetInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqLocalClientPID$MH() {
        return RuntimeHelper.requireNonNull(constants$681.I_RpcBindingInqLocalClientPID$MH,"I_RpcBindingInqLocalClientPID");
    }
    public static int I_RpcBindingInqLocalClientPID ( Addressable Binding,  Addressable Pid) {
        var mh$ = I_RpcBindingInqLocalClientPID$MH();
        try {
            return (int)mh$.invokeExact(Binding, Pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingHandleToAsyncHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$681.I_RpcBindingHandleToAsyncHandle$MH,"I_RpcBindingHandleToAsyncHandle");
    }
    public static int I_RpcBindingHandleToAsyncHandle ( Addressable Binding,  Addressable AsyncHandle) {
        var mh$ = I_RpcBindingHandleToAsyncHandle$MH();
        try {
            return (int)mh$.invokeExact(Binding, AsyncHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsBindingSetEntryNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$681.I_RpcNsBindingSetEntryNameW$MH,"I_RpcNsBindingSetEntryNameW");
    }
    public static int I_RpcNsBindingSetEntryNameW ( Addressable Binding,  int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = I_RpcNsBindingSetEntryNameW$MH();
        try {
            return (int)mh$.invokeExact(Binding, EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsBindingSetEntryNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$681.I_RpcNsBindingSetEntryNameA$MH,"I_RpcNsBindingSetEntryNameA");
    }
    public static int I_RpcNsBindingSetEntryNameA ( Addressable Binding,  int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = I_RpcNsBindingSetEntryNameA$MH();
        try {
            return (int)mh$.invokeExact(Binding, EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseqEp2A$MH() {
        return RuntimeHelper.requireNonNull(constants$681.I_RpcServerUseProtseqEp2A$MH,"I_RpcServerUseProtseqEp2A");
    }
    public static int I_RpcServerUseProtseqEp2A ( Addressable NetworkAddress,  Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = I_RpcServerUseProtseqEp2A$MH();
        try {
            return (int)mh$.invokeExact(NetworkAddress, Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseqEp2W$MH() {
        return RuntimeHelper.requireNonNull(constants$682.I_RpcServerUseProtseqEp2W$MH,"I_RpcServerUseProtseqEp2W");
    }
    public static int I_RpcServerUseProtseqEp2W ( Addressable NetworkAddress,  Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = I_RpcServerUseProtseqEp2W$MH();
        try {
            return (int)mh$.invokeExact(NetworkAddress, Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseq2W$MH() {
        return RuntimeHelper.requireNonNull(constants$682.I_RpcServerUseProtseq2W$MH,"I_RpcServerUseProtseq2W");
    }
    public static int I_RpcServerUseProtseq2W ( Addressable NetworkAddress,  Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = I_RpcServerUseProtseq2W$MH();
        try {
            return (int)mh$.invokeExact(NetworkAddress, Protseq, MaxCalls, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseq2A$MH() {
        return RuntimeHelper.requireNonNull(constants$682.I_RpcServerUseProtseq2A$MH,"I_RpcServerUseProtseq2A");
    }
    public static int I_RpcServerUseProtseq2A ( Addressable NetworkAddress,  Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = I_RpcServerUseProtseq2A$MH();
        try {
            return (int)mh$.invokeExact(NetworkAddress, Protseq, MaxCalls, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerStartService$MH() {
        return RuntimeHelper.requireNonNull(constants$682.I_RpcServerStartService$MH,"I_RpcServerStartService");
    }
    public static int I_RpcServerStartService ( Addressable Protseq,  Addressable Endpoint,  Addressable IfSpec) {
        var mh$ = I_RpcServerStartService$MH();
        try {
            return (int)mh$.invokeExact(Protseq, Endpoint, IfSpec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqDynamicEndpointW$MH() {
        return RuntimeHelper.requireNonNull(constants$682.I_RpcBindingInqDynamicEndpointW$MH,"I_RpcBindingInqDynamicEndpointW");
    }
    public static int I_RpcBindingInqDynamicEndpointW ( Addressable Binding,  Addressable DynamicEndpoint) {
        var mh$ = I_RpcBindingInqDynamicEndpointW$MH();
        try {
            return (int)mh$.invokeExact(Binding, DynamicEndpoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqDynamicEndpointA$MH() {
        return RuntimeHelper.requireNonNull(constants$682.I_RpcBindingInqDynamicEndpointA$MH,"I_RpcBindingInqDynamicEndpointA");
    }
    public static int I_RpcBindingInqDynamicEndpointA ( Addressable Binding,  Addressable DynamicEndpoint) {
        var mh$ = I_RpcBindingInqDynamicEndpointA$MH();
        try {
            return (int)mh$.invokeExact(Binding, DynamicEndpoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerCheckClientRestriction$MH() {
        return RuntimeHelper.requireNonNull(constants$683.I_RpcServerCheckClientRestriction$MH,"I_RpcServerCheckClientRestriction");
    }
    public static int I_RpcServerCheckClientRestriction ( Addressable Context) {
        var mh$ = I_RpcServerCheckClientRestriction$MH();
        try {
            return (int)mh$.invokeExact(Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqTransportType$MH() {
        return RuntimeHelper.requireNonNull(constants$683.I_RpcBindingInqTransportType$MH,"I_RpcBindingInqTransportType");
    }
    public static int I_RpcBindingInqTransportType ( Addressable Binding,  Addressable Type) {
        var mh$ = I_RpcBindingInqTransportType$MH();
        try {
            return (int)mh$.invokeExact(Binding, Type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcIfInqTransferSyntaxes$MH() {
        return RuntimeHelper.requireNonNull(constants$683.I_RpcIfInqTransferSyntaxes$MH,"I_RpcIfInqTransferSyntaxes");
    }
    public static int I_RpcIfInqTransferSyntaxes ( Addressable RpcIfHandle,  Addressable TransferSyntaxes,  int TransferSyntaxSize,  Addressable TransferSyntaxCount) {
        var mh$ = I_RpcIfInqTransferSyntaxes$MH();
        try {
            return (int)mh$.invokeExact(RpcIfHandle, TransferSyntaxes, TransferSyntaxSize, TransferSyntaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_UuidCreate$MH() {
        return RuntimeHelper.requireNonNull(constants$683.I_UuidCreate$MH,"I_UuidCreate");
    }
    public static int I_UuidCreate ( Addressable Uuid) {
        var mh$ = I_UuidCreate$MH();
        try {
            return (int)mh$.invokeExact(Uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcUninitializeNdrOle$MH() {
        return RuntimeHelper.requireNonNull(constants$683.I_RpcUninitializeNdrOle$MH,"I_RpcUninitializeNdrOle");
    }
    public static void I_RpcUninitializeNdrOle () {
        var mh$ = I_RpcUninitializeNdrOle$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$683.I_RpcBindingCopy$MH,"I_RpcBindingCopy");
    }
    public static int I_RpcBindingCopy ( Addressable SourceBinding,  Addressable DestinationBinding) {
        var mh$ = I_RpcBindingCopy$MH();
        try {
            return (int)mh$.invokeExact(SourceBinding, DestinationBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingIsClientLocal$MH() {
        return RuntimeHelper.requireNonNull(constants$684.I_RpcBindingIsClientLocal$MH,"I_RpcBindingIsClientLocal");
    }
    public static int I_RpcBindingIsClientLocal ( Addressable BindingHandle,  Addressable ClientLocalFlag) {
        var mh$ = I_RpcBindingIsClientLocal$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle, ClientLocalFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqConnId$MH() {
        return RuntimeHelper.requireNonNull(constants$684.I_RpcBindingInqConnId$MH,"I_RpcBindingInqConnId");
    }
    public static int I_RpcBindingInqConnId ( Addressable Binding,  Addressable ConnId,  Addressable pfFirstCall) {
        var mh$ = I_RpcBindingInqConnId$MH();
        try {
            return (int)mh$.invokeExact(Binding, ConnId, pfFirstCall);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingCreateNP$MH() {
        return RuntimeHelper.requireNonNull(constants$684.I_RpcBindingCreateNP$MH,"I_RpcBindingCreateNP");
    }
    public static int I_RpcBindingCreateNP ( Addressable ServerName,  Addressable ServiceName,  Addressable NetworkOptions,  Addressable Binding) {
        var mh$ = I_RpcBindingCreateNP$MH();
        try {
            return (int)mh$.invokeExact(ServerName, ServiceName, NetworkOptions, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSsDontSerializeContext$MH() {
        return RuntimeHelper.requireNonNull(constants$684.I_RpcSsDontSerializeContext$MH,"I_RpcSsDontSerializeContext");
    }
    public static void I_RpcSsDontSerializeContext () {
        var mh$ = I_RpcSsDontSerializeContext$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcLaunchDatagramReceiveThread$MH() {
        return RuntimeHelper.requireNonNull(constants$684.I_RpcLaunchDatagramReceiveThread$MH,"I_RpcLaunchDatagramReceiveThread");
    }
    public static int I_RpcLaunchDatagramReceiveThread ( Addressable pAddress) {
        var mh$ = I_RpcLaunchDatagramReceiveThread$MH();
        try {
            return (int)mh$.invokeExact(pAddress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerRegisterForwardFunction$MH() {
        return RuntimeHelper.requireNonNull(constants$685.I_RpcServerRegisterForwardFunction$MH,"I_RpcServerRegisterForwardFunction");
    }
    public static int I_RpcServerRegisterForwardFunction ( Addressable pForwardFunction) {
        var mh$ = I_RpcServerRegisterForwardFunction$MH();
        try {
            return (int)mh$.invokeExact(pForwardFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerInqAddressChangeFn$MH() {
        return RuntimeHelper.requireNonNull(constants$685.I_RpcServerInqAddressChangeFn$MH,"I_RpcServerInqAddressChangeFn");
    }
    public static MemoryAddress I_RpcServerInqAddressChangeFn () {
        var mh$ = I_RpcServerInqAddressChangeFn$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerSetAddressChangeFn$MH() {
        return RuntimeHelper.requireNonNull(constants$685.I_RpcServerSetAddressChangeFn$MH,"I_RpcServerSetAddressChangeFn");
    }
    public static int I_RpcServerSetAddressChangeFn ( Addressable pAddressChangeFn) {
        var mh$ = I_RpcServerSetAddressChangeFn$MH();
        try {
            return (int)mh$.invokeExact(pAddressChangeFn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerInqLocalConnAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$686.I_RpcServerInqLocalConnAddress$MH,"I_RpcServerInqLocalConnAddress");
    }
    public static int I_RpcServerInqLocalConnAddress ( Addressable Binding,  Addressable Buffer,  Addressable BufferSize,  Addressable AddressFormat) {
        var mh$ = I_RpcServerInqLocalConnAddress$MH();
        try {
            return (int)mh$.invokeExact(Binding, Buffer, BufferSize, AddressFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerInqRemoteConnAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$686.I_RpcServerInqRemoteConnAddress$MH,"I_RpcServerInqRemoteConnAddress");
    }
    public static int I_RpcServerInqRemoteConnAddress ( Addressable Binding,  Addressable Buffer,  Addressable BufferSize,  Addressable AddressFormat) {
        var mh$ = I_RpcServerInqRemoteConnAddress$MH();
        try {
            return (int)mh$.invokeExact(Binding, Buffer, BufferSize, AddressFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSessionStrictContextHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$686.I_RpcSessionStrictContextHandle$MH,"I_RpcSessionStrictContextHandle");
    }
    public static void I_RpcSessionStrictContextHandle () {
        var mh$ = I_RpcSessionStrictContextHandle$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcTurnOnEEInfoPropagation$MH() {
        return RuntimeHelper.requireNonNull(constants$686.I_RpcTurnOnEEInfoPropagation$MH,"I_RpcTurnOnEEInfoPropagation");
    }
    public static int I_RpcTurnOnEEInfoPropagation () {
        var mh$ = I_RpcTurnOnEEInfoPropagation$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcConnectionInqSockBuffSize$MH() {
        return RuntimeHelper.requireNonNull(constants$686.I_RpcConnectionInqSockBuffSize$MH,"I_RpcConnectionInqSockBuffSize");
    }
    public static int I_RpcConnectionInqSockBuffSize ( Addressable RecvBuffSize,  Addressable SendBuffSize) {
        var mh$ = I_RpcConnectionInqSockBuffSize$MH();
        try {
            return (int)mh$.invokeExact(RecvBuffSize, SendBuffSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcConnectionSetSockBuffSize$MH() {
        return RuntimeHelper.requireNonNull(constants$686.I_RpcConnectionSetSockBuffSize$MH,"I_RpcConnectionSetSockBuffSize");
    }
    public static int I_RpcConnectionSetSockBuffSize ( int RecvBuffSize,  int SendBuffSize) {
        var mh$ = I_RpcConnectionSetSockBuffSize$MH();
        try {
            return (int)mh$.invokeExact(RecvBuffSize, SendBuffSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerStartListening$MH() {
        return RuntimeHelper.requireNonNull(constants$687.I_RpcServerStartListening$MH,"I_RpcServerStartListening");
    }
    public static int I_RpcServerStartListening ( Addressable hWnd) {
        var mh$ = I_RpcServerStartListening$MH();
        try {
            return (int)mh$.invokeExact(hWnd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerStopListening$MH() {
        return RuntimeHelper.requireNonNull(constants$687.I_RpcServerStopListening$MH,"I_RpcServerStopListening");
    }
    public static int I_RpcServerStopListening () {
        var mh$ = I_RpcServerStopListening$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingSetAsync$MH() {
        return RuntimeHelper.requireNonNull(constants$688.I_RpcBindingSetAsync$MH,"I_RpcBindingSetAsync");
    }
    public static int I_RpcBindingSetAsync ( Addressable Binding,  Addressable BlockingFn,  int ServerTid) {
        var mh$ = I_RpcBindingSetAsync$MH();
        try {
            return (int)mh$.invokeExact(Binding, BlockingFn, ServerTid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSetThreadParams$MH() {
        return RuntimeHelper.requireNonNull(constants$688.I_RpcSetThreadParams$MH,"I_RpcSetThreadParams");
    }
    public static int I_RpcSetThreadParams ( int fClientFree,  Addressable Context,  Addressable hWndClient) {
        var mh$ = I_RpcSetThreadParams$MH();
        try {
            return (int)mh$.invokeExact(fClientFree, Context, hWndClient);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcWindowProc$MH() {
        return RuntimeHelper.requireNonNull(constants$688.I_RpcWindowProc$MH,"I_RpcWindowProc");
    }
    public static int I_RpcWindowProc ( Addressable hWnd,  int Message,  int wParam,  int lParam) {
        var mh$ = I_RpcWindowProc$MH();
        try {
            return (int)mh$.invokeExact(hWnd, Message, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUnregisterEndpointA$MH() {
        return RuntimeHelper.requireNonNull(constants$688.I_RpcServerUnregisterEndpointA$MH,"I_RpcServerUnregisterEndpointA");
    }
    public static int I_RpcServerUnregisterEndpointA ( Addressable Protseq,  Addressable Endpoint) {
        var mh$ = I_RpcServerUnregisterEndpointA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, Endpoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUnregisterEndpointW$MH() {
        return RuntimeHelper.requireNonNull(constants$689.I_RpcServerUnregisterEndpointW$MH,"I_RpcServerUnregisterEndpointW");
    }
    public static int I_RpcServerUnregisterEndpointW ( Addressable Protseq,  Addressable Endpoint) {
        var mh$ = I_RpcServerUnregisterEndpointW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, Endpoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerInqTransportType$MH() {
        return RuntimeHelper.requireNonNull(constants$689.I_RpcServerInqTransportType$MH,"I_RpcServerInqTransportType");
    }
    public static int I_RpcServerInqTransportType ( Addressable Type) {
        var mh$ = I_RpcServerInqTransportType$MH();
        try {
            return (int)mh$.invokeExact(Type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcMapWin32Status$MH() {
        return RuntimeHelper.requireNonNull(constants$689.I_RpcMapWin32Status$MH,"I_RpcMapWin32Status");
    }
    public static int I_RpcMapWin32Status ( int Status) {
        var mh$ = I_RpcMapWin32Status$MH();
        try {
            return (int)mh$.invokeExact(Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int RpcCurrentUniqueUser() {
        return (int)1L;
    }
    public static int RpcBackEndConnectionAttempts() {
        return (int)2L;
    }
    public static int RpcBackEndConnectionFailed() {
        return (int)3L;
    }
    public static int RpcRequestsPerSecond() {
        return (int)4L;
    }
    public static int RpcIncomingConnections() {
        return (int)5L;
    }
    public static int RpcIncomingBandwidth() {
        return (int)6L;
    }
    public static int RpcOutgoingBandwidth() {
        return (int)7L;
    }
    public static int RpcAttemptedLbsDecisions() {
        return (int)8L;
    }
    public static int RpcFailedLbsDecisions() {
        return (int)9L;
    }
    public static int RpcAttemptedLbsMessages() {
        return (int)10L;
    }
    public static int RpcFailedLbsMessages() {
        return (int)11L;
    }
    public static int RpcLastCounter() {
        return (int)12L;
    }
    public static MethodHandle I_RpcProxyNewConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$692.I_RpcProxyNewConnection$MH,"I_RpcProxyNewConnection");
    }
    public static int I_RpcProxyNewConnection ( int ConnectionType,  Addressable ServerAddress,  Addressable ServerPort,  Addressable MinConnTimeout,  Addressable ConnectionParameter,  Addressable CallOutState,  Addressable ProxyCallbackInterface) {
        var mh$ = I_RpcProxyNewConnection$MH();
        try {
            return (int)mh$.invokeExact(ConnectionType, ServerAddress, ServerPort, MinConnTimeout, ConnectionParameter, CallOutState, ProxyCallbackInterface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcReplyToClientWithStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$692.I_RpcReplyToClientWithStatus$MH,"I_RpcReplyToClientWithStatus");
    }
    public static int I_RpcReplyToClientWithStatus ( Addressable ConnectionParameter,  int RpcStatus) {
        var mh$ = I_RpcReplyToClientWithStatus$MH();
        try {
            return (int)mh$.invokeExact(ConnectionParameter, RpcStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcRecordCalloutFailure$MH() {
        return RuntimeHelper.requireNonNull(constants$692.I_RpcRecordCalloutFailure$MH,"I_RpcRecordCalloutFailure");
    }
    public static void I_RpcRecordCalloutFailure ( int RpcStatus,  Addressable CallOutState,  Addressable DllName) {
        var mh$ = I_RpcRecordCalloutFailure$MH();
        try {
            mh$.invokeExact(RpcStatus, CallOutState, DllName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcMgmtEnableDedicatedThreadPool$MH() {
        return RuntimeHelper.requireNonNull(constants$693.I_RpcMgmtEnableDedicatedThreadPool$MH,"I_RpcMgmtEnableDedicatedThreadPool");
    }
    public static int I_RpcMgmtEnableDedicatedThreadPool () {
        var mh$ = I_RpcMgmtEnableDedicatedThreadPool$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetDefaultSD$MH() {
        return RuntimeHelper.requireNonNull(constants$693.I_RpcGetDefaultSD$MH,"I_RpcGetDefaultSD");
    }
    public static int I_RpcGetDefaultSD ( Addressable ppSecurityDescriptor) {
        var mh$ = I_RpcGetDefaultSD$MH();
        try {
            return (int)mh$.invokeExact(ppSecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcOpenClientProcess$MH() {
        return RuntimeHelper.requireNonNull(constants$693.I_RpcOpenClientProcess$MH,"I_RpcOpenClientProcess");
    }
    public static int I_RpcOpenClientProcess ( Addressable Binding,  int DesiredAccess,  Addressable ClientProcess) {
        var mh$ = I_RpcOpenClientProcess$MH();
        try {
            return (int)mh$.invokeExact(Binding, DesiredAccess, ClientProcess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingIsServerLocal$MH() {
        return RuntimeHelper.requireNonNull(constants$693.I_RpcBindingIsServerLocal$MH,"I_RpcBindingIsServerLocal");
    }
    public static int I_RpcBindingIsServerLocal ( Addressable Binding,  Addressable ServerLocalFlag) {
        var mh$ = I_RpcBindingIsServerLocal$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerLocalFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingSetPrivateOption$MH() {
        return RuntimeHelper.requireNonNull(constants$693.I_RpcBindingSetPrivateOption$MH,"I_RpcBindingSetPrivateOption");
    }
    public static int I_RpcBindingSetPrivateOption ( Addressable hBinding,  int option,  long optionValue) {
        var mh$ = I_RpcBindingSetPrivateOption$MH();
        try {
            return (int)mh$.invokeExact(hBinding, option, optionValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerSubscribeForDisconnectNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$693.I_RpcServerSubscribeForDisconnectNotification$MH,"I_RpcServerSubscribeForDisconnectNotification");
    }
    public static int I_RpcServerSubscribeForDisconnectNotification ( Addressable Binding,  Addressable hEvent) {
        var mh$ = I_RpcServerSubscribeForDisconnectNotification$MH();
        try {
            return (int)mh$.invokeExact(Binding, hEvent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerGetAssociationID$MH() {
        return RuntimeHelper.requireNonNull(constants$694.I_RpcServerGetAssociationID$MH,"I_RpcServerGetAssociationID");
    }
    public static int I_RpcServerGetAssociationID ( Addressable Binding,  Addressable AssociationID) {
        var mh$ = I_RpcServerGetAssociationID$MH();
        try {
            return (int)mh$.invokeExact(Binding, AssociationID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerDisableExceptionFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$694.I_RpcServerDisableExceptionFilter$MH,"I_RpcServerDisableExceptionFilter");
    }
    public static int I_RpcServerDisableExceptionFilter () {
        var mh$ = I_RpcServerDisableExceptionFilter$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerSubscribeForDisconnectNotification2$MH() {
        return RuntimeHelper.requireNonNull(constants$694.I_RpcServerSubscribeForDisconnectNotification2$MH,"I_RpcServerSubscribeForDisconnectNotification2");
    }
    public static int I_RpcServerSubscribeForDisconnectNotification2 ( Addressable Binding,  Addressable hEvent,  Addressable SubscriptionId) {
        var mh$ = I_RpcServerSubscribeForDisconnectNotification2$MH();
        try {
            return (int)mh$.invokeExact(Binding, hEvent, SubscriptionId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUnsubscribeForDisconnectNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$694.I_RpcServerUnsubscribeForDisconnectNotification$MH,"I_RpcServerUnsubscribeForDisconnectNotification");
    }
    public static int I_RpcServerUnsubscribeForDisconnectNotification ( Addressable Binding,  MemorySegment SubscriptionId) {
        var mh$ = I_RpcServerUnsubscribeForDisconnectNotification$MH();
        try {
            return (int)mh$.invokeExact(Binding, SubscriptionId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress RPC_NS_HANDLE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcNsBindingExportA$MH() {
        return RuntimeHelper.requireNonNull(constants$694.RpcNsBindingExportA$MH,"RpcNsBindingExportA");
    }
    public static int RpcNsBindingExportA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable BindingVec,  Addressable ObjectUuidVec) {
        var mh$ = RpcNsBindingExportA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, BindingVec, ObjectUuidVec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingUnexportA$MH() {
        return RuntimeHelper.requireNonNull(constants$694.RpcNsBindingUnexportA$MH,"RpcNsBindingUnexportA");
    }
    public static int RpcNsBindingUnexportA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectUuidVec) {
        var mh$ = RpcNsBindingUnexportA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, ObjectUuidVec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingExportW$MH() {
        return RuntimeHelper.requireNonNull(constants$695.RpcNsBindingExportW$MH,"RpcNsBindingExportW");
    }
    public static int RpcNsBindingExportW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable BindingVec,  Addressable ObjectUuidVec) {
        var mh$ = RpcNsBindingExportW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, BindingVec, ObjectUuidVec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingUnexportW$MH() {
        return RuntimeHelper.requireNonNull(constants$695.RpcNsBindingUnexportW$MH,"RpcNsBindingUnexportW");
    }
    public static int RpcNsBindingUnexportW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectUuidVec) {
        var mh$ = RpcNsBindingUnexportW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, ObjectUuidVec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingExportPnPA$MH() {
        return RuntimeHelper.requireNonNull(constants$695.RpcNsBindingExportPnPA$MH,"RpcNsBindingExportPnPA");
    }
    public static int RpcNsBindingExportPnPA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectVector) {
        var mh$ = RpcNsBindingExportPnPA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, ObjectVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingUnexportPnPA$MH() {
        return RuntimeHelper.requireNonNull(constants$695.RpcNsBindingUnexportPnPA$MH,"RpcNsBindingUnexportPnPA");
    }
    public static int RpcNsBindingUnexportPnPA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectVector) {
        var mh$ = RpcNsBindingUnexportPnPA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, ObjectVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingExportPnPW$MH() {
        return RuntimeHelper.requireNonNull(constants$695.RpcNsBindingExportPnPW$MH,"RpcNsBindingExportPnPW");
    }
    public static int RpcNsBindingExportPnPW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectVector) {
        var mh$ = RpcNsBindingExportPnPW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, ObjectVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingUnexportPnPW$MH() {
        return RuntimeHelper.requireNonNull(constants$695.RpcNsBindingUnexportPnPW$MH,"RpcNsBindingUnexportPnPW");
    }
    public static int RpcNsBindingUnexportPnPW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectVector) {
        var mh$ = RpcNsBindingUnexportPnPW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, ObjectVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingLookupBeginA$MH() {
        return RuntimeHelper.requireNonNull(constants$696.RpcNsBindingLookupBeginA$MH,"RpcNsBindingLookupBeginA");
    }
    public static int RpcNsBindingLookupBeginA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjUuid,  int BindingMaxCount,  Addressable LookupContext) {
        var mh$ = RpcNsBindingLookupBeginA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, ObjUuid, BindingMaxCount, LookupContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingLookupBeginW$MH() {
        return RuntimeHelper.requireNonNull(constants$696.RpcNsBindingLookupBeginW$MH,"RpcNsBindingLookupBeginW");
    }
    public static int RpcNsBindingLookupBeginW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjUuid,  int BindingMaxCount,  Addressable LookupContext) {
        var mh$ = RpcNsBindingLookupBeginW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, ObjUuid, BindingMaxCount, LookupContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingLookupNext$MH() {
        return RuntimeHelper.requireNonNull(constants$696.RpcNsBindingLookupNext$MH,"RpcNsBindingLookupNext");
    }
    public static int RpcNsBindingLookupNext ( Addressable LookupContext,  Addressable BindingVec) {
        var mh$ = RpcNsBindingLookupNext$MH();
        try {
            return (int)mh$.invokeExact(LookupContext, BindingVec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingLookupDone$MH() {
        return RuntimeHelper.requireNonNull(constants$696.RpcNsBindingLookupDone$MH,"RpcNsBindingLookupDone");
    }
    public static int RpcNsBindingLookupDone ( Addressable LookupContext) {
        var mh$ = RpcNsBindingLookupDone$MH();
        try {
            return (int)mh$.invokeExact(LookupContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupDeleteA$MH() {
        return RuntimeHelper.requireNonNull(constants$696.RpcNsGroupDeleteA$MH,"RpcNsGroupDeleteA");
    }
    public static int RpcNsGroupDeleteA ( int GroupNameSyntax,  Addressable GroupName) {
        var mh$ = RpcNsGroupDeleteA$MH();
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrAddA$MH() {
        return RuntimeHelper.requireNonNull(constants$696.RpcNsGroupMbrAddA$MH,"RpcNsGroupMbrAddA");
    }
    public static int RpcNsGroupMbrAddA ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RpcNsGroupMbrAddA$MH();
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName, MemberNameSyntax, MemberName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrRemoveA$MH() {
        return RuntimeHelper.requireNonNull(constants$697.RpcNsGroupMbrRemoveA$MH,"RpcNsGroupMbrRemoveA");
    }
    public static int RpcNsGroupMbrRemoveA ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RpcNsGroupMbrRemoveA$MH();
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName, MemberNameSyntax, MemberName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrInqBeginA$MH() {
        return RuntimeHelper.requireNonNull(constants$697.RpcNsGroupMbrInqBeginA$MH,"RpcNsGroupMbrInqBeginA");
    }
    public static int RpcNsGroupMbrInqBeginA ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable InquiryContext) {
        var mh$ = RpcNsGroupMbrInqBeginA$MH();
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName, MemberNameSyntax, InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrInqNextA$MH() {
        return RuntimeHelper.requireNonNull(constants$697.RpcNsGroupMbrInqNextA$MH,"RpcNsGroupMbrInqNextA");
    }
    public static int RpcNsGroupMbrInqNextA ( Addressable InquiryContext,  Addressable MemberName) {
        var mh$ = RpcNsGroupMbrInqNextA$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext, MemberName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupDeleteW$MH() {
        return RuntimeHelper.requireNonNull(constants$697.RpcNsGroupDeleteW$MH,"RpcNsGroupDeleteW");
    }
    public static int RpcNsGroupDeleteW ( int GroupNameSyntax,  Addressable GroupName) {
        var mh$ = RpcNsGroupDeleteW$MH();
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrAddW$MH() {
        return RuntimeHelper.requireNonNull(constants$697.RpcNsGroupMbrAddW$MH,"RpcNsGroupMbrAddW");
    }
    public static int RpcNsGroupMbrAddW ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RpcNsGroupMbrAddW$MH();
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName, MemberNameSyntax, MemberName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrRemoveW$MH() {
        return RuntimeHelper.requireNonNull(constants$697.RpcNsGroupMbrRemoveW$MH,"RpcNsGroupMbrRemoveW");
    }
    public static int RpcNsGroupMbrRemoveW ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RpcNsGroupMbrRemoveW$MH();
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName, MemberNameSyntax, MemberName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrInqBeginW$MH() {
        return RuntimeHelper.requireNonNull(constants$698.RpcNsGroupMbrInqBeginW$MH,"RpcNsGroupMbrInqBeginW");
    }
    public static int RpcNsGroupMbrInqBeginW ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable InquiryContext) {
        var mh$ = RpcNsGroupMbrInqBeginW$MH();
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName, MemberNameSyntax, InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrInqNextW$MH() {
        return RuntimeHelper.requireNonNull(constants$698.RpcNsGroupMbrInqNextW$MH,"RpcNsGroupMbrInqNextW");
    }
    public static int RpcNsGroupMbrInqNextW ( Addressable InquiryContext,  Addressable MemberName) {
        var mh$ = RpcNsGroupMbrInqNextW$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext, MemberName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrInqDone$MH() {
        return RuntimeHelper.requireNonNull(constants$698.RpcNsGroupMbrInqDone$MH,"RpcNsGroupMbrInqDone");
    }
    public static int RpcNsGroupMbrInqDone ( Addressable InquiryContext) {
        var mh$ = RpcNsGroupMbrInqDone$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileDeleteA$MH() {
        return RuntimeHelper.requireNonNull(constants$698.RpcNsProfileDeleteA$MH,"RpcNsProfileDeleteA");
    }
    public static int RpcNsProfileDeleteA ( int ProfileNameSyntax,  Addressable ProfileName) {
        var mh$ = RpcNsProfileDeleteA$MH();
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltAddA$MH() {
        return RuntimeHelper.requireNonNull(constants$698.RpcNsProfileEltAddA$MH,"RpcNsProfileEltAddA");
    }
    public static int RpcNsProfileEltAddA ( int ProfileNameSyntax,  Addressable ProfileName,  Addressable IfId,  int MemberNameSyntax,  Addressable MemberName,  int Priority,  Addressable Annotation) {
        var mh$ = RpcNsProfileEltAddA$MH();
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName, IfId, MemberNameSyntax, MemberName, Priority, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltRemoveA$MH() {
        return RuntimeHelper.requireNonNull(constants$698.RpcNsProfileEltRemoveA$MH,"RpcNsProfileEltRemoveA");
    }
    public static int RpcNsProfileEltRemoveA ( int ProfileNameSyntax,  Addressable ProfileName,  Addressable IfId,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RpcNsProfileEltRemoveA$MH();
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName, IfId, MemberNameSyntax, MemberName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltInqBeginA$MH() {
        return RuntimeHelper.requireNonNull(constants$699.RpcNsProfileEltInqBeginA$MH,"RpcNsProfileEltInqBeginA");
    }
    public static int RpcNsProfileEltInqBeginA ( int ProfileNameSyntax,  Addressable ProfileName,  int InquiryType,  Addressable IfId,  int VersOption,  int MemberNameSyntax,  Addressable MemberName,  Addressable InquiryContext) {
        var mh$ = RpcNsProfileEltInqBeginA$MH();
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName, InquiryType, IfId, VersOption, MemberNameSyntax, MemberName, InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltInqNextA$MH() {
        return RuntimeHelper.requireNonNull(constants$699.RpcNsProfileEltInqNextA$MH,"RpcNsProfileEltInqNextA");
    }
    public static int RpcNsProfileEltInqNextA ( Addressable InquiryContext,  Addressable IfId,  Addressable MemberName,  Addressable Priority,  Addressable Annotation) {
        var mh$ = RpcNsProfileEltInqNextA$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext, IfId, MemberName, Priority, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileDeleteW$MH() {
        return RuntimeHelper.requireNonNull(constants$699.RpcNsProfileDeleteW$MH,"RpcNsProfileDeleteW");
    }
    public static int RpcNsProfileDeleteW ( int ProfileNameSyntax,  Addressable ProfileName) {
        var mh$ = RpcNsProfileDeleteW$MH();
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltAddW$MH() {
        return RuntimeHelper.requireNonNull(constants$699.RpcNsProfileEltAddW$MH,"RpcNsProfileEltAddW");
    }
    public static int RpcNsProfileEltAddW ( int ProfileNameSyntax,  Addressable ProfileName,  Addressable IfId,  int MemberNameSyntax,  Addressable MemberName,  int Priority,  Addressable Annotation) {
        var mh$ = RpcNsProfileEltAddW$MH();
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName, IfId, MemberNameSyntax, MemberName, Priority, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltRemoveW$MH() {
        return RuntimeHelper.requireNonNull(constants$699.RpcNsProfileEltRemoveW$MH,"RpcNsProfileEltRemoveW");
    }
    public static int RpcNsProfileEltRemoveW ( int ProfileNameSyntax,  Addressable ProfileName,  Addressable IfId,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RpcNsProfileEltRemoveW$MH();
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName, IfId, MemberNameSyntax, MemberName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltInqBeginW$MH() {
        return RuntimeHelper.requireNonNull(constants$699.RpcNsProfileEltInqBeginW$MH,"RpcNsProfileEltInqBeginW");
    }
    public static int RpcNsProfileEltInqBeginW ( int ProfileNameSyntax,  Addressable ProfileName,  int InquiryType,  Addressable IfId,  int VersOption,  int MemberNameSyntax,  Addressable MemberName,  Addressable InquiryContext) {
        var mh$ = RpcNsProfileEltInqBeginW$MH();
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName, InquiryType, IfId, VersOption, MemberNameSyntax, MemberName, InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltInqNextW$MH() {
        return RuntimeHelper.requireNonNull(constants$700.RpcNsProfileEltInqNextW$MH,"RpcNsProfileEltInqNextW");
    }
    public static int RpcNsProfileEltInqNextW ( Addressable InquiryContext,  Addressable IfId,  Addressable MemberName,  Addressable Priority,  Addressable Annotation) {
        var mh$ = RpcNsProfileEltInqNextW$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext, IfId, MemberName, Priority, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltInqDone$MH() {
        return RuntimeHelper.requireNonNull(constants$700.RpcNsProfileEltInqDone$MH,"RpcNsProfileEltInqDone");
    }
    public static int RpcNsProfileEltInqDone ( Addressable InquiryContext) {
        var mh$ = RpcNsProfileEltInqDone$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryObjectInqBeginA$MH() {
        return RuntimeHelper.requireNonNull(constants$700.RpcNsEntryObjectInqBeginA$MH,"RpcNsEntryObjectInqBeginA");
    }
    public static int RpcNsEntryObjectInqBeginA ( int EntryNameSyntax,  Addressable EntryName,  Addressable InquiryContext) {
        var mh$ = RpcNsEntryObjectInqBeginA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryObjectInqBeginW$MH() {
        return RuntimeHelper.requireNonNull(constants$700.RpcNsEntryObjectInqBeginW$MH,"RpcNsEntryObjectInqBeginW");
    }
    public static int RpcNsEntryObjectInqBeginW ( int EntryNameSyntax,  Addressable EntryName,  Addressable InquiryContext) {
        var mh$ = RpcNsEntryObjectInqBeginW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryObjectInqNext$MH() {
        return RuntimeHelper.requireNonNull(constants$700.RpcNsEntryObjectInqNext$MH,"RpcNsEntryObjectInqNext");
    }
    public static int RpcNsEntryObjectInqNext ( Addressable InquiryContext,  Addressable ObjUuid) {
        var mh$ = RpcNsEntryObjectInqNext$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext, ObjUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryObjectInqDone$MH() {
        return RuntimeHelper.requireNonNull(constants$700.RpcNsEntryObjectInqDone$MH,"RpcNsEntryObjectInqDone");
    }
    public static int RpcNsEntryObjectInqDone ( Addressable InquiryContext) {
        var mh$ = RpcNsEntryObjectInqDone$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryExpandNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$701.RpcNsEntryExpandNameA$MH,"RpcNsEntryExpandNameA");
    }
    public static int RpcNsEntryExpandNameA ( int EntryNameSyntax,  Addressable EntryName,  Addressable ExpandedName) {
        var mh$ = RpcNsEntryExpandNameA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, ExpandedName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtBindingUnexportA$MH() {
        return RuntimeHelper.requireNonNull(constants$701.RpcNsMgmtBindingUnexportA$MH,"RpcNsMgmtBindingUnexportA");
    }
    public static int RpcNsMgmtBindingUnexportA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfId,  int VersOption,  Addressable ObjectUuidVec) {
        var mh$ = RpcNsMgmtBindingUnexportA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfId, VersOption, ObjectUuidVec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryCreateA$MH() {
        return RuntimeHelper.requireNonNull(constants$701.RpcNsMgmtEntryCreateA$MH,"RpcNsMgmtEntryCreateA");
    }
    public static int RpcNsMgmtEntryCreateA ( int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RpcNsMgmtEntryCreateA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryDeleteA$MH() {
        return RuntimeHelper.requireNonNull(constants$701.RpcNsMgmtEntryDeleteA$MH,"RpcNsMgmtEntryDeleteA");
    }
    public static int RpcNsMgmtEntryDeleteA ( int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RpcNsMgmtEntryDeleteA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryInqIfIdsA$MH() {
        return RuntimeHelper.requireNonNull(constants$701.RpcNsMgmtEntryInqIfIdsA$MH,"RpcNsMgmtEntryInqIfIdsA");
    }
    public static int RpcNsMgmtEntryInqIfIdsA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfIdVec) {
        var mh$ = RpcNsMgmtEntryInqIfIdsA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfIdVec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtHandleSetExpAge$MH() {
        return RuntimeHelper.requireNonNull(constants$701.RpcNsMgmtHandleSetExpAge$MH,"RpcNsMgmtHandleSetExpAge");
    }
    public static int RpcNsMgmtHandleSetExpAge ( Addressable NsHandle,  int ExpirationAge) {
        var mh$ = RpcNsMgmtHandleSetExpAge$MH();
        try {
            return (int)mh$.invokeExact(NsHandle, ExpirationAge);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtInqExpAge$MH() {
        return RuntimeHelper.requireNonNull(constants$702.RpcNsMgmtInqExpAge$MH,"RpcNsMgmtInqExpAge");
    }
    public static int RpcNsMgmtInqExpAge ( Addressable ExpirationAge) {
        var mh$ = RpcNsMgmtInqExpAge$MH();
        try {
            return (int)mh$.invokeExact(ExpirationAge);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtSetExpAge$MH() {
        return RuntimeHelper.requireNonNull(constants$702.RpcNsMgmtSetExpAge$MH,"RpcNsMgmtSetExpAge");
    }
    public static int RpcNsMgmtSetExpAge ( int ExpirationAge) {
        var mh$ = RpcNsMgmtSetExpAge$MH();
        try {
            return (int)mh$.invokeExact(ExpirationAge);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryExpandNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$702.RpcNsEntryExpandNameW$MH,"RpcNsEntryExpandNameW");
    }
    public static int RpcNsEntryExpandNameW ( int EntryNameSyntax,  Addressable EntryName,  Addressable ExpandedName) {
        var mh$ = RpcNsEntryExpandNameW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, ExpandedName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtBindingUnexportW$MH() {
        return RuntimeHelper.requireNonNull(constants$702.RpcNsMgmtBindingUnexportW$MH,"RpcNsMgmtBindingUnexportW");
    }
    public static int RpcNsMgmtBindingUnexportW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfId,  int VersOption,  Addressable ObjectUuidVec) {
        var mh$ = RpcNsMgmtBindingUnexportW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfId, VersOption, ObjectUuidVec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryCreateW$MH() {
        return RuntimeHelper.requireNonNull(constants$702.RpcNsMgmtEntryCreateW$MH,"RpcNsMgmtEntryCreateW");
    }
    public static int RpcNsMgmtEntryCreateW ( int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RpcNsMgmtEntryCreateW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryDeleteW$MH() {
        return RuntimeHelper.requireNonNull(constants$702.RpcNsMgmtEntryDeleteW$MH,"RpcNsMgmtEntryDeleteW");
    }
    public static int RpcNsMgmtEntryDeleteW ( int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RpcNsMgmtEntryDeleteW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryInqIfIdsW$MH() {
        return RuntimeHelper.requireNonNull(constants$703.RpcNsMgmtEntryInqIfIdsW$MH,"RpcNsMgmtEntryInqIfIdsW");
    }
    public static int RpcNsMgmtEntryInqIfIdsW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfIdVec) {
        var mh$ = RpcNsMgmtEntryInqIfIdsW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfIdVec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingImportBeginA$MH() {
        return RuntimeHelper.requireNonNull(constants$703.RpcNsBindingImportBeginA$MH,"RpcNsBindingImportBeginA");
    }
    public static int RpcNsBindingImportBeginA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjUuid,  Addressable ImportContext) {
        var mh$ = RpcNsBindingImportBeginA$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, ObjUuid, ImportContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingImportBeginW$MH() {
        return RuntimeHelper.requireNonNull(constants$703.RpcNsBindingImportBeginW$MH,"RpcNsBindingImportBeginW");
    }
    public static int RpcNsBindingImportBeginW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjUuid,  Addressable ImportContext) {
        var mh$ = RpcNsBindingImportBeginW$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, IfSpec, ObjUuid, ImportContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingImportNext$MH() {
        return RuntimeHelper.requireNonNull(constants$703.RpcNsBindingImportNext$MH,"RpcNsBindingImportNext");
    }
    public static int RpcNsBindingImportNext ( Addressable ImportContext,  Addressable Binding) {
        var mh$ = RpcNsBindingImportNext$MH();
        try {
            return (int)mh$.invokeExact(ImportContext, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingImportDone$MH() {
        return RuntimeHelper.requireNonNull(constants$703.RpcNsBindingImportDone$MH,"RpcNsBindingImportDone");
    }
    public static int RpcNsBindingImportDone ( Addressable ImportContext) {
        var mh$ = RpcNsBindingImportDone$MH();
        try {
            return (int)mh$.invokeExact(ImportContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingSelect$MH() {
        return RuntimeHelper.requireNonNull(constants$703.RpcNsBindingSelect$MH,"RpcNsBindingSelect");
    }
    public static int RpcNsBindingSelect ( Addressable BindingVec,  Addressable Binding) {
        var mh$ = RpcNsBindingSelect$MH();
        try {
            return (int)mh$.invokeExact(BindingVec, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int RpcNotificationTypeNone() {
        return (int)0L;
    }
    public static int RpcNotificationTypeEvent() {
        return (int)1L;
    }
    public static int RpcNotificationTypeApc() {
        return (int)2L;
    }
    public static int RpcNotificationTypeIoc() {
        return (int)3L;
    }
    public static int RpcNotificationTypeHwnd() {
        return (int)4L;
    }
    public static int RpcNotificationTypeCallback() {
        return (int)5L;
    }
    public static int RpcCallComplete() {
        return (int)0L;
    }
    public static int RpcSendComplete() {
        return (int)1L;
    }
    public static int RpcReceiveComplete() {
        return (int)2L;
    }
    public static int RpcClientDisconnect() {
        return (int)3L;
    }
    public static int RpcClientCancel() {
        return (int)4L;
    }
    public static OfAddress PRPC_ASYNC_NOTIFICATION_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRPC_ASYNC_STATE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcAsyncRegisterInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$704.RpcAsyncRegisterInfo$MH,"RpcAsyncRegisterInfo");
    }
    public static int RpcAsyncRegisterInfo ( Addressable pAsync) {
        var mh$ = RpcAsyncRegisterInfo$MH();
        try {
            return (int)mh$.invokeExact(pAsync);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncInitializeHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$704.RpcAsyncInitializeHandle$MH,"RpcAsyncInitializeHandle");
    }
    public static int RpcAsyncInitializeHandle ( Addressable pAsync,  int Size) {
        var mh$ = RpcAsyncInitializeHandle$MH();
        try {
            return (int)mh$.invokeExact(pAsync, Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncGetCallStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$705.RpcAsyncGetCallStatus$MH,"RpcAsyncGetCallStatus");
    }
    public static int RpcAsyncGetCallStatus ( Addressable pAsync) {
        var mh$ = RpcAsyncGetCallStatus$MH();
        try {
            return (int)mh$.invokeExact(pAsync);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncCompleteCall$MH() {
        return RuntimeHelper.requireNonNull(constants$705.RpcAsyncCompleteCall$MH,"RpcAsyncCompleteCall");
    }
    public static int RpcAsyncCompleteCall ( Addressable pAsync,  Addressable Reply) {
        var mh$ = RpcAsyncCompleteCall$MH();
        try {
            return (int)mh$.invokeExact(pAsync, Reply);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncAbortCall$MH() {
        return RuntimeHelper.requireNonNull(constants$705.RpcAsyncAbortCall$MH,"RpcAsyncAbortCall");
    }
    public static int RpcAsyncAbortCall ( Addressable pAsync,  int ExceptionCode) {
        var mh$ = RpcAsyncAbortCall$MH();
        try {
            return (int)mh$.invokeExact(pAsync, ExceptionCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncCancelCall$MH() {
        return RuntimeHelper.requireNonNull(constants$705.RpcAsyncCancelCall$MH,"RpcAsyncCancelCall");
    }
    public static int RpcAsyncCancelCall ( Addressable pAsync,  int fAbort) {
        var mh$ = RpcAsyncCancelCall$MH();
        try {
            return (int)mh$.invokeExact(pAsync, fAbort);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int eeptAnsiString() {
        return (int)1L;
    }
    public static int eeptUnicodeString() {
        return (int)2L;
    }
    public static int eeptLongVal() {
        return (int)3L;
    }
    public static int eeptShortVal() {
        return (int)4L;
    }
    public static int eeptPointerVal() {
        return (int)5L;
    }
    public static int eeptNone() {
        return (int)6L;
    }
    public static int eeptBinary() {
        return (int)7L;
    }
    public static MethodHandle RpcErrorStartEnumeration$MH() {
        return RuntimeHelper.requireNonNull(constants$705.RpcErrorStartEnumeration$MH,"RpcErrorStartEnumeration");
    }
    public static int RpcErrorStartEnumeration ( Addressable EnumHandle) {
        var mh$ = RpcErrorStartEnumeration$MH();
        try {
            return (int)mh$.invokeExact(EnumHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorGetNextRecord$MH() {
        return RuntimeHelper.requireNonNull(constants$705.RpcErrorGetNextRecord$MH,"RpcErrorGetNextRecord");
    }
    public static int RpcErrorGetNextRecord ( Addressable EnumHandle,  int CopyStrings,  Addressable ErrorInfo) {
        var mh$ = RpcErrorGetNextRecord$MH();
        try {
            return (int)mh$.invokeExact(EnumHandle, CopyStrings, ErrorInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorEndEnumeration$MH() {
        return RuntimeHelper.requireNonNull(constants$706.RpcErrorEndEnumeration$MH,"RpcErrorEndEnumeration");
    }
    public static int RpcErrorEndEnumeration ( Addressable EnumHandle) {
        var mh$ = RpcErrorEndEnumeration$MH();
        try {
            return (int)mh$.invokeExact(EnumHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorResetEnumeration$MH() {
        return RuntimeHelper.requireNonNull(constants$706.RpcErrorResetEnumeration$MH,"RpcErrorResetEnumeration");
    }
    public static int RpcErrorResetEnumeration ( Addressable EnumHandle) {
        var mh$ = RpcErrorResetEnumeration$MH();
        try {
            return (int)mh$.invokeExact(EnumHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorGetNumberOfRecords$MH() {
        return RuntimeHelper.requireNonNull(constants$706.RpcErrorGetNumberOfRecords$MH,"RpcErrorGetNumberOfRecords");
    }
    public static int RpcErrorGetNumberOfRecords ( Addressable EnumHandle,  Addressable Records) {
        var mh$ = RpcErrorGetNumberOfRecords$MH();
        try {
            return (int)mh$.invokeExact(EnumHandle, Records);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorSaveErrorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$706.RpcErrorSaveErrorInfo$MH,"RpcErrorSaveErrorInfo");
    }
    public static int RpcErrorSaveErrorInfo ( Addressable EnumHandle,  Addressable ErrorBlob,  Addressable BlobSize) {
        var mh$ = RpcErrorSaveErrorInfo$MH();
        try {
            return (int)mh$.invokeExact(EnumHandle, ErrorBlob, BlobSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorLoadErrorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$706.RpcErrorLoadErrorInfo$MH,"RpcErrorLoadErrorInfo");
    }
    public static int RpcErrorLoadErrorInfo ( Addressable ErrorBlob,  long BlobSize,  Addressable EnumHandle) {
        var mh$ = RpcErrorLoadErrorInfo$MH();
        try {
            return (int)mh$.invokeExact(ErrorBlob, BlobSize, EnumHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorAddRecord$MH() {
        return RuntimeHelper.requireNonNull(constants$706.RpcErrorAddRecord$MH,"RpcErrorAddRecord");
    }
    public static int RpcErrorAddRecord ( Addressable ErrorInfo) {
        var mh$ = RpcErrorAddRecord$MH();
        try {
            return (int)mh$.invokeExact(ErrorInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorClearInformation$MH() {
        return RuntimeHelper.requireNonNull(constants$707.RpcErrorClearInformation$MH,"RpcErrorClearInformation");
    }
    public static void RpcErrorClearInformation () {
        var mh$ = RpcErrorClearInformation$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncCleanupThread$MH() {
        return RuntimeHelper.requireNonNull(constants$707.RpcAsyncCleanupThread$MH,"RpcAsyncCleanupThread");
    }
    public static int RpcAsyncCleanupThread ( int dwTimeout) {
        var mh$ = RpcAsyncCleanupThread$MH();
        try {
            return (int)mh$.invokeExact(dwTimeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcGetAuthorizationContextForClient$MH() {
        return RuntimeHelper.requireNonNull(constants$707.RpcGetAuthorizationContextForClient$MH,"RpcGetAuthorizationContextForClient");
    }
    public static int RpcGetAuthorizationContextForClient ( Addressable ClientBinding,  int ImpersonateOnReturn,  Addressable Reserved1,  Addressable pExpirationTime,  MemorySegment Reserved2,  int Reserved3,  Addressable Reserved4,  Addressable pAuthzClientContext) {
        var mh$ = RpcGetAuthorizationContextForClient$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, ImpersonateOnReturn, Reserved1, pExpirationTime, Reserved2, Reserved3, Reserved4, pAuthzClientContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcFreeAuthorizationContext$MH() {
        return RuntimeHelper.requireNonNull(constants$707.RpcFreeAuthorizationContext$MH,"RpcFreeAuthorizationContext");
    }
    public static int RpcFreeAuthorizationContext ( Addressable pAuthzClientContext) {
        var mh$ = RpcFreeAuthorizationContext$MH();
        try {
            return (int)mh$.invokeExact(pAuthzClientContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsContextLockExclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$707.RpcSsContextLockExclusive$MH,"RpcSsContextLockExclusive");
    }
    public static int RpcSsContextLockExclusive ( Addressable ServerBindingHandle,  Addressable UserContext) {
        var mh$ = RpcSsContextLockExclusive$MH();
        try {
            return (int)mh$.invokeExact(ServerBindingHandle, UserContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsContextLockShared$MH() {
        return RuntimeHelper.requireNonNull(constants$707.RpcSsContextLockShared$MH,"RpcSsContextLockShared");
    }
    public static int RpcSsContextLockShared ( Addressable ServerBindingHandle,  Addressable UserContext) {
        var mh$ = RpcSsContextLockShared$MH();
        try {
            return (int)mh$.invokeExact(ServerBindingHandle, UserContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int rlafInvalid() {
        return (int)0L;
    }
    public static int rlafIPv4() {
        return (int)1L;
    }
    public static int rlafIPv6() {
        return (int)2L;
    }
    public static OfAddress PRPC_CALL_LOCAL_ADDRESS_V1 = Constants$root.C_POINTER$LAYOUT;
    public static int rctInvalid() {
        return (int)0L;
    }
    public static int rctNormal() {
        return (int)1L;
    }
    public static int rctTraining() {
        return (int)2L;
    }
    public static int rctGuaranteed() {
        return (int)3L;
    }
    public static int rcclInvalid() {
        return (int)0L;
    }
    public static int rcclLocal() {
        return (int)1L;
    }
    public static int rcclRemote() {
        return (int)2L;
    }
    public static int rcclClientUnknownLocality() {
        return (int)3L;
    }
    public static MethodHandle RpcServerInqCallAttributesW$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RpcServerInqCallAttributesW$MH,"RpcServerInqCallAttributesW");
    }
    public static int RpcServerInqCallAttributesW ( Addressable ClientBinding,  Addressable RpcCallAttributes) {
        var mh$ = RpcServerInqCallAttributesW$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, RpcCallAttributes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqCallAttributesA$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RpcServerInqCallAttributesA$MH,"RpcServerInqCallAttributesA");
    }
    public static int RpcServerInqCallAttributesA ( Addressable ClientBinding,  Addressable RpcCallAttributes) {
        var mh$ = RpcServerInqCallAttributesA$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, RpcCallAttributes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int RpcNotificationCallNone() {
        return (int)0L;
    }
    public static int RpcNotificationClientDisconnect() {
        return (int)1L;
    }
    public static int RpcNotificationCallCancel() {
        return (int)2L;
    }
    public static MethodHandle RpcServerSubscribeForNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RpcServerSubscribeForNotification$MH,"RpcServerSubscribeForNotification");
    }
    public static int RpcServerSubscribeForNotification ( Addressable Binding,  int Notification,  int NotificationType,  Addressable NotificationInfo) {
        var mh$ = RpcServerSubscribeForNotification$MH();
        try {
            return (int)mh$.invokeExact(Binding, Notification, NotificationType, NotificationInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUnsubscribeForNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RpcServerUnsubscribeForNotification$MH,"RpcServerUnsubscribeForNotification");
    }
    public static int RpcServerUnsubscribeForNotification ( Addressable Binding,  int Notification,  Addressable NotificationsQueued) {
        var mh$ = RpcServerUnsubscribeForNotification$MH();
        try {
            return (int)mh$.invokeExact(Binding, Notification, NotificationsQueued);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingBind$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RpcBindingBind$MH,"RpcBindingBind");
    }
    public static int RpcBindingBind ( Addressable pAsync,  Addressable Binding,  Addressable IfSpec) {
        var mh$ = RpcBindingBind$MH();
        try {
            return (int)mh$.invokeExact(pAsync, Binding, IfSpec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingUnbind$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RpcBindingUnbind$MH,"RpcBindingUnbind");
    }
    public static int RpcBindingUnbind ( Addressable Binding) {
        var mh$ = RpcBindingUnbind$MH();
        try {
            return (int)mh$.invokeExact(Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcAsyncSetHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$709.I_RpcAsyncSetHandle$MH,"I_RpcAsyncSetHandle");
    }
    public static int I_RpcAsyncSetHandle ( Addressable Message,  Addressable pAsync) {
        var mh$ = I_RpcAsyncSetHandle$MH();
        try {
            return (int)mh$.invokeExact(Message, pAsync);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcAsyncAbortCall$MH() {
        return RuntimeHelper.requireNonNull(constants$709.I_RpcAsyncAbortCall$MH,"I_RpcAsyncAbortCall");
    }
    public static int I_RpcAsyncAbortCall ( Addressable pAsync,  int ExceptionCode) {
        var mh$ = I_RpcAsyncAbortCall$MH();
        try {
            return (int)mh$.invokeExact(pAsync, ExceptionCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcExceptionFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$709.I_RpcExceptionFilter$MH,"I_RpcExceptionFilter");
    }
    public static int I_RpcExceptionFilter ( int ExceptionCode) {
        var mh$ = I_RpcExceptionFilter$MH();
        try {
            return (int)mh$.invokeExact(ExceptionCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqClientTokenAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$709.I_RpcBindingInqClientTokenAttributes$MH,"I_RpcBindingInqClientTokenAttributes");
    }
    public static int I_RpcBindingInqClientTokenAttributes ( Addressable Binding,  Addressable TokenId,  Addressable AuthenticationId,  Addressable ModifiedId) {
        var mh$ = I_RpcBindingInqClientTokenAttributes$MH();
        try {
            return (int)mh$.invokeExact(Binding, TokenId, AuthenticationId, ModifiedId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CommandLineToArgvW$MH() {
        return RuntimeHelper.requireNonNull(constants$709.CommandLineToArgvW$MH,"CommandLineToArgvW");
    }
    public static MemoryAddress CommandLineToArgvW ( Addressable lpCmdLine,  Addressable pNumArgs) {
        var mh$ = CommandLineToArgvW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(lpCmdLine, pNumArgs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress HDROP = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle DragQueryFileA$MH() {
        return RuntimeHelper.requireNonNull(constants$709.DragQueryFileA$MH,"DragQueryFileA");
    }
    public static int DragQueryFileA ( Addressable hDrop,  int iFile,  Addressable lpszFile,  int cch) {
        var mh$ = DragQueryFileA$MH();
        try {
            return (int)mh$.invokeExact(hDrop, iFile, lpszFile, cch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DragQueryFileW$MH() {
        return RuntimeHelper.requireNonNull(constants$710.DragQueryFileW$MH,"DragQueryFileW");
    }
    public static int DragQueryFileW ( Addressable hDrop,  int iFile,  Addressable lpszFile,  int cch) {
        var mh$ = DragQueryFileW$MH();
        try {
            return (int)mh$.invokeExact(hDrop, iFile, lpszFile, cch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DragQueryPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$710.DragQueryPoint$MH,"DragQueryPoint");
    }
    public static int DragQueryPoint ( Addressable hDrop,  Addressable ppt) {
        var mh$ = DragQueryPoint$MH();
        try {
            return (int)mh$.invokeExact(hDrop, ppt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DragFinish$MH() {
        return RuntimeHelper.requireNonNull(constants$710.DragFinish$MH,"DragFinish");
    }
    public static void DragFinish ( Addressable hDrop) {
        var mh$ = DragFinish$MH();
        try {
            mh$.invokeExact(hDrop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DragAcceptFiles$MH() {
        return RuntimeHelper.requireNonNull(constants$710.DragAcceptFiles$MH,"DragAcceptFiles");
    }
    public static void DragAcceptFiles ( Addressable hWnd,  int fAccept) {
        var mh$ = DragAcceptFiles$MH();
        try {
            mh$.invokeExact(hWnd, fAccept);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShellExecuteA$MH() {
        return RuntimeHelper.requireNonNull(constants$710.ShellExecuteA$MH,"ShellExecuteA");
    }
    public static MemoryAddress ShellExecuteA ( Addressable hwnd,  Addressable lpOperation,  Addressable lpFile,  Addressable lpParameters,  Addressable lpDirectory,  int nShowCmd) {
        var mh$ = ShellExecuteA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hwnd, lpOperation, lpFile, lpParameters, lpDirectory, nShowCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShellExecuteW$MH() {
        return RuntimeHelper.requireNonNull(constants$710.ShellExecuteW$MH,"ShellExecuteW");
    }
    public static MemoryAddress ShellExecuteW ( Addressable hwnd,  Addressable lpOperation,  Addressable lpFile,  Addressable lpParameters,  Addressable lpDirectory,  int nShowCmd) {
        var mh$ = ShellExecuteW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hwnd, lpOperation, lpFile, lpParameters, lpDirectory, nShowCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindExecutableA$MH() {
        return RuntimeHelper.requireNonNull(constants$711.FindExecutableA$MH,"FindExecutableA");
    }
    public static MemoryAddress FindExecutableA ( Addressable lpFile,  Addressable lpDirectory,  Addressable lpResult) {
        var mh$ = FindExecutableA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(lpFile, lpDirectory, lpResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindExecutableW$MH() {
        return RuntimeHelper.requireNonNull(constants$711.FindExecutableW$MH,"FindExecutableW");
    }
    public static MemoryAddress FindExecutableW ( Addressable lpFile,  Addressable lpDirectory,  Addressable lpResult) {
        var mh$ = FindExecutableW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(lpFile, lpDirectory, lpResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShellAboutA$MH() {
        return RuntimeHelper.requireNonNull(constants$711.ShellAboutA$MH,"ShellAboutA");
    }
    public static int ShellAboutA ( Addressable hWnd,  Addressable szApp,  Addressable szOtherStuff,  Addressable hIcon) {
        var mh$ = ShellAboutA$MH();
        try {
            return (int)mh$.invokeExact(hWnd, szApp, szOtherStuff, hIcon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShellAboutW$MH() {
        return RuntimeHelper.requireNonNull(constants$711.ShellAboutW$MH,"ShellAboutW");
    }
    public static int ShellAboutW ( Addressable hWnd,  Addressable szApp,  Addressable szOtherStuff,  Addressable hIcon) {
        var mh$ = ShellAboutW$MH();
        try {
            return (int)mh$.invokeExact(hWnd, szApp, szOtherStuff, hIcon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DuplicateIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$711.DuplicateIcon$MH,"DuplicateIcon");
    }
    public static MemoryAddress DuplicateIcon ( Addressable hInst,  Addressable hIcon) {
        var mh$ = DuplicateIcon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hInst, hIcon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractAssociatedIconA$MH() {
        return RuntimeHelper.requireNonNull(constants$711.ExtractAssociatedIconA$MH,"ExtractAssociatedIconA");
    }
    public static MemoryAddress ExtractAssociatedIconA ( Addressable hInst,  Addressable pszIconPath,  Addressable piIcon) {
        var mh$ = ExtractAssociatedIconA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hInst, pszIconPath, piIcon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractAssociatedIconW$MH() {
        return RuntimeHelper.requireNonNull(constants$712.ExtractAssociatedIconW$MH,"ExtractAssociatedIconW");
    }
    public static MemoryAddress ExtractAssociatedIconW ( Addressable hInst,  Addressable pszIconPath,  Addressable piIcon) {
        var mh$ = ExtractAssociatedIconW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hInst, pszIconPath, piIcon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractAssociatedIconExA$MH() {
        return RuntimeHelper.requireNonNull(constants$712.ExtractAssociatedIconExA$MH,"ExtractAssociatedIconExA");
    }
    public static MemoryAddress ExtractAssociatedIconExA ( Addressable hInst,  Addressable pszIconPath,  Addressable piIconIndex,  Addressable piIconId) {
        var mh$ = ExtractAssociatedIconExA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hInst, pszIconPath, piIconIndex, piIconId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractAssociatedIconExW$MH() {
        return RuntimeHelper.requireNonNull(constants$712.ExtractAssociatedIconExW$MH,"ExtractAssociatedIconExW");
    }
    public static MemoryAddress ExtractAssociatedIconExW ( Addressable hInst,  Addressable pszIconPath,  Addressable piIconIndex,  Addressable piIconId) {
        var mh$ = ExtractAssociatedIconExW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hInst, pszIconPath, piIconIndex, piIconId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractIconA$MH() {
        return RuntimeHelper.requireNonNull(constants$712.ExtractIconA$MH,"ExtractIconA");
    }
    public static MemoryAddress ExtractIconA ( Addressable hInst,  Addressable pszExeFileName,  int nIconIndex) {
        var mh$ = ExtractIconA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hInst, pszExeFileName, nIconIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractIconW$MH() {
        return RuntimeHelper.requireNonNull(constants$712.ExtractIconW$MH,"ExtractIconW");
    }
    public static MemoryAddress ExtractIconW ( Addressable hInst,  Addressable pszExeFileName,  int nIconIndex) {
        var mh$ = ExtractIconW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hInst, pszExeFileName, nIconIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPDRAGINFOA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRAGINFOW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRAGINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PAPPBARDATA = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle SHAppBarMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$712.SHAppBarMessage$MH,"SHAppBarMessage");
    }
    public static long SHAppBarMessage ( int dwMessage,  Addressable pData) {
        var mh$ = SHAppBarMessage$MH();
        try {
            return (long)mh$.invokeExact(dwMessage, pData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DoEnvironmentSubstA$MH() {
        return RuntimeHelper.requireNonNull(constants$713.DoEnvironmentSubstA$MH,"DoEnvironmentSubstA");
    }
    public static int DoEnvironmentSubstA ( Addressable pszSrc,  int cchSrc) {
        var mh$ = DoEnvironmentSubstA$MH();
        try {
            return (int)mh$.invokeExact(pszSrc, cchSrc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DoEnvironmentSubstW$MH() {
        return RuntimeHelper.requireNonNull(constants$713.DoEnvironmentSubstW$MH,"DoEnvironmentSubstW");
    }
    public static int DoEnvironmentSubstW ( Addressable pszSrc,  int cchSrc) {
        var mh$ = DoEnvironmentSubstW$MH();
        try {
            return (int)mh$.invokeExact(pszSrc, cchSrc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractIconExA$MH() {
        return RuntimeHelper.requireNonNull(constants$713.ExtractIconExA$MH,"ExtractIconExA");
    }
    public static int ExtractIconExA ( Addressable lpszFile,  int nIconIndex,  Addressable phiconLarge,  Addressable phiconSmall,  int nIcons) {
        var mh$ = ExtractIconExA$MH();
        try {
            return (int)mh$.invokeExact(lpszFile, nIconIndex, phiconLarge, phiconSmall, nIcons);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractIconExW$MH() {
        return RuntimeHelper.requireNonNull(constants$713.ExtractIconExW$MH,"ExtractIconExW");
    }
    public static int ExtractIconExW ( Addressable lpszFile,  int nIconIndex,  Addressable phiconLarge,  Addressable phiconSmall,  int nIcons) {
        var mh$ = ExtractIconExW$MH();
        try {
            return (int)mh$.invokeExact(lpszFile, nIconIndex, phiconLarge, phiconSmall, nIcons);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPSHFILEOPSTRUCTA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSHFILEOPSTRUCTW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSHFILEOPSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle SHFileOperationA$MH() {
        return RuntimeHelper.requireNonNull(constants$713.SHFileOperationA$MH,"SHFileOperationA");
    }
    public static int SHFileOperationA ( Addressable lpFileOp) {
        var mh$ = SHFileOperationA$MH();
        try {
            return (int)mh$.invokeExact(lpFileOp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHFileOperationW$MH() {
        return RuntimeHelper.requireNonNull(constants$713.SHFileOperationW$MH,"SHFileOperationW");
    }
    public static int SHFileOperationW ( Addressable lpFileOp) {
        var mh$ = SHFileOperationW$MH();
        try {
            return (int)mh$.invokeExact(lpFileOp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHFreeNameMappings$MH() {
        return RuntimeHelper.requireNonNull(constants$714.SHFreeNameMappings$MH,"SHFreeNameMappings");
    }
    public static void SHFreeNameMappings ( Addressable hNameMappings) {
        var mh$ = SHFreeNameMappings$MH();
        try {
            mh$.invokeExact(hNameMappings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPSHNAMEMAPPINGA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSHNAMEMAPPINGW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSHNAMEMAPPING = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSHELLEXECUTEINFOA = Constants$root.C_POINTER$LAYOUT;
}


