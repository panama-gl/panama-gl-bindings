// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class tagCY {

    static final  GroupLayout $union$LAYOUT = MemoryLayout.unionLayout(
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("Lo"),
            Constants$root.C_LONG$LAYOUT.withName("Hi")
        ).withName("$anon$0"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("int64")
    ).withName("tagCY");
    public static MemoryLayout $LAYOUT() {
        return tagCY.$union$LAYOUT;
    }
    static final VarHandle Lo$VH = $union$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("Lo"));
    public static VarHandle Lo$VH() {
        return tagCY.Lo$VH;
    }
    public static int Lo$get(MemorySegment seg) {
        return (int)tagCY.Lo$VH.get(seg);
    }
    public static void Lo$set( MemorySegment seg, int x) {
        tagCY.Lo$VH.set(seg, x);
    }
    public static int Lo$get(MemorySegment seg, long index) {
        return (int)tagCY.Lo$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Lo$set(MemorySegment seg, long index, int x) {
        tagCY.Lo$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Hi$VH = $union$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("Hi"));
    public static VarHandle Hi$VH() {
        return tagCY.Hi$VH;
    }
    public static int Hi$get(MemorySegment seg) {
        return (int)tagCY.Hi$VH.get(seg);
    }
    public static void Hi$set( MemorySegment seg, int x) {
        tagCY.Hi$VH.set(seg, x);
    }
    public static int Hi$get(MemorySegment seg, long index) {
        return (int)tagCY.Hi$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Hi$set(MemorySegment seg, long index, int x) {
        tagCY.Hi$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle int64$VH = $union$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("int64"));
    public static VarHandle int64$VH() {
        return tagCY.int64$VH;
    }
    public static long int64$get(MemorySegment seg) {
        return (long)tagCY.int64$VH.get(seg);
    }
    public static void int64$set( MemorySegment seg, long x) {
        tagCY.int64$VH.set(seg, x);
    }
    public static long int64$get(MemorySegment seg, long index) {
        return (long)tagCY.int64$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void int64$set(MemorySegment seg, long index, long x) {
        tagCY.int64$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


