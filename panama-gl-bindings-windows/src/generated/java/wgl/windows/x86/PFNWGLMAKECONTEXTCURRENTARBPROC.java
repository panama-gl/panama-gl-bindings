// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNWGLMAKECONTEXTCURRENTARBPROC {

    int apply(java.lang.foreign.MemoryAddress hDrawDC, java.lang.foreign.MemoryAddress hReadDC, java.lang.foreign.MemoryAddress hglrc);
    static MemorySegment allocate(PFNWGLMAKECONTEXTCURRENTARBPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNWGLMAKECONTEXTCURRENTARBPROC.class, fi, constants$1379.PFNWGLMAKECONTEXTCURRENTARBPROC$FUNC, session);
    }
    static PFNWGLMAKECONTEXTCURRENTARBPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _hDrawDC, java.lang.foreign.MemoryAddress _hReadDC, java.lang.foreign.MemoryAddress _hglrc) -> {
            try {
                return (int)constants$1379.PFNWGLMAKECONTEXTCURRENTARBPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_hDrawDC, (java.lang.foreign.Addressable)_hReadDC, (java.lang.foreign.Addressable)_hglrc);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


