// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNWGLBINDSWAPBARRIERNVPROC {

    int apply(int group, int barrier);
    static MemorySegment allocate(PFNWGLBINDSWAPBARRIERNVPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNWGLBINDSWAPBARRIERNVPROC.class, fi, constants$1408.PFNWGLBINDSWAPBARRIERNVPROC$FUNC, session);
    }
    static PFNWGLBINDSWAPBARRIERNVPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _group, int _barrier) -> {
            try {
                return (int)constants$1408.PFNWGLBINDSWAPBARRIERNVPROC$MH.invokeExact((Addressable)symbol, _group, _barrier);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


