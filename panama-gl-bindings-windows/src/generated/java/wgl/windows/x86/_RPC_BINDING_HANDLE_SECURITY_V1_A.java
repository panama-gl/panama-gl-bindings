// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _RPC_BINDING_HANDLE_SECURITY_V1_A {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Version"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("ServerPrincName"),
        Constants$root.C_LONG$LAYOUT.withName("AuthnLevel"),
        Constants$root.C_LONG$LAYOUT.withName("AuthnSvc"),
        Constants$root.C_POINTER$LAYOUT.withName("AuthIdentity"),
        Constants$root.C_POINTER$LAYOUT.withName("SecurityQos")
    ).withName("_RPC_BINDING_HANDLE_SECURITY_V1_A");
    public static MemoryLayout $LAYOUT() {
        return _RPC_BINDING_HANDLE_SECURITY_V1_A.$struct$LAYOUT;
    }
    static final VarHandle Version$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Version"));
    public static VarHandle Version$VH() {
        return _RPC_BINDING_HANDLE_SECURITY_V1_A.Version$VH;
    }
    public static int Version$get(MemorySegment seg) {
        return (int)_RPC_BINDING_HANDLE_SECURITY_V1_A.Version$VH.get(seg);
    }
    public static void Version$set( MemorySegment seg, int x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.Version$VH.set(seg, x);
    }
    public static int Version$get(MemorySegment seg, long index) {
        return (int)_RPC_BINDING_HANDLE_SECURITY_V1_A.Version$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Version$set(MemorySegment seg, long index, int x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.Version$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ServerPrincName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ServerPrincName"));
    public static VarHandle ServerPrincName$VH() {
        return _RPC_BINDING_HANDLE_SECURITY_V1_A.ServerPrincName$VH;
    }
    public static MemoryAddress ServerPrincName$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_RPC_BINDING_HANDLE_SECURITY_V1_A.ServerPrincName$VH.get(seg);
    }
    public static void ServerPrincName$set( MemorySegment seg, MemoryAddress x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.ServerPrincName$VH.set(seg, x);
    }
    public static MemoryAddress ServerPrincName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_RPC_BINDING_HANDLE_SECURITY_V1_A.ServerPrincName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ServerPrincName$set(MemorySegment seg, long index, MemoryAddress x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.ServerPrincName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AuthnLevel$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("AuthnLevel"));
    public static VarHandle AuthnLevel$VH() {
        return _RPC_BINDING_HANDLE_SECURITY_V1_A.AuthnLevel$VH;
    }
    public static int AuthnLevel$get(MemorySegment seg) {
        return (int)_RPC_BINDING_HANDLE_SECURITY_V1_A.AuthnLevel$VH.get(seg);
    }
    public static void AuthnLevel$set( MemorySegment seg, int x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.AuthnLevel$VH.set(seg, x);
    }
    public static int AuthnLevel$get(MemorySegment seg, long index) {
        return (int)_RPC_BINDING_HANDLE_SECURITY_V1_A.AuthnLevel$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AuthnLevel$set(MemorySegment seg, long index, int x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.AuthnLevel$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AuthnSvc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("AuthnSvc"));
    public static VarHandle AuthnSvc$VH() {
        return _RPC_BINDING_HANDLE_SECURITY_V1_A.AuthnSvc$VH;
    }
    public static int AuthnSvc$get(MemorySegment seg) {
        return (int)_RPC_BINDING_HANDLE_SECURITY_V1_A.AuthnSvc$VH.get(seg);
    }
    public static void AuthnSvc$set( MemorySegment seg, int x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.AuthnSvc$VH.set(seg, x);
    }
    public static int AuthnSvc$get(MemorySegment seg, long index) {
        return (int)_RPC_BINDING_HANDLE_SECURITY_V1_A.AuthnSvc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AuthnSvc$set(MemorySegment seg, long index, int x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.AuthnSvc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AuthIdentity$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("AuthIdentity"));
    public static VarHandle AuthIdentity$VH() {
        return _RPC_BINDING_HANDLE_SECURITY_V1_A.AuthIdentity$VH;
    }
    public static MemoryAddress AuthIdentity$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_RPC_BINDING_HANDLE_SECURITY_V1_A.AuthIdentity$VH.get(seg);
    }
    public static void AuthIdentity$set( MemorySegment seg, MemoryAddress x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.AuthIdentity$VH.set(seg, x);
    }
    public static MemoryAddress AuthIdentity$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_RPC_BINDING_HANDLE_SECURITY_V1_A.AuthIdentity$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AuthIdentity$set(MemorySegment seg, long index, MemoryAddress x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.AuthIdentity$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle SecurityQos$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("SecurityQos"));
    public static VarHandle SecurityQos$VH() {
        return _RPC_BINDING_HANDLE_SECURITY_V1_A.SecurityQos$VH;
    }
    public static MemoryAddress SecurityQos$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_RPC_BINDING_HANDLE_SECURITY_V1_A.SecurityQos$VH.get(seg);
    }
    public static void SecurityQos$set( MemorySegment seg, MemoryAddress x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.SecurityQos$VH.set(seg, x);
    }
    public static MemoryAddress SecurityQos$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_RPC_BINDING_HANDLE_SECURITY_V1_A.SecurityQos$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void SecurityQos$set(MemorySegment seg, long index, MemoryAddress x) {
        _RPC_BINDING_HANDLE_SECURITY_V1_A.SecurityQos$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


