// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$165 {

    static final FunctionDescriptor CancelSynchronousIo$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CancelSynchronousIo$MH = RuntimeHelper.downcallHandle(
        "CancelSynchronousIo",
        constants$165.CancelSynchronousIo$FUNC
    );
    static final FunctionDescriptor InitializeSRWLock$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle InitializeSRWLock$MH = RuntimeHelper.downcallHandle(
        "InitializeSRWLock",
        constants$165.InitializeSRWLock$FUNC
    );
    static final FunctionDescriptor ReleaseSRWLockExclusive$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReleaseSRWLockExclusive$MH = RuntimeHelper.downcallHandle(
        "ReleaseSRWLockExclusive",
        constants$165.ReleaseSRWLockExclusive$FUNC
    );
    static final FunctionDescriptor ReleaseSRWLockShared$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReleaseSRWLockShared$MH = RuntimeHelper.downcallHandle(
        "ReleaseSRWLockShared",
        constants$165.ReleaseSRWLockShared$FUNC
    );
    static final FunctionDescriptor AcquireSRWLockExclusive$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle AcquireSRWLockExclusive$MH = RuntimeHelper.downcallHandle(
        "AcquireSRWLockExclusive",
        constants$165.AcquireSRWLockExclusive$FUNC
    );
    static final FunctionDescriptor AcquireSRWLockShared$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle AcquireSRWLockShared$MH = RuntimeHelper.downcallHandle(
        "AcquireSRWLockShared",
        constants$165.AcquireSRWLockShared$FUNC
    );
}


