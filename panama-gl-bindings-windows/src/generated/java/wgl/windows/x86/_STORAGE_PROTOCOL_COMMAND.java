// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _STORAGE_PROTOCOL_COMMAND {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Version"),
        Constants$root.C_LONG$LAYOUT.withName("Length"),
        Constants$root.C_LONG$LAYOUT.withName("ProtocolType"),
        Constants$root.C_LONG$LAYOUT.withName("Flags"),
        Constants$root.C_LONG$LAYOUT.withName("ReturnStatus"),
        Constants$root.C_LONG$LAYOUT.withName("ErrorCode"),
        Constants$root.C_LONG$LAYOUT.withName("CommandLength"),
        Constants$root.C_LONG$LAYOUT.withName("ErrorInfoLength"),
        Constants$root.C_LONG$LAYOUT.withName("DataToDeviceTransferLength"),
        Constants$root.C_LONG$LAYOUT.withName("DataFromDeviceTransferLength"),
        Constants$root.C_LONG$LAYOUT.withName("TimeOutValue"),
        Constants$root.C_LONG$LAYOUT.withName("ErrorInfoOffset"),
        Constants$root.C_LONG$LAYOUT.withName("DataToDeviceBufferOffset"),
        Constants$root.C_LONG$LAYOUT.withName("DataFromDeviceBufferOffset"),
        Constants$root.C_LONG$LAYOUT.withName("CommandSpecific"),
        Constants$root.C_LONG$LAYOUT.withName("Reserved0"),
        Constants$root.C_LONG$LAYOUT.withName("FixedProtocolReturnData"),
        MemoryLayout.sequenceLayout(3, Constants$root.C_LONG$LAYOUT).withName("Reserved1"),
        MemoryLayout.sequenceLayout(1, Constants$root.C_CHAR$LAYOUT).withName("Command"),
        MemoryLayout.paddingLayout(24)
    ).withName("_STORAGE_PROTOCOL_COMMAND");
    public static MemoryLayout $LAYOUT() {
        return _STORAGE_PROTOCOL_COMMAND.$struct$LAYOUT;
    }
    static final VarHandle Version$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Version"));
    public static VarHandle Version$VH() {
        return _STORAGE_PROTOCOL_COMMAND.Version$VH;
    }
    public static int Version$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.Version$VH.get(seg);
    }
    public static void Version$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.Version$VH.set(seg, x);
    }
    public static int Version$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.Version$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Version$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.Version$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Length$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Length"));
    public static VarHandle Length$VH() {
        return _STORAGE_PROTOCOL_COMMAND.Length$VH;
    }
    public static int Length$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.Length$VH.get(seg);
    }
    public static void Length$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.Length$VH.set(seg, x);
    }
    public static int Length$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.Length$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Length$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.Length$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ProtocolType$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ProtocolType"));
    public static VarHandle ProtocolType$VH() {
        return _STORAGE_PROTOCOL_COMMAND.ProtocolType$VH;
    }
    public static int ProtocolType$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.ProtocolType$VH.get(seg);
    }
    public static void ProtocolType$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.ProtocolType$VH.set(seg, x);
    }
    public static int ProtocolType$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.ProtocolType$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ProtocolType$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.ProtocolType$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Flags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Flags"));
    public static VarHandle Flags$VH() {
        return _STORAGE_PROTOCOL_COMMAND.Flags$VH;
    }
    public static int Flags$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.Flags$VH.get(seg);
    }
    public static void Flags$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.Flags$VH.set(seg, x);
    }
    public static int Flags$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.Flags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.Flags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ReturnStatus$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ReturnStatus"));
    public static VarHandle ReturnStatus$VH() {
        return _STORAGE_PROTOCOL_COMMAND.ReturnStatus$VH;
    }
    public static int ReturnStatus$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.ReturnStatus$VH.get(seg);
    }
    public static void ReturnStatus$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.ReturnStatus$VH.set(seg, x);
    }
    public static int ReturnStatus$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.ReturnStatus$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ReturnStatus$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.ReturnStatus$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ErrorCode$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ErrorCode"));
    public static VarHandle ErrorCode$VH() {
        return _STORAGE_PROTOCOL_COMMAND.ErrorCode$VH;
    }
    public static int ErrorCode$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.ErrorCode$VH.get(seg);
    }
    public static void ErrorCode$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.ErrorCode$VH.set(seg, x);
    }
    public static int ErrorCode$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.ErrorCode$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ErrorCode$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.ErrorCode$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle CommandLength$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("CommandLength"));
    public static VarHandle CommandLength$VH() {
        return _STORAGE_PROTOCOL_COMMAND.CommandLength$VH;
    }
    public static int CommandLength$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.CommandLength$VH.get(seg);
    }
    public static void CommandLength$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.CommandLength$VH.set(seg, x);
    }
    public static int CommandLength$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.CommandLength$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void CommandLength$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.CommandLength$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ErrorInfoLength$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ErrorInfoLength"));
    public static VarHandle ErrorInfoLength$VH() {
        return _STORAGE_PROTOCOL_COMMAND.ErrorInfoLength$VH;
    }
    public static int ErrorInfoLength$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.ErrorInfoLength$VH.get(seg);
    }
    public static void ErrorInfoLength$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.ErrorInfoLength$VH.set(seg, x);
    }
    public static int ErrorInfoLength$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.ErrorInfoLength$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ErrorInfoLength$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.ErrorInfoLength$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle DataToDeviceTransferLength$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("DataToDeviceTransferLength"));
    public static VarHandle DataToDeviceTransferLength$VH() {
        return _STORAGE_PROTOCOL_COMMAND.DataToDeviceTransferLength$VH;
    }
    public static int DataToDeviceTransferLength$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.DataToDeviceTransferLength$VH.get(seg);
    }
    public static void DataToDeviceTransferLength$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.DataToDeviceTransferLength$VH.set(seg, x);
    }
    public static int DataToDeviceTransferLength$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.DataToDeviceTransferLength$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void DataToDeviceTransferLength$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.DataToDeviceTransferLength$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle DataFromDeviceTransferLength$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("DataFromDeviceTransferLength"));
    public static VarHandle DataFromDeviceTransferLength$VH() {
        return _STORAGE_PROTOCOL_COMMAND.DataFromDeviceTransferLength$VH;
    }
    public static int DataFromDeviceTransferLength$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.DataFromDeviceTransferLength$VH.get(seg);
    }
    public static void DataFromDeviceTransferLength$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.DataFromDeviceTransferLength$VH.set(seg, x);
    }
    public static int DataFromDeviceTransferLength$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.DataFromDeviceTransferLength$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void DataFromDeviceTransferLength$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.DataFromDeviceTransferLength$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle TimeOutValue$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("TimeOutValue"));
    public static VarHandle TimeOutValue$VH() {
        return _STORAGE_PROTOCOL_COMMAND.TimeOutValue$VH;
    }
    public static int TimeOutValue$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.TimeOutValue$VH.get(seg);
    }
    public static void TimeOutValue$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.TimeOutValue$VH.set(seg, x);
    }
    public static int TimeOutValue$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.TimeOutValue$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void TimeOutValue$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.TimeOutValue$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ErrorInfoOffset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ErrorInfoOffset"));
    public static VarHandle ErrorInfoOffset$VH() {
        return _STORAGE_PROTOCOL_COMMAND.ErrorInfoOffset$VH;
    }
    public static int ErrorInfoOffset$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.ErrorInfoOffset$VH.get(seg);
    }
    public static void ErrorInfoOffset$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.ErrorInfoOffset$VH.set(seg, x);
    }
    public static int ErrorInfoOffset$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.ErrorInfoOffset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ErrorInfoOffset$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.ErrorInfoOffset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle DataToDeviceBufferOffset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("DataToDeviceBufferOffset"));
    public static VarHandle DataToDeviceBufferOffset$VH() {
        return _STORAGE_PROTOCOL_COMMAND.DataToDeviceBufferOffset$VH;
    }
    public static int DataToDeviceBufferOffset$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.DataToDeviceBufferOffset$VH.get(seg);
    }
    public static void DataToDeviceBufferOffset$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.DataToDeviceBufferOffset$VH.set(seg, x);
    }
    public static int DataToDeviceBufferOffset$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.DataToDeviceBufferOffset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void DataToDeviceBufferOffset$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.DataToDeviceBufferOffset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle DataFromDeviceBufferOffset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("DataFromDeviceBufferOffset"));
    public static VarHandle DataFromDeviceBufferOffset$VH() {
        return _STORAGE_PROTOCOL_COMMAND.DataFromDeviceBufferOffset$VH;
    }
    public static int DataFromDeviceBufferOffset$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.DataFromDeviceBufferOffset$VH.get(seg);
    }
    public static void DataFromDeviceBufferOffset$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.DataFromDeviceBufferOffset$VH.set(seg, x);
    }
    public static int DataFromDeviceBufferOffset$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.DataFromDeviceBufferOffset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void DataFromDeviceBufferOffset$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.DataFromDeviceBufferOffset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle CommandSpecific$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("CommandSpecific"));
    public static VarHandle CommandSpecific$VH() {
        return _STORAGE_PROTOCOL_COMMAND.CommandSpecific$VH;
    }
    public static int CommandSpecific$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.CommandSpecific$VH.get(seg);
    }
    public static void CommandSpecific$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.CommandSpecific$VH.set(seg, x);
    }
    public static int CommandSpecific$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.CommandSpecific$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void CommandSpecific$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.CommandSpecific$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved0$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved0"));
    public static VarHandle Reserved0$VH() {
        return _STORAGE_PROTOCOL_COMMAND.Reserved0$VH;
    }
    public static int Reserved0$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.Reserved0$VH.get(seg);
    }
    public static void Reserved0$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.Reserved0$VH.set(seg, x);
    }
    public static int Reserved0$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.Reserved0$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved0$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.Reserved0$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle FixedProtocolReturnData$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("FixedProtocolReturnData"));
    public static VarHandle FixedProtocolReturnData$VH() {
        return _STORAGE_PROTOCOL_COMMAND.FixedProtocolReturnData$VH;
    }
    public static int FixedProtocolReturnData$get(MemorySegment seg) {
        return (int)_STORAGE_PROTOCOL_COMMAND.FixedProtocolReturnData$VH.get(seg);
    }
    public static void FixedProtocolReturnData$set( MemorySegment seg, int x) {
        _STORAGE_PROTOCOL_COMMAND.FixedProtocolReturnData$VH.set(seg, x);
    }
    public static int FixedProtocolReturnData$get(MemorySegment seg, long index) {
        return (int)_STORAGE_PROTOCOL_COMMAND.FixedProtocolReturnData$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void FixedProtocolReturnData$set(MemorySegment seg, long index, int x) {
        _STORAGE_PROTOCOL_COMMAND.FixedProtocolReturnData$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Reserved1$slice(MemorySegment seg) {
        return seg.asSlice(68, 12);
    }
    public static MemorySegment Command$slice(MemorySegment seg) {
        return seg.asSlice(80, 1);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


