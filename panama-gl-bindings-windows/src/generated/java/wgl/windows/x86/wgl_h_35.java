// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class wgl_h_35 extends wgl_h_36 {

    wgl_h_35() {
        // Should not be called directly
    }
    private static final int WVR_ALIGNRIGHT = (int)128L;
    /**
     * {@snippet lang=c :
     * #define WVR_ALIGNRIGHT 128
     * }
     */
    public static int WVR_ALIGNRIGHT() {
        return WVR_ALIGNRIGHT;
    }
    private static final int WVR_HREDRAW = (int)256L;
    /**
     * {@snippet lang=c :
     * #define WVR_HREDRAW 256
     * }
     */
    public static int WVR_HREDRAW() {
        return WVR_HREDRAW;
    }
    private static final int WVR_VREDRAW = (int)512L;
    /**
     * {@snippet lang=c :
     * #define WVR_VREDRAW 512
     * }
     */
    public static int WVR_VREDRAW() {
        return WVR_VREDRAW;
    }
    private static final int WVR_VALIDRECTS = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define WVR_VALIDRECTS 1024
     * }
     */
    public static int WVR_VALIDRECTS() {
        return WVR_VALIDRECTS;
    }
    private static final int MK_LBUTTON = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MK_LBUTTON 1
     * }
     */
    public static int MK_LBUTTON() {
        return MK_LBUTTON;
    }
    private static final int MK_RBUTTON = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MK_RBUTTON 2
     * }
     */
    public static int MK_RBUTTON() {
        return MK_RBUTTON;
    }
    private static final int MK_SHIFT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MK_SHIFT 4
     * }
     */
    public static int MK_SHIFT() {
        return MK_SHIFT;
    }
    private static final int MK_CONTROL = (int)8L;
    /**
     * {@snippet lang=c :
     * #define MK_CONTROL 8
     * }
     */
    public static int MK_CONTROL() {
        return MK_CONTROL;
    }
    private static final int MK_MBUTTON = (int)16L;
    /**
     * {@snippet lang=c :
     * #define MK_MBUTTON 16
     * }
     */
    public static int MK_MBUTTON() {
        return MK_MBUTTON;
    }
    private static final int MK_XBUTTON1 = (int)32L;
    /**
     * {@snippet lang=c :
     * #define MK_XBUTTON1 32
     * }
     */
    public static int MK_XBUTTON1() {
        return MK_XBUTTON1;
    }
    private static final int MK_XBUTTON2 = (int)64L;
    /**
     * {@snippet lang=c :
     * #define MK_XBUTTON2 64
     * }
     */
    public static int MK_XBUTTON2() {
        return MK_XBUTTON2;
    }
    private static final int TME_HOVER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TME_HOVER 1
     * }
     */
    public static int TME_HOVER() {
        return TME_HOVER;
    }
    private static final int TME_LEAVE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TME_LEAVE 2
     * }
     */
    public static int TME_LEAVE() {
        return TME_LEAVE;
    }
    private static final int TME_NONCLIENT = (int)16L;
    /**
     * {@snippet lang=c :
     * #define TME_NONCLIENT 16
     * }
     */
    public static int TME_NONCLIENT() {
        return TME_NONCLIENT;
    }
    private static final int TME_QUERY = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define TME_QUERY 1073741824
     * }
     */
    public static int TME_QUERY() {
        return TME_QUERY;
    }
    private static final int WS_EX_LAYERED = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define WS_EX_LAYERED 524288
     * }
     */
    public static int WS_EX_LAYERED() {
        return WS_EX_LAYERED;
    }
    private static final int CS_VREDRAW = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CS_VREDRAW 1
     * }
     */
    public static int CS_VREDRAW() {
        return CS_VREDRAW;
    }
    private static final int CS_HREDRAW = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CS_HREDRAW 2
     * }
     */
    public static int CS_HREDRAW() {
        return CS_HREDRAW;
    }
    private static final int CS_DBLCLKS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CS_DBLCLKS 8
     * }
     */
    public static int CS_DBLCLKS() {
        return CS_DBLCLKS;
    }
    private static final int CS_OWNDC = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CS_OWNDC 32
     * }
     */
    public static int CS_OWNDC() {
        return CS_OWNDC;
    }
    private static final int CS_CLASSDC = (int)64L;
    /**
     * {@snippet lang=c :
     * #define CS_CLASSDC 64
     * }
     */
    public static int CS_CLASSDC() {
        return CS_CLASSDC;
    }
    private static final int CS_PARENTDC = (int)128L;
    /**
     * {@snippet lang=c :
     * #define CS_PARENTDC 128
     * }
     */
    public static int CS_PARENTDC() {
        return CS_PARENTDC;
    }
    private static final int CS_NOCLOSE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define CS_NOCLOSE 512
     * }
     */
    public static int CS_NOCLOSE() {
        return CS_NOCLOSE;
    }
    private static final int CS_SAVEBITS = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define CS_SAVEBITS 2048
     * }
     */
    public static int CS_SAVEBITS() {
        return CS_SAVEBITS;
    }
    private static final int CS_BYTEALIGNCLIENT = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define CS_BYTEALIGNCLIENT 4096
     * }
     */
    public static int CS_BYTEALIGNCLIENT() {
        return CS_BYTEALIGNCLIENT;
    }
    private static final int CS_BYTEALIGNWINDOW = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define CS_BYTEALIGNWINDOW 8192
     * }
     */
    public static int CS_BYTEALIGNWINDOW() {
        return CS_BYTEALIGNWINDOW;
    }
    private static final int CS_GLOBALCLASS = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define CS_GLOBALCLASS 16384
     * }
     */
    public static int CS_GLOBALCLASS() {
        return CS_GLOBALCLASS;
    }
    private static final int CS_IME = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define CS_IME 65536
     * }
     */
    public static int CS_IME() {
        return CS_IME;
    }
    private static final int CS_DROPSHADOW = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define CS_DROPSHADOW 131072
     * }
     */
    public static int CS_DROPSHADOW() {
        return CS_DROPSHADOW;
    }
    private static final int BDR_RAISEDOUTER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define BDR_RAISEDOUTER 1
     * }
     */
    public static int BDR_RAISEDOUTER() {
        return BDR_RAISEDOUTER;
    }
    private static final int BDR_SUNKENOUTER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define BDR_SUNKENOUTER 2
     * }
     */
    public static int BDR_SUNKENOUTER() {
        return BDR_SUNKENOUTER;
    }
    private static final int BDR_RAISEDINNER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define BDR_RAISEDINNER 4
     * }
     */
    public static int BDR_RAISEDINNER() {
        return BDR_RAISEDINNER;
    }
    private static final int BDR_SUNKENINNER = (int)8L;
    /**
     * {@snippet lang=c :
     * #define BDR_SUNKENINNER 8
     * }
     */
    public static int BDR_SUNKENINNER() {
        return BDR_SUNKENINNER;
    }
    private static final int BF_LEFT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define BF_LEFT 1
     * }
     */
    public static int BF_LEFT() {
        return BF_LEFT;
    }
    private static final int BF_TOP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define BF_TOP 2
     * }
     */
    public static int BF_TOP() {
        return BF_TOP;
    }
    private static final int BF_RIGHT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define BF_RIGHT 4
     * }
     */
    public static int BF_RIGHT() {
        return BF_RIGHT;
    }
    private static final int BF_BOTTOM = (int)8L;
    /**
     * {@snippet lang=c :
     * #define BF_BOTTOM 8
     * }
     */
    public static int BF_BOTTOM() {
        return BF_BOTTOM;
    }
    private static final int BF_DIAGONAL = (int)16L;
    /**
     * {@snippet lang=c :
     * #define BF_DIAGONAL 16
     * }
     */
    public static int BF_DIAGONAL() {
        return BF_DIAGONAL;
    }
    private static final int BF_MIDDLE = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define BF_MIDDLE 2048
     * }
     */
    public static int BF_MIDDLE() {
        return BF_MIDDLE;
    }
    private static final int BF_SOFT = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define BF_SOFT 4096
     * }
     */
    public static int BF_SOFT() {
        return BF_SOFT;
    }
    private static final int BF_ADJUST = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define BF_ADJUST 8192
     * }
     */
    public static int BF_ADJUST() {
        return BF_ADJUST;
    }
    private static final int BF_FLAT = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define BF_FLAT 16384
     * }
     */
    public static int BF_FLAT() {
        return BF_FLAT;
    }
    private static final int BF_MONO = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define BF_MONO 32768
     * }
     */
    public static int BF_MONO() {
        return BF_MONO;
    }
    private static final int DFC_CAPTION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DFC_CAPTION 1
     * }
     */
    public static int DFC_CAPTION() {
        return DFC_CAPTION;
    }
    private static final int DFC_MENU = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DFC_MENU 2
     * }
     */
    public static int DFC_MENU() {
        return DFC_MENU;
    }
    private static final int DFC_SCROLL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DFC_SCROLL 3
     * }
     */
    public static int DFC_SCROLL() {
        return DFC_SCROLL;
    }
    private static final int DFC_BUTTON = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DFC_BUTTON 4
     * }
     */
    public static int DFC_BUTTON() {
        return DFC_BUTTON;
    }
    private static final int DFC_POPUPMENU = (int)5L;
    /**
     * {@snippet lang=c :
     * #define DFC_POPUPMENU 5
     * }
     */
    public static int DFC_POPUPMENU() {
        return DFC_POPUPMENU;
    }
    private static final int DFCS_CAPTIONCLOSE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DFCS_CAPTIONCLOSE 0
     * }
     */
    public static int DFCS_CAPTIONCLOSE() {
        return DFCS_CAPTIONCLOSE;
    }
    private static final int DFCS_CAPTIONMIN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DFCS_CAPTIONMIN 1
     * }
     */
    public static int DFCS_CAPTIONMIN() {
        return DFCS_CAPTIONMIN;
    }
    private static final int DFCS_CAPTIONMAX = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DFCS_CAPTIONMAX 2
     * }
     */
    public static int DFCS_CAPTIONMAX() {
        return DFCS_CAPTIONMAX;
    }
    private static final int DFCS_CAPTIONRESTORE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DFCS_CAPTIONRESTORE 3
     * }
     */
    public static int DFCS_CAPTIONRESTORE() {
        return DFCS_CAPTIONRESTORE;
    }
    private static final int DFCS_CAPTIONHELP = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DFCS_CAPTIONHELP 4
     * }
     */
    public static int DFCS_CAPTIONHELP() {
        return DFCS_CAPTIONHELP;
    }
    private static final int DFCS_MENUARROW = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DFCS_MENUARROW 0
     * }
     */
    public static int DFCS_MENUARROW() {
        return DFCS_MENUARROW;
    }
    private static final int DFCS_MENUCHECK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DFCS_MENUCHECK 1
     * }
     */
    public static int DFCS_MENUCHECK() {
        return DFCS_MENUCHECK;
    }
    private static final int DFCS_MENUBULLET = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DFCS_MENUBULLET 2
     * }
     */
    public static int DFCS_MENUBULLET() {
        return DFCS_MENUBULLET;
    }
    private static final int DFCS_MENUARROWRIGHT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DFCS_MENUARROWRIGHT 4
     * }
     */
    public static int DFCS_MENUARROWRIGHT() {
        return DFCS_MENUARROWRIGHT;
    }
    private static final int DFCS_SCROLLUP = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DFCS_SCROLLUP 0
     * }
     */
    public static int DFCS_SCROLLUP() {
        return DFCS_SCROLLUP;
    }
    private static final int DFCS_SCROLLDOWN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DFCS_SCROLLDOWN 1
     * }
     */
    public static int DFCS_SCROLLDOWN() {
        return DFCS_SCROLLDOWN;
    }
    private static final int DFCS_SCROLLLEFT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DFCS_SCROLLLEFT 2
     * }
     */
    public static int DFCS_SCROLLLEFT() {
        return DFCS_SCROLLLEFT;
    }
    private static final int DFCS_SCROLLRIGHT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DFCS_SCROLLRIGHT 3
     * }
     */
    public static int DFCS_SCROLLRIGHT() {
        return DFCS_SCROLLRIGHT;
    }
    private static final int DFCS_SCROLLCOMBOBOX = (int)5L;
    /**
     * {@snippet lang=c :
     * #define DFCS_SCROLLCOMBOBOX 5
     * }
     */
    public static int DFCS_SCROLLCOMBOBOX() {
        return DFCS_SCROLLCOMBOBOX;
    }
    private static final int DFCS_SCROLLSIZEGRIP = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DFCS_SCROLLSIZEGRIP 8
     * }
     */
    public static int DFCS_SCROLLSIZEGRIP() {
        return DFCS_SCROLLSIZEGRIP;
    }
    private static final int DFCS_SCROLLSIZEGRIPRIGHT = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DFCS_SCROLLSIZEGRIPRIGHT 16
     * }
     */
    public static int DFCS_SCROLLSIZEGRIPRIGHT() {
        return DFCS_SCROLLSIZEGRIPRIGHT;
    }
    private static final int DFCS_BUTTONCHECK = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DFCS_BUTTONCHECK 0
     * }
     */
    public static int DFCS_BUTTONCHECK() {
        return DFCS_BUTTONCHECK;
    }
    private static final int DFCS_BUTTONRADIOIMAGE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DFCS_BUTTONRADIOIMAGE 1
     * }
     */
    public static int DFCS_BUTTONRADIOIMAGE() {
        return DFCS_BUTTONRADIOIMAGE;
    }
    private static final int DFCS_BUTTONRADIOMASK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DFCS_BUTTONRADIOMASK 2
     * }
     */
    public static int DFCS_BUTTONRADIOMASK() {
        return DFCS_BUTTONRADIOMASK;
    }
    private static final int DFCS_BUTTONRADIO = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DFCS_BUTTONRADIO 4
     * }
     */
    public static int DFCS_BUTTONRADIO() {
        return DFCS_BUTTONRADIO;
    }
    private static final int DFCS_BUTTON3STATE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DFCS_BUTTON3STATE 8
     * }
     */
    public static int DFCS_BUTTON3STATE() {
        return DFCS_BUTTON3STATE;
    }
    private static final int DFCS_BUTTONPUSH = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DFCS_BUTTONPUSH 16
     * }
     */
    public static int DFCS_BUTTONPUSH() {
        return DFCS_BUTTONPUSH;
    }
    private static final int DFCS_INACTIVE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define DFCS_INACTIVE 256
     * }
     */
    public static int DFCS_INACTIVE() {
        return DFCS_INACTIVE;
    }
    private static final int DFCS_PUSHED = (int)512L;
    /**
     * {@snippet lang=c :
     * #define DFCS_PUSHED 512
     * }
     */
    public static int DFCS_PUSHED() {
        return DFCS_PUSHED;
    }
    private static final int DFCS_CHECKED = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define DFCS_CHECKED 1024
     * }
     */
    public static int DFCS_CHECKED() {
        return DFCS_CHECKED;
    }
    private static final int DFCS_TRANSPARENT = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define DFCS_TRANSPARENT 2048
     * }
     */
    public static int DFCS_TRANSPARENT() {
        return DFCS_TRANSPARENT;
    }
    private static final int DFCS_HOT = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define DFCS_HOT 4096
     * }
     */
    public static int DFCS_HOT() {
        return DFCS_HOT;
    }
    private static final int DFCS_ADJUSTRECT = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define DFCS_ADJUSTRECT 8192
     * }
     */
    public static int DFCS_ADJUSTRECT() {
        return DFCS_ADJUSTRECT;
    }
    private static final int DFCS_FLAT = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define DFCS_FLAT 16384
     * }
     */
    public static int DFCS_FLAT() {
        return DFCS_FLAT;
    }
    private static final int DFCS_MONO = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define DFCS_MONO 32768
     * }
     */
    public static int DFCS_MONO() {
        return DFCS_MONO;
    }
    private static final int DC_ACTIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DC_ACTIVE 1
     * }
     */
    public static int DC_ACTIVE() {
        return DC_ACTIVE;
    }
    private static final int DC_SMALLCAP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DC_SMALLCAP 2
     * }
     */
    public static int DC_SMALLCAP() {
        return DC_SMALLCAP;
    }
    private static final int DC_ICON = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DC_ICON 4
     * }
     */
    public static int DC_ICON() {
        return DC_ICON;
    }
    private static final int DC_TEXT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DC_TEXT 8
     * }
     */
    public static int DC_TEXT() {
        return DC_TEXT;
    }
    private static final int DC_INBUTTON = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DC_INBUTTON 16
     * }
     */
    public static int DC_INBUTTON() {
        return DC_INBUTTON;
    }
    private static final int DC_GRADIENT = (int)32L;
    /**
     * {@snippet lang=c :
     * #define DC_GRADIENT 32
     * }
     */
    public static int DC_GRADIENT() {
        return DC_GRADIENT;
    }
    private static final int DC_BUTTONS = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define DC_BUTTONS 4096
     * }
     */
    public static int DC_BUTTONS() {
        return DC_BUTTONS;
    }
    private static final int IDANI_OPEN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define IDANI_OPEN 1
     * }
     */
    public static int IDANI_OPEN() {
        return IDANI_OPEN;
    }
    private static final int IDANI_CAPTION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define IDANI_CAPTION 3
     * }
     */
    public static int IDANI_CAPTION() {
        return IDANI_CAPTION;
    }
    private static final int CF_TEXT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CF_TEXT 1
     * }
     */
    public static int CF_TEXT() {
        return CF_TEXT;
    }
    private static final int CF_BITMAP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CF_BITMAP 2
     * }
     */
    public static int CF_BITMAP() {
        return CF_BITMAP;
    }
    private static final int CF_METAFILEPICT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CF_METAFILEPICT 3
     * }
     */
    public static int CF_METAFILEPICT() {
        return CF_METAFILEPICT;
    }
    private static final int CF_SYLK = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CF_SYLK 4
     * }
     */
    public static int CF_SYLK() {
        return CF_SYLK;
    }
    private static final int CF_DIF = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CF_DIF 5
     * }
     */
    public static int CF_DIF() {
        return CF_DIF;
    }
    private static final int CF_TIFF = (int)6L;
    /**
     * {@snippet lang=c :
     * #define CF_TIFF 6
     * }
     */
    public static int CF_TIFF() {
        return CF_TIFF;
    }
    private static final int CF_OEMTEXT = (int)7L;
    /**
     * {@snippet lang=c :
     * #define CF_OEMTEXT 7
     * }
     */
    public static int CF_OEMTEXT() {
        return CF_OEMTEXT;
    }
    private static final int CF_DIB = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CF_DIB 8
     * }
     */
    public static int CF_DIB() {
        return CF_DIB;
    }
    private static final int CF_PALETTE = (int)9L;
    /**
     * {@snippet lang=c :
     * #define CF_PALETTE 9
     * }
     */
    public static int CF_PALETTE() {
        return CF_PALETTE;
    }
    private static final int CF_PENDATA = (int)10L;
    /**
     * {@snippet lang=c :
     * #define CF_PENDATA 10
     * }
     */
    public static int CF_PENDATA() {
        return CF_PENDATA;
    }
    private static final int CF_RIFF = (int)11L;
    /**
     * {@snippet lang=c :
     * #define CF_RIFF 11
     * }
     */
    public static int CF_RIFF() {
        return CF_RIFF;
    }
    private static final int CF_WAVE = (int)12L;
    /**
     * {@snippet lang=c :
     * #define CF_WAVE 12
     * }
     */
    public static int CF_WAVE() {
        return CF_WAVE;
    }
    private static final int CF_UNICODETEXT = (int)13L;
    /**
     * {@snippet lang=c :
     * #define CF_UNICODETEXT 13
     * }
     */
    public static int CF_UNICODETEXT() {
        return CF_UNICODETEXT;
    }
    private static final int CF_ENHMETAFILE = (int)14L;
    /**
     * {@snippet lang=c :
     * #define CF_ENHMETAFILE 14
     * }
     */
    public static int CF_ENHMETAFILE() {
        return CF_ENHMETAFILE;
    }
    private static final int CF_HDROP = (int)15L;
    /**
     * {@snippet lang=c :
     * #define CF_HDROP 15
     * }
     */
    public static int CF_HDROP() {
        return CF_HDROP;
    }
    private static final int CF_LOCALE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CF_LOCALE 16
     * }
     */
    public static int CF_LOCALE() {
        return CF_LOCALE;
    }
    private static final int CF_DIBV5 = (int)17L;
    /**
     * {@snippet lang=c :
     * #define CF_DIBV5 17
     * }
     */
    public static int CF_DIBV5() {
        return CF_DIBV5;
    }
    private static final int CF_MAX = (int)18L;
    /**
     * {@snippet lang=c :
     * #define CF_MAX 18
     * }
     */
    public static int CF_MAX() {
        return CF_MAX;
    }
    private static final int CF_OWNERDISPLAY = (int)128L;
    /**
     * {@snippet lang=c :
     * #define CF_OWNERDISPLAY 128
     * }
     */
    public static int CF_OWNERDISPLAY() {
        return CF_OWNERDISPLAY;
    }
    private static final int CF_DSPTEXT = (int)129L;
    /**
     * {@snippet lang=c :
     * #define CF_DSPTEXT 129
     * }
     */
    public static int CF_DSPTEXT() {
        return CF_DSPTEXT;
    }
    private static final int CF_DSPBITMAP = (int)130L;
    /**
     * {@snippet lang=c :
     * #define CF_DSPBITMAP 130
     * }
     */
    public static int CF_DSPBITMAP() {
        return CF_DSPBITMAP;
    }
    private static final int CF_DSPMETAFILEPICT = (int)131L;
    /**
     * {@snippet lang=c :
     * #define CF_DSPMETAFILEPICT 131
     * }
     */
    public static int CF_DSPMETAFILEPICT() {
        return CF_DSPMETAFILEPICT;
    }
    private static final int CF_DSPENHMETAFILE = (int)142L;
    /**
     * {@snippet lang=c :
     * #define CF_DSPENHMETAFILE 142
     * }
     */
    public static int CF_DSPENHMETAFILE() {
        return CF_DSPENHMETAFILE;
    }
    private static final int CF_PRIVATEFIRST = (int)512L;
    /**
     * {@snippet lang=c :
     * #define CF_PRIVATEFIRST 512
     * }
     */
    public static int CF_PRIVATEFIRST() {
        return CF_PRIVATEFIRST;
    }
    private static final int CF_PRIVATELAST = (int)767L;
    /**
     * {@snippet lang=c :
     * #define CF_PRIVATELAST 767
     * }
     */
    public static int CF_PRIVATELAST() {
        return CF_PRIVATELAST;
    }
    private static final int CF_GDIOBJFIRST = (int)768L;
    /**
     * {@snippet lang=c :
     * #define CF_GDIOBJFIRST 768
     * }
     */
    public static int CF_GDIOBJFIRST() {
        return CF_GDIOBJFIRST;
    }
    private static final int CF_GDIOBJLAST = (int)1023L;
    /**
     * {@snippet lang=c :
     * #define CF_GDIOBJLAST 1023
     * }
     */
    public static int CF_GDIOBJLAST() {
        return CF_GDIOBJLAST;
    }
    private static final int FNOINVERT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FNOINVERT 2
     * }
     */
    public static int FNOINVERT() {
        return FNOINVERT;
    }
    private static final int FSHIFT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define FSHIFT 4
     * }
     */
    public static int FSHIFT() {
        return FSHIFT;
    }
    private static final int FCONTROL = (int)8L;
    /**
     * {@snippet lang=c :
     * #define FCONTROL 8
     * }
     */
    public static int FCONTROL() {
        return FCONTROL;
    }
    private static final int FALT = (int)16L;
    /**
     * {@snippet lang=c :
     * #define FALT 16
     * }
     */
    public static int FALT() {
        return FALT;
    }
    private static final int WPF_SETMINPOSITION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WPF_SETMINPOSITION 1
     * }
     */
    public static int WPF_SETMINPOSITION() {
        return WPF_SETMINPOSITION;
    }
    private static final int WPF_RESTORETOMAXIMIZED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WPF_RESTORETOMAXIMIZED 2
     * }
     */
    public static int WPF_RESTORETOMAXIMIZED() {
        return WPF_RESTORETOMAXIMIZED;
    }
    private static final int WPF_ASYNCWINDOWPLACEMENT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WPF_ASYNCWINDOWPLACEMENT 4
     * }
     */
    public static int WPF_ASYNCWINDOWPLACEMENT() {
        return WPF_ASYNCWINDOWPLACEMENT;
    }
    private static final int ODT_MENU = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ODT_MENU 1
     * }
     */
    public static int ODT_MENU() {
        return ODT_MENU;
    }
    private static final int ODT_LISTBOX = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ODT_LISTBOX 2
     * }
     */
    public static int ODT_LISTBOX() {
        return ODT_LISTBOX;
    }
    private static final int ODT_COMBOBOX = (int)3L;
    /**
     * {@snippet lang=c :
     * #define ODT_COMBOBOX 3
     * }
     */
    public static int ODT_COMBOBOX() {
        return ODT_COMBOBOX;
    }
    private static final int ODT_BUTTON = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ODT_BUTTON 4
     * }
     */
    public static int ODT_BUTTON() {
        return ODT_BUTTON;
    }
    private static final int ODT_STATIC = (int)5L;
    /**
     * {@snippet lang=c :
     * #define ODT_STATIC 5
     * }
     */
    public static int ODT_STATIC() {
        return ODT_STATIC;
    }
    private static final int ODA_DRAWENTIRE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ODA_DRAWENTIRE 1
     * }
     */
    public static int ODA_DRAWENTIRE() {
        return ODA_DRAWENTIRE;
    }
    private static final int ODA_SELECT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ODA_SELECT 2
     * }
     */
    public static int ODA_SELECT() {
        return ODA_SELECT;
    }
    private static final int ODA_FOCUS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ODA_FOCUS 4
     * }
     */
    public static int ODA_FOCUS() {
        return ODA_FOCUS;
    }
    private static final int ODS_SELECTED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ODS_SELECTED 1
     * }
     */
    public static int ODS_SELECTED() {
        return ODS_SELECTED;
    }
    private static final int ODS_GRAYED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ODS_GRAYED 2
     * }
     */
    public static int ODS_GRAYED() {
        return ODS_GRAYED;
    }
    private static final int ODS_DISABLED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ODS_DISABLED 4
     * }
     */
    public static int ODS_DISABLED() {
        return ODS_DISABLED;
    }
    private static final int ODS_CHECKED = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ODS_CHECKED 8
     * }
     */
    public static int ODS_CHECKED() {
        return ODS_CHECKED;
    }
    private static final int ODS_FOCUS = (int)16L;
    /**
     * {@snippet lang=c :
     * #define ODS_FOCUS 16
     * }
     */
    public static int ODS_FOCUS() {
        return ODS_FOCUS;
    }
    private static final int ODS_DEFAULT = (int)32L;
    /**
     * {@snippet lang=c :
     * #define ODS_DEFAULT 32
     * }
     */
    public static int ODS_DEFAULT() {
        return ODS_DEFAULT;
    }
    private static final int ODS_COMBOBOXEDIT = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define ODS_COMBOBOXEDIT 4096
     * }
     */
    public static int ODS_COMBOBOXEDIT() {
        return ODS_COMBOBOXEDIT;
    }
    private static final int ODS_HOTLIGHT = (int)64L;
    /**
     * {@snippet lang=c :
     * #define ODS_HOTLIGHT 64
     * }
     */
    public static int ODS_HOTLIGHT() {
        return ODS_HOTLIGHT;
    }
    private static final int ODS_INACTIVE = (int)128L;
    /**
     * {@snippet lang=c :
     * #define ODS_INACTIVE 128
     * }
     */
    public static int ODS_INACTIVE() {
        return ODS_INACTIVE;
    }
    private static final int ODS_NOACCEL = (int)256L;
    /**
     * {@snippet lang=c :
     * #define ODS_NOACCEL 256
     * }
     */
    public static int ODS_NOACCEL() {
        return ODS_NOACCEL;
    }
    private static final int ODS_NOFOCUSRECT = (int)512L;
    /**
     * {@snippet lang=c :
     * #define ODS_NOFOCUSRECT 512
     * }
     */
    public static int ODS_NOFOCUSRECT() {
        return ODS_NOFOCUSRECT;
    }
    private static final int PM_NOREMOVE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PM_NOREMOVE 0
     * }
     */
    public static int PM_NOREMOVE() {
        return PM_NOREMOVE;
    }
    private static final int PM_REMOVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PM_REMOVE 1
     * }
     */
    public static int PM_REMOVE() {
        return PM_REMOVE;
    }
    private static final int PM_NOYIELD = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PM_NOYIELD 2
     * }
     */
    public static int PM_NOYIELD() {
        return PM_NOYIELD;
    }
    private static final int MOD_ALT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MOD_ALT 1
     * }
     */
    public static int MOD_ALT() {
        return MOD_ALT;
    }
    private static final int MOD_CONTROL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MOD_CONTROL 2
     * }
     */
    public static int MOD_CONTROL() {
        return MOD_CONTROL;
    }
    private static final int MOD_SHIFT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MOD_SHIFT 4
     * }
     */
    public static int MOD_SHIFT() {
        return MOD_SHIFT;
    }
    private static final int MOD_WIN = (int)8L;
    /**
     * {@snippet lang=c :
     * #define MOD_WIN 8
     * }
     */
    public static int MOD_WIN() {
        return MOD_WIN;
    }
    private static final int MOD_NOREPEAT = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define MOD_NOREPEAT 16384
     * }
     */
    public static int MOD_NOREPEAT() {
        return MOD_NOREPEAT;
    }
    private static final int ENDSESSION_CLOSEAPP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ENDSESSION_CLOSEAPP 1
     * }
     */
    public static int ENDSESSION_CLOSEAPP() {
        return ENDSESSION_CLOSEAPP;
    }
    private static final int ENDSESSION_CRITICAL = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define ENDSESSION_CRITICAL 1073741824
     * }
     */
    public static int ENDSESSION_CRITICAL() {
        return ENDSESSION_CRITICAL;
    }
    private static final int EWX_LOGOFF = (int)0L;
    /**
     * {@snippet lang=c :
     * #define EWX_LOGOFF 0
     * }
     */
    public static int EWX_LOGOFF() {
        return EWX_LOGOFF;
    }
    private static final int EWX_SHUTDOWN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EWX_SHUTDOWN 1
     * }
     */
    public static int EWX_SHUTDOWN() {
        return EWX_SHUTDOWN;
    }
    private static final int EWX_REBOOT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EWX_REBOOT 2
     * }
     */
    public static int EWX_REBOOT() {
        return EWX_REBOOT;
    }
    private static final int EWX_FORCE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define EWX_FORCE 4
     * }
     */
    public static int EWX_FORCE() {
        return EWX_FORCE;
    }
    private static final int EWX_POWEROFF = (int)8L;
    /**
     * {@snippet lang=c :
     * #define EWX_POWEROFF 8
     * }
     */
    public static int EWX_POWEROFF() {
        return EWX_POWEROFF;
    }
    private static final int EWX_FORCEIFHUNG = (int)16L;
    /**
     * {@snippet lang=c :
     * #define EWX_FORCEIFHUNG 16
     * }
     */
    public static int EWX_FORCEIFHUNG() {
        return EWX_FORCEIFHUNG;
    }
    private static final int EWX_QUICKRESOLVE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define EWX_QUICKRESOLVE 32
     * }
     */
    public static int EWX_QUICKRESOLVE() {
        return EWX_QUICKRESOLVE;
    }
    private static final int EWX_RESTARTAPPS = (int)64L;
    /**
     * {@snippet lang=c :
     * #define EWX_RESTARTAPPS 64
     * }
     */
    public static int EWX_RESTARTAPPS() {
        return EWX_RESTARTAPPS;
    }
    private static final int EWX_HYBRID_SHUTDOWN = (int)4194304L;
    /**
     * {@snippet lang=c :
     * #define EWX_HYBRID_SHUTDOWN 4194304
     * }
     */
    public static int EWX_HYBRID_SHUTDOWN() {
        return EWX_HYBRID_SHUTDOWN;
    }
    private static final int EWX_BOOTOPTIONS = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define EWX_BOOTOPTIONS 16777216
     * }
     */
    public static int EWX_BOOTOPTIONS() {
        return EWX_BOOTOPTIONS;
    }
    private static final int EWX_ARSO = (int)67108864L;
    /**
     * {@snippet lang=c :
     * #define EWX_ARSO 67108864
     * }
     */
    public static int EWX_ARSO() {
        return EWX_ARSO;
    }
    private static final int BSM_ALLCOMPONENTS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define BSM_ALLCOMPONENTS 0
     * }
     */
    public static int BSM_ALLCOMPONENTS() {
        return BSM_ALLCOMPONENTS;
    }
    private static final int BSM_VXDS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define BSM_VXDS 1
     * }
     */
    public static int BSM_VXDS() {
        return BSM_VXDS;
    }
    private static final int BSM_NETDRIVER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define BSM_NETDRIVER 2
     * }
     */
    public static int BSM_NETDRIVER() {
        return BSM_NETDRIVER;
    }
    private static final int BSM_INSTALLABLEDRIVERS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define BSM_INSTALLABLEDRIVERS 4
     * }
     */
    public static int BSM_INSTALLABLEDRIVERS() {
        return BSM_INSTALLABLEDRIVERS;
    }
    private static final int BSM_APPLICATIONS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define BSM_APPLICATIONS 8
     * }
     */
    public static int BSM_APPLICATIONS() {
        return BSM_APPLICATIONS;
    }
    private static final int BSM_ALLDESKTOPS = (int)16L;
    /**
     * {@snippet lang=c :
     * #define BSM_ALLDESKTOPS 16
     * }
     */
    public static int BSM_ALLDESKTOPS() {
        return BSM_ALLDESKTOPS;
    }
    private static final int BSF_QUERY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define BSF_QUERY 1
     * }
     */
    public static int BSF_QUERY() {
        return BSF_QUERY;
    }
    private static final int BSF_IGNORECURRENTTASK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define BSF_IGNORECURRENTTASK 2
     * }
     */
    public static int BSF_IGNORECURRENTTASK() {
        return BSF_IGNORECURRENTTASK;
    }
    private static final int BSF_FLUSHDISK = (int)4L;
    /**
     * {@snippet lang=c :
     * #define BSF_FLUSHDISK 4
     * }
     */
    public static int BSF_FLUSHDISK() {
        return BSF_FLUSHDISK;
    }
    private static final int BSF_NOHANG = (int)8L;
    /**
     * {@snippet lang=c :
     * #define BSF_NOHANG 8
     * }
     */
    public static int BSF_NOHANG() {
        return BSF_NOHANG;
    }
    private static final int BSF_POSTMESSAGE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define BSF_POSTMESSAGE 16
     * }
     */
    public static int BSF_POSTMESSAGE() {
        return BSF_POSTMESSAGE;
    }
    private static final int BSF_FORCEIFHUNG = (int)32L;
    /**
     * {@snippet lang=c :
     * #define BSF_FORCEIFHUNG 32
     * }
     */
    public static int BSF_FORCEIFHUNG() {
        return BSF_FORCEIFHUNG;
    }
    private static final int BSF_NOTIMEOUTIFNOTHUNG = (int)64L;
    /**
     * {@snippet lang=c :
     * #define BSF_NOTIMEOUTIFNOTHUNG 64
     * }
     */
    public static int BSF_NOTIMEOUTIFNOTHUNG() {
        return BSF_NOTIMEOUTIFNOTHUNG;
    }
    private static final int BSF_ALLOWSFW = (int)128L;
    /**
     * {@snippet lang=c :
     * #define BSF_ALLOWSFW 128
     * }
     */
    public static int BSF_ALLOWSFW() {
        return BSF_ALLOWSFW;
    }
    private static final int BSF_SENDNOTIFYMESSAGE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define BSF_SENDNOTIFYMESSAGE 256
     * }
     */
    public static int BSF_SENDNOTIFYMESSAGE() {
        return BSF_SENDNOTIFYMESSAGE;
    }
    private static final int BSF_RETURNHDESK = (int)512L;
    /**
     * {@snippet lang=c :
     * #define BSF_RETURNHDESK 512
     * }
     */
    public static int BSF_RETURNHDESK() {
        return BSF_RETURNHDESK;
    }
    private static final int BSF_LUID = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define BSF_LUID 1024
     * }
     */
    public static int BSF_LUID() {
        return BSF_LUID;
    }
    private static final int BROADCAST_QUERY_DENY = (int)1112363332L;
    /**
     * {@snippet lang=c :
     * #define BROADCAST_QUERY_DENY 1112363332
     * }
     */
    public static int BROADCAST_QUERY_DENY() {
        return BROADCAST_QUERY_DENY;
    }
    private static final int DEVICE_NOTIFY_WINDOW_HANDLE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_NOTIFY_WINDOW_HANDLE 0
     * }
     */
    public static int DEVICE_NOTIFY_WINDOW_HANDLE() {
        return DEVICE_NOTIFY_WINDOW_HANDLE;
    }
    private static final int DEVICE_NOTIFY_SERVICE_HANDLE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_NOTIFY_SERVICE_HANDLE 1
     * }
     */
    public static int DEVICE_NOTIFY_SERVICE_HANDLE() {
        return DEVICE_NOTIFY_SERVICE_HANDLE;
    }
    private static final int DEVICE_NOTIFY_ALL_INTERFACE_CLASSES = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_NOTIFY_ALL_INTERFACE_CLASSES 4
     * }
     */
    public static int DEVICE_NOTIFY_ALL_INTERFACE_CLASSES() {
        return DEVICE_NOTIFY_ALL_INTERFACE_CLASSES;
    }
    private static final int ISMEX_NOSEND = (int)0L;
    /**
     * {@snippet lang=c :
     * #define ISMEX_NOSEND 0
     * }
     */
    public static int ISMEX_NOSEND() {
        return ISMEX_NOSEND;
    }
    private static final int ISMEX_SEND = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ISMEX_SEND 1
     * }
     */
    public static int ISMEX_SEND() {
        return ISMEX_SEND;
    }
    private static final int ISMEX_NOTIFY = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ISMEX_NOTIFY 2
     * }
     */
    public static int ISMEX_NOTIFY() {
        return ISMEX_NOTIFY;
    }
    private static final int ISMEX_CALLBACK = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ISMEX_CALLBACK 4
     * }
     */
    public static int ISMEX_CALLBACK() {
        return ISMEX_CALLBACK;
    }
    private static final int ISMEX_REPLIED = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ISMEX_REPLIED 8
     * }
     */
    public static int ISMEX_REPLIED() {
        return ISMEX_REPLIED;
    }
    private static final int PW_CLIENTONLY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PW_CLIENTONLY 1
     * }
     */
    public static int PW_CLIENTONLY() {
        return PW_CLIENTONLY;
    }
    private static final int PW_RENDERFULLCONTENT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PW_RENDERFULLCONTENT 2
     * }
     */
    public static int PW_RENDERFULLCONTENT() {
        return PW_RENDERFULLCONTENT;
    }
    private static final int LWA_COLORKEY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define LWA_COLORKEY 1
     * }
     */
    public static int LWA_COLORKEY() {
        return LWA_COLORKEY;
    }
    private static final int LWA_ALPHA = (int)2L;
    /**
     * {@snippet lang=c :
     * #define LWA_ALPHA 2
     * }
     */
    public static int LWA_ALPHA() {
        return LWA_ALPHA;
    }
    private static final int ULW_COLORKEY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ULW_COLORKEY 1
     * }
     */
    public static int ULW_COLORKEY() {
        return ULW_COLORKEY;
    }
    private static final int ULW_ALPHA = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ULW_ALPHA 2
     * }
     */
    public static int ULW_ALPHA() {
        return ULW_ALPHA;
    }
    private static final int ULW_OPAQUE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ULW_OPAQUE 4
     * }
     */
    public static int ULW_OPAQUE() {
        return ULW_OPAQUE;
    }
    private static final int ULW_EX_NORESIZE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ULW_EX_NORESIZE 8
     * }
     */
    public static int ULW_EX_NORESIZE() {
        return ULW_EX_NORESIZE;
    }
    private static final int FLASHW_STOP = (int)0L;
    /**
     * {@snippet lang=c :
     * #define FLASHW_STOP 0
     * }
     */
    public static int FLASHW_STOP() {
        return FLASHW_STOP;
    }
    private static final int FLASHW_CAPTION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FLASHW_CAPTION 1
     * }
     */
    public static int FLASHW_CAPTION() {
        return FLASHW_CAPTION;
    }
    private static final int FLASHW_TRAY = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FLASHW_TRAY 2
     * }
     */
    public static int FLASHW_TRAY() {
        return FLASHW_TRAY;
    }
    private static final int FLASHW_TIMER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define FLASHW_TIMER 4
     * }
     */
    public static int FLASHW_TIMER() {
        return FLASHW_TIMER;
    }
    private static final int FLASHW_TIMERNOFG = (int)12L;
    /**
     * {@snippet lang=c :
     * #define FLASHW_TIMERNOFG 12
     * }
     */
    public static int FLASHW_TIMERNOFG() {
        return FLASHW_TIMERNOFG;
    }
    private static final int WDA_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WDA_NONE 0
     * }
     */
    public static int WDA_NONE() {
        return WDA_NONE;
    }
    private static final int WDA_MONITOR = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WDA_MONITOR 1
     * }
     */
    public static int WDA_MONITOR() {
        return WDA_MONITOR;
    }
    private static final int WDA_EXCLUDEFROMCAPTURE = (int)17L;
    /**
     * {@snippet lang=c :
     * #define WDA_EXCLUDEFROMCAPTURE 17
     * }
     */
    public static int WDA_EXCLUDEFROMCAPTURE() {
        return WDA_EXCLUDEFROMCAPTURE;
    }
    private static final int SWP_NOSIZE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SWP_NOSIZE 1
     * }
     */
    public static int SWP_NOSIZE() {
        return SWP_NOSIZE;
    }
    private static final int SWP_NOMOVE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SWP_NOMOVE 2
     * }
     */
    public static int SWP_NOMOVE() {
        return SWP_NOMOVE;
    }
    private static final int SWP_NOZORDER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SWP_NOZORDER 4
     * }
     */
    public static int SWP_NOZORDER() {
        return SWP_NOZORDER;
    }
    private static final int SWP_NOREDRAW = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SWP_NOREDRAW 8
     * }
     */
    public static int SWP_NOREDRAW() {
        return SWP_NOREDRAW;
    }
    private static final int SWP_NOACTIVATE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SWP_NOACTIVATE 16
     * }
     */
    public static int SWP_NOACTIVATE() {
        return SWP_NOACTIVATE;
    }
    private static final int SWP_FRAMECHANGED = (int)32L;
    /**
     * {@snippet lang=c :
     * #define SWP_FRAMECHANGED 32
     * }
     */
    public static int SWP_FRAMECHANGED() {
        return SWP_FRAMECHANGED;
    }
    private static final int SWP_SHOWWINDOW = (int)64L;
    /**
     * {@snippet lang=c :
     * #define SWP_SHOWWINDOW 64
     * }
     */
    public static int SWP_SHOWWINDOW() {
        return SWP_SHOWWINDOW;
    }
    private static final int SWP_HIDEWINDOW = (int)128L;
    /**
     * {@snippet lang=c :
     * #define SWP_HIDEWINDOW 128
     * }
     */
    public static int SWP_HIDEWINDOW() {
        return SWP_HIDEWINDOW;
    }
    private static final int SWP_NOCOPYBITS = (int)256L;
    /**
     * {@snippet lang=c :
     * #define SWP_NOCOPYBITS 256
     * }
     */
    public static int SWP_NOCOPYBITS() {
        return SWP_NOCOPYBITS;
    }
    private static final int SWP_NOOWNERZORDER = (int)512L;
    /**
     * {@snippet lang=c :
     * #define SWP_NOOWNERZORDER 512
     * }
     */
    public static int SWP_NOOWNERZORDER() {
        return SWP_NOOWNERZORDER;
    }
    private static final int SWP_NOSENDCHANGING = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define SWP_NOSENDCHANGING 1024
     * }
     */
    public static int SWP_NOSENDCHANGING() {
        return SWP_NOSENDCHANGING;
    }
    private static final int SWP_DEFERERASE = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define SWP_DEFERERASE 8192
     * }
     */
    public static int SWP_DEFERERASE() {
        return SWP_DEFERERASE;
    }
    private static final int SWP_ASYNCWINDOWPOS = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define SWP_ASYNCWINDOWPOS 16384
     * }
     */
    public static int SWP_ASYNCWINDOWPOS() {
        return SWP_ASYNCWINDOWPOS;
    }
    private static final int DLGWINDOWEXTRA = (int)30L;
    /**
     * {@snippet lang=c :
     * #define DLGWINDOWEXTRA 30
     * }
     */
    public static int DLGWINDOWEXTRA() {
        return DLGWINDOWEXTRA;
    }
    private static final int KEYEVENTF_EXTENDEDKEY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define KEYEVENTF_EXTENDEDKEY 1
     * }
     */
    public static int KEYEVENTF_EXTENDEDKEY() {
        return KEYEVENTF_EXTENDEDKEY;
    }
    private static final int KEYEVENTF_KEYUP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define KEYEVENTF_KEYUP 2
     * }
     */
    public static int KEYEVENTF_KEYUP() {
        return KEYEVENTF_KEYUP;
    }
    private static final int KEYEVENTF_UNICODE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define KEYEVENTF_UNICODE 4
     * }
     */
    public static int KEYEVENTF_UNICODE() {
        return KEYEVENTF_UNICODE;
    }
    private static final int KEYEVENTF_SCANCODE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define KEYEVENTF_SCANCODE 8
     * }
     */
    public static int KEYEVENTF_SCANCODE() {
        return KEYEVENTF_SCANCODE;
    }
    private static final int MOUSEEVENTF_MOVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_MOVE 1
     * }
     */
    public static int MOUSEEVENTF_MOVE() {
        return MOUSEEVENTF_MOVE;
    }
    private static final int MOUSEEVENTF_LEFTDOWN = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_LEFTDOWN 2
     * }
     */
    public static int MOUSEEVENTF_LEFTDOWN() {
        return MOUSEEVENTF_LEFTDOWN;
    }
    private static final int MOUSEEVENTF_LEFTUP = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_LEFTUP 4
     * }
     */
    public static int MOUSEEVENTF_LEFTUP() {
        return MOUSEEVENTF_LEFTUP;
    }
    private static final int MOUSEEVENTF_RIGHTDOWN = (int)8L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_RIGHTDOWN 8
     * }
     */
    public static int MOUSEEVENTF_RIGHTDOWN() {
        return MOUSEEVENTF_RIGHTDOWN;
    }
    private static final int MOUSEEVENTF_RIGHTUP = (int)16L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_RIGHTUP 16
     * }
     */
    public static int MOUSEEVENTF_RIGHTUP() {
        return MOUSEEVENTF_RIGHTUP;
    }
    private static final int MOUSEEVENTF_MIDDLEDOWN = (int)32L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_MIDDLEDOWN 32
     * }
     */
    public static int MOUSEEVENTF_MIDDLEDOWN() {
        return MOUSEEVENTF_MIDDLEDOWN;
    }
    private static final int MOUSEEVENTF_MIDDLEUP = (int)64L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_MIDDLEUP 64
     * }
     */
    public static int MOUSEEVENTF_MIDDLEUP() {
        return MOUSEEVENTF_MIDDLEUP;
    }
    private static final int MOUSEEVENTF_XDOWN = (int)128L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_XDOWN 128
     * }
     */
    public static int MOUSEEVENTF_XDOWN() {
        return MOUSEEVENTF_XDOWN;
    }
    private static final int MOUSEEVENTF_XUP = (int)256L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_XUP 256
     * }
     */
    public static int MOUSEEVENTF_XUP() {
        return MOUSEEVENTF_XUP;
    }
    private static final int MOUSEEVENTF_WHEEL = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_WHEEL 2048
     * }
     */
    public static int MOUSEEVENTF_WHEEL() {
        return MOUSEEVENTF_WHEEL;
    }
    private static final int MOUSEEVENTF_HWHEEL = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_HWHEEL 4096
     * }
     */
    public static int MOUSEEVENTF_HWHEEL() {
        return MOUSEEVENTF_HWHEEL;
    }
    private static final int MOUSEEVENTF_MOVE_NOCOALESCE = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_MOVE_NOCOALESCE 8192
     * }
     */
    public static int MOUSEEVENTF_MOVE_NOCOALESCE() {
        return MOUSEEVENTF_MOVE_NOCOALESCE;
    }
    private static final int MOUSEEVENTF_VIRTUALDESK = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_VIRTUALDESK 16384
     * }
     */
    public static int MOUSEEVENTF_VIRTUALDESK() {
        return MOUSEEVENTF_VIRTUALDESK;
    }
    private static final int MOUSEEVENTF_ABSOLUTE = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define MOUSEEVENTF_ABSOLUTE 32768
     * }
     */
    public static int MOUSEEVENTF_ABSOLUTE() {
        return MOUSEEVENTF_ABSOLUTE;
    }
    private static final int INPUT_MOUSE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define INPUT_MOUSE 0
     * }
     */
    public static int INPUT_MOUSE() {
        return INPUT_MOUSE;
    }
    private static final int INPUT_KEYBOARD = (int)1L;
    /**
     * {@snippet lang=c :
     * #define INPUT_KEYBOARD 1
     * }
     */
    public static int INPUT_KEYBOARD() {
        return INPUT_KEYBOARD;
    }
    private static final int INPUT_HARDWARE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define INPUT_HARDWARE 2
     * }
     */
    public static int INPUT_HARDWARE() {
        return INPUT_HARDWARE;
    }
    private static final int TOUCHEVENTF_MOVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TOUCHEVENTF_MOVE 1
     * }
     */
    public static int TOUCHEVENTF_MOVE() {
        return TOUCHEVENTF_MOVE;
    }
    private static final int TOUCHEVENTF_DOWN = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TOUCHEVENTF_DOWN 2
     * }
     */
    public static int TOUCHEVENTF_DOWN() {
        return TOUCHEVENTF_DOWN;
    }
    private static final int TOUCHEVENTF_UP = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TOUCHEVENTF_UP 4
     * }
     */
    public static int TOUCHEVENTF_UP() {
        return TOUCHEVENTF_UP;
    }
    private static final int TOUCHEVENTF_INRANGE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define TOUCHEVENTF_INRANGE 8
     * }
     */
    public static int TOUCHEVENTF_INRANGE() {
        return TOUCHEVENTF_INRANGE;
    }
    private static final int TOUCHEVENTF_PRIMARY = (int)16L;
    /**
     * {@snippet lang=c :
     * #define TOUCHEVENTF_PRIMARY 16
     * }
     */
    public static int TOUCHEVENTF_PRIMARY() {
        return TOUCHEVENTF_PRIMARY;
    }
    private static final int TOUCHEVENTF_NOCOALESCE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define TOUCHEVENTF_NOCOALESCE 32
     * }
     */
    public static int TOUCHEVENTF_NOCOALESCE() {
        return TOUCHEVENTF_NOCOALESCE;
    }
    private static final int TOUCHEVENTF_PEN = (int)64L;
    /**
     * {@snippet lang=c :
     * #define TOUCHEVENTF_PEN 64
     * }
     */
    public static int TOUCHEVENTF_PEN() {
        return TOUCHEVENTF_PEN;
    }
    private static final int TOUCHEVENTF_PALM = (int)128L;
    /**
     * {@snippet lang=c :
     * #define TOUCHEVENTF_PALM 128
     * }
     */
    public static int TOUCHEVENTF_PALM() {
        return TOUCHEVENTF_PALM;
    }
    private static final int TOUCHINPUTMASKF_TIMEFROMSYSTEM = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TOUCHINPUTMASKF_TIMEFROMSYSTEM 1
     * }
     */
    public static int TOUCHINPUTMASKF_TIMEFROMSYSTEM() {
        return TOUCHINPUTMASKF_TIMEFROMSYSTEM;
    }
    private static final int TOUCHINPUTMASKF_EXTRAINFO = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TOUCHINPUTMASKF_EXTRAINFO 2
     * }
     */
    public static int TOUCHINPUTMASKF_EXTRAINFO() {
        return TOUCHINPUTMASKF_EXTRAINFO;
    }
    private static final int TOUCHINPUTMASKF_CONTACTAREA = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TOUCHINPUTMASKF_CONTACTAREA 4
     * }
     */
    public static int TOUCHINPUTMASKF_CONTACTAREA() {
        return TOUCHINPUTMASKF_CONTACTAREA;
    }
    private static final int POINTER_FLAG_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_NONE 0
     * }
     */
    public static int POINTER_FLAG_NONE() {
        return POINTER_FLAG_NONE;
    }
    private static final int POINTER_FLAG_NEW = (int)1L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_NEW 1
     * }
     */
    public static int POINTER_FLAG_NEW() {
        return POINTER_FLAG_NEW;
    }
    private static final int POINTER_FLAG_INRANGE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_INRANGE 2
     * }
     */
    public static int POINTER_FLAG_INRANGE() {
        return POINTER_FLAG_INRANGE;
    }
    private static final int POINTER_FLAG_INCONTACT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_INCONTACT 4
     * }
     */
    public static int POINTER_FLAG_INCONTACT() {
        return POINTER_FLAG_INCONTACT;
    }
    private static final int POINTER_FLAG_FIRSTBUTTON = (int)16L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_FIRSTBUTTON 16
     * }
     */
    public static int POINTER_FLAG_FIRSTBUTTON() {
        return POINTER_FLAG_FIRSTBUTTON;
    }
    private static final int POINTER_FLAG_SECONDBUTTON = (int)32L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_SECONDBUTTON 32
     * }
     */
    public static int POINTER_FLAG_SECONDBUTTON() {
        return POINTER_FLAG_SECONDBUTTON;
    }
    private static final int POINTER_FLAG_THIRDBUTTON = (int)64L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_THIRDBUTTON 64
     * }
     */
    public static int POINTER_FLAG_THIRDBUTTON() {
        return POINTER_FLAG_THIRDBUTTON;
    }
    private static final int POINTER_FLAG_FOURTHBUTTON = (int)128L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_FOURTHBUTTON 128
     * }
     */
    public static int POINTER_FLAG_FOURTHBUTTON() {
        return POINTER_FLAG_FOURTHBUTTON;
    }
    private static final int POINTER_FLAG_FIFTHBUTTON = (int)256L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_FIFTHBUTTON 256
     * }
     */
    public static int POINTER_FLAG_FIFTHBUTTON() {
        return POINTER_FLAG_FIFTHBUTTON;
    }
    private static final int POINTER_FLAG_PRIMARY = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_PRIMARY 8192
     * }
     */
    public static int POINTER_FLAG_PRIMARY() {
        return POINTER_FLAG_PRIMARY;
    }
    private static final int POINTER_FLAG_CONFIDENCE = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_CONFIDENCE 16384
     * }
     */
    public static int POINTER_FLAG_CONFIDENCE() {
        return POINTER_FLAG_CONFIDENCE;
    }
    private static final int POINTER_FLAG_CANCELED = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_CANCELED 32768
     * }
     */
    public static int POINTER_FLAG_CANCELED() {
        return POINTER_FLAG_CANCELED;
    }
    private static final int POINTER_FLAG_DOWN = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_DOWN 65536
     * }
     */
    public static int POINTER_FLAG_DOWN() {
        return POINTER_FLAG_DOWN;
    }
    private static final int POINTER_FLAG_UPDATE = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_UPDATE 131072
     * }
     */
    public static int POINTER_FLAG_UPDATE() {
        return POINTER_FLAG_UPDATE;
    }
    private static final int POINTER_FLAG_UP = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_UP 262144
     * }
     */
    public static int POINTER_FLAG_UP() {
        return POINTER_FLAG_UP;
    }
    private static final int POINTER_FLAG_WHEEL = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_WHEEL 524288
     * }
     */
    public static int POINTER_FLAG_WHEEL() {
        return POINTER_FLAG_WHEEL;
    }
    private static final int POINTER_FLAG_HWHEEL = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_HWHEEL 1048576
     * }
     */
    public static int POINTER_FLAG_HWHEEL() {
        return POINTER_FLAG_HWHEEL;
    }
    private static final int POINTER_FLAG_CAPTURECHANGED = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_CAPTURECHANGED 2097152
     * }
     */
    public static int POINTER_FLAG_CAPTURECHANGED() {
        return POINTER_FLAG_CAPTURECHANGED;
    }
    private static final int POINTER_FLAG_HASTRANSFORM = (int)4194304L;
    /**
     * {@snippet lang=c :
     * #define POINTER_FLAG_HASTRANSFORM 4194304
     * }
     */
    public static int POINTER_FLAG_HASTRANSFORM() {
        return POINTER_FLAG_HASTRANSFORM;
    }
    private static final int TOUCH_FLAG_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_FLAG_NONE 0
     * }
     */
    public static int TOUCH_FLAG_NONE() {
        return TOUCH_FLAG_NONE;
    }
    private static final int TOUCH_MASK_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_MASK_NONE 0
     * }
     */
    public static int TOUCH_MASK_NONE() {
        return TOUCH_MASK_NONE;
    }
    private static final int TOUCH_MASK_CONTACTAREA = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_MASK_CONTACTAREA 1
     * }
     */
    public static int TOUCH_MASK_CONTACTAREA() {
        return TOUCH_MASK_CONTACTAREA;
    }
    private static final int TOUCH_MASK_ORIENTATION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_MASK_ORIENTATION 2
     * }
     */
    public static int TOUCH_MASK_ORIENTATION() {
        return TOUCH_MASK_ORIENTATION;
    }
    private static final int TOUCH_MASK_PRESSURE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_MASK_PRESSURE 4
     * }
     */
    public static int TOUCH_MASK_PRESSURE() {
        return TOUCH_MASK_PRESSURE;
    }
    private static final int PEN_FLAG_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PEN_FLAG_NONE 0
     * }
     */
    public static int PEN_FLAG_NONE() {
        return PEN_FLAG_NONE;
    }
    private static final int PEN_FLAG_BARREL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PEN_FLAG_BARREL 1
     * }
     */
    public static int PEN_FLAG_BARREL() {
        return PEN_FLAG_BARREL;
    }
    private static final int PEN_FLAG_INVERTED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PEN_FLAG_INVERTED 2
     * }
     */
    public static int PEN_FLAG_INVERTED() {
        return PEN_FLAG_INVERTED;
    }
    private static final int PEN_FLAG_ERASER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PEN_FLAG_ERASER 4
     * }
     */
    public static int PEN_FLAG_ERASER() {
        return PEN_FLAG_ERASER;
    }
    private static final int PEN_MASK_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PEN_MASK_NONE 0
     * }
     */
    public static int PEN_MASK_NONE() {
        return PEN_MASK_NONE;
    }
    private static final int PEN_MASK_PRESSURE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PEN_MASK_PRESSURE 1
     * }
     */
    public static int PEN_MASK_PRESSURE() {
        return PEN_MASK_PRESSURE;
    }
    private static final int PEN_MASK_ROTATION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PEN_MASK_ROTATION 2
     * }
     */
    public static int PEN_MASK_ROTATION() {
        return PEN_MASK_ROTATION;
    }
    private static final int PEN_MASK_TILT_X = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PEN_MASK_TILT_X 4
     * }
     */
    public static int PEN_MASK_TILT_X() {
        return PEN_MASK_TILT_X;
    }
    private static final int PEN_MASK_TILT_Y = (int)8L;
    /**
     * {@snippet lang=c :
     * #define PEN_MASK_TILT_Y 8
     * }
     */
    public static int PEN_MASK_TILT_Y() {
        return PEN_MASK_TILT_Y;
    }
    private static final int POINTER_MESSAGE_FLAG_NEW = (int)1L;
    /**
     * {@snippet lang=c :
     * #define POINTER_MESSAGE_FLAG_NEW 1
     * }
     */
    public static int POINTER_MESSAGE_FLAG_NEW() {
        return POINTER_MESSAGE_FLAG_NEW;
    }
    private static final int POINTER_MESSAGE_FLAG_INRANGE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define POINTER_MESSAGE_FLAG_INRANGE 2
     * }
     */
    public static int POINTER_MESSAGE_FLAG_INRANGE() {
        return POINTER_MESSAGE_FLAG_INRANGE;
    }
    private static final int POINTER_MESSAGE_FLAG_INCONTACT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define POINTER_MESSAGE_FLAG_INCONTACT 4
     * }
     */
    public static int POINTER_MESSAGE_FLAG_INCONTACT() {
        return POINTER_MESSAGE_FLAG_INCONTACT;
    }
    private static final int POINTER_MESSAGE_FLAG_FIRSTBUTTON = (int)16L;
    /**
     * {@snippet lang=c :
     * #define POINTER_MESSAGE_FLAG_FIRSTBUTTON 16
     * }
     */
    public static int POINTER_MESSAGE_FLAG_FIRSTBUTTON() {
        return POINTER_MESSAGE_FLAG_FIRSTBUTTON;
    }
    private static final int POINTER_MESSAGE_FLAG_SECONDBUTTON = (int)32L;
    /**
     * {@snippet lang=c :
     * #define POINTER_MESSAGE_FLAG_SECONDBUTTON 32
     * }
     */
    public static int POINTER_MESSAGE_FLAG_SECONDBUTTON() {
        return POINTER_MESSAGE_FLAG_SECONDBUTTON;
    }
    private static final int POINTER_MESSAGE_FLAG_THIRDBUTTON = (int)64L;
    /**
     * {@snippet lang=c :
     * #define POINTER_MESSAGE_FLAG_THIRDBUTTON 64
     * }
     */
    public static int POINTER_MESSAGE_FLAG_THIRDBUTTON() {
        return POINTER_MESSAGE_FLAG_THIRDBUTTON;
    }
    private static final int POINTER_MESSAGE_FLAG_FOURTHBUTTON = (int)128L;
    /**
     * {@snippet lang=c :
     * #define POINTER_MESSAGE_FLAG_FOURTHBUTTON 128
     * }
     */
    public static int POINTER_MESSAGE_FLAG_FOURTHBUTTON() {
        return POINTER_MESSAGE_FLAG_FOURTHBUTTON;
    }
    private static final int POINTER_MESSAGE_FLAG_FIFTHBUTTON = (int)256L;
    /**
     * {@snippet lang=c :
     * #define POINTER_MESSAGE_FLAG_FIFTHBUTTON 256
     * }
     */
    public static int POINTER_MESSAGE_FLAG_FIFTHBUTTON() {
        return POINTER_MESSAGE_FLAG_FIFTHBUTTON;
    }
    private static final int POINTER_MESSAGE_FLAG_PRIMARY = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define POINTER_MESSAGE_FLAG_PRIMARY 8192
     * }
     */
    public static int POINTER_MESSAGE_FLAG_PRIMARY() {
        return POINTER_MESSAGE_FLAG_PRIMARY;
    }
    private static final int POINTER_MESSAGE_FLAG_CONFIDENCE = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define POINTER_MESSAGE_FLAG_CONFIDENCE 16384
     * }
     */
    public static int POINTER_MESSAGE_FLAG_CONFIDENCE() {
        return POINTER_MESSAGE_FLAG_CONFIDENCE;
    }
    private static final int POINTER_MESSAGE_FLAG_CANCELED = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define POINTER_MESSAGE_FLAG_CANCELED 32768
     * }
     */
    public static int POINTER_MESSAGE_FLAG_CANCELED() {
        return POINTER_MESSAGE_FLAG_CANCELED;
    }
    private static final int MAX_TOUCH_COUNT = (int)256L;
    /**
     * {@snippet lang=c :
     * #define MAX_TOUCH_COUNT 256
     * }
     */
    public static int MAX_TOUCH_COUNT() {
        return MAX_TOUCH_COUNT;
    }
    private static final int TOUCH_FEEDBACK_DEFAULT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_FEEDBACK_DEFAULT 1
     * }
     */
    public static int TOUCH_FEEDBACK_DEFAULT() {
        return TOUCH_FEEDBACK_DEFAULT;
    }
    private static final int TOUCH_FEEDBACK_INDIRECT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_FEEDBACK_INDIRECT 2
     * }
     */
    public static int TOUCH_FEEDBACK_INDIRECT() {
        return TOUCH_FEEDBACK_INDIRECT;
    }
    private static final int TOUCH_FEEDBACK_NONE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_FEEDBACK_NONE 3
     * }
     */
    public static int TOUCH_FEEDBACK_NONE() {
        return TOUCH_FEEDBACK_NONE;
    }
    private static final int TOUCH_HIT_TESTING_DEFAULT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_HIT_TESTING_DEFAULT 0
     * }
     */
    public static int TOUCH_HIT_TESTING_DEFAULT() {
        return TOUCH_HIT_TESTING_DEFAULT;
    }
    private static final int TOUCH_HIT_TESTING_CLIENT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_HIT_TESTING_CLIENT 1
     * }
     */
    public static int TOUCH_HIT_TESTING_CLIENT() {
        return TOUCH_HIT_TESTING_CLIENT;
    }
    private static final int TOUCH_HIT_TESTING_NONE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_HIT_TESTING_NONE 2
     * }
     */
    public static int TOUCH_HIT_TESTING_NONE() {
        return TOUCH_HIT_TESTING_NONE;
    }
    private static final int TOUCH_HIT_TESTING_PROXIMITY_CLOSEST = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_HIT_TESTING_PROXIMITY_CLOSEST 0
     * }
     */
    public static int TOUCH_HIT_TESTING_PROXIMITY_CLOSEST() {
        return TOUCH_HIT_TESTING_PROXIMITY_CLOSEST;
    }
    private static final int TOUCH_HIT_TESTING_PROXIMITY_FARTHEST = (int)4095L;
    /**
     * {@snippet lang=c :
     * #define TOUCH_HIT_TESTING_PROXIMITY_FARTHEST 4095
     * }
     */
    public static int TOUCH_HIT_TESTING_PROXIMITY_FARTHEST() {
        return TOUCH_HIT_TESTING_PROXIMITY_FARTHEST;
    }
    private static final int GWFS_INCLUDE_ANCESTORS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GWFS_INCLUDE_ANCESTORS 1
     * }
     */
    public static int GWFS_INCLUDE_ANCESTORS() {
        return GWFS_INCLUDE_ANCESTORS;
    }
    private static final int MWMO_WAITALL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MWMO_WAITALL 1
     * }
     */
    public static int MWMO_WAITALL() {
        return MWMO_WAITALL;
    }
    private static final int MWMO_ALERTABLE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MWMO_ALERTABLE 2
     * }
     */
    public static int MWMO_ALERTABLE() {
        return MWMO_ALERTABLE;
    }
    private static final int MWMO_INPUTAVAILABLE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MWMO_INPUTAVAILABLE 4
     * }
     */
    public static int MWMO_INPUTAVAILABLE() {
        return MWMO_INPUTAVAILABLE;
    }
    private static final int QS_KEY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define QS_KEY 1
     * }
     */
    public static int QS_KEY() {
        return QS_KEY;
    }
    private static final int QS_MOUSEMOVE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define QS_MOUSEMOVE 2
     * }
     */
    public static int QS_MOUSEMOVE() {
        return QS_MOUSEMOVE;
    }
    private static final int QS_MOUSEBUTTON = (int)4L;
    /**
     * {@snippet lang=c :
     * #define QS_MOUSEBUTTON 4
     * }
     */
    public static int QS_MOUSEBUTTON() {
        return QS_MOUSEBUTTON;
    }
    private static final int QS_POSTMESSAGE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define QS_POSTMESSAGE 8
     * }
     */
    public static int QS_POSTMESSAGE() {
        return QS_POSTMESSAGE;
    }
    private static final int QS_TIMER = (int)16L;
    /**
     * {@snippet lang=c :
     * #define QS_TIMER 16
     * }
     */
    public static int QS_TIMER() {
        return QS_TIMER;
    }
    private static final int QS_PAINT = (int)32L;
    /**
     * {@snippet lang=c :
     * #define QS_PAINT 32
     * }
     */
    public static int QS_PAINT() {
        return QS_PAINT;
    }
    private static final int QS_SENDMESSAGE = (int)64L;
    /**
     * {@snippet lang=c :
     * #define QS_SENDMESSAGE 64
     * }
     */
    public static int QS_SENDMESSAGE() {
        return QS_SENDMESSAGE;
    }
    private static final int QS_HOTKEY = (int)128L;
    /**
     * {@snippet lang=c :
     * #define QS_HOTKEY 128
     * }
     */
    public static int QS_HOTKEY() {
        return QS_HOTKEY;
    }
    private static final int QS_ALLPOSTMESSAGE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define QS_ALLPOSTMESSAGE 256
     * }
     */
    public static int QS_ALLPOSTMESSAGE() {
        return QS_ALLPOSTMESSAGE;
    }
    private static final int QS_RAWINPUT = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define QS_RAWINPUT 1024
     * }
     */
    public static int QS_RAWINPUT() {
        return QS_RAWINPUT;
    }
    private static final int QS_TOUCH = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define QS_TOUCH 2048
     * }
     */
    public static int QS_TOUCH() {
        return QS_TOUCH;
    }
    private static final int QS_POINTER = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define QS_POINTER 4096
     * }
     */
    public static int QS_POINTER() {
        return QS_POINTER;
    }
    private static final int USER_TIMER_MAXIMUM = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define USER_TIMER_MAXIMUM 2147483647
     * }
     */
    public static int USER_TIMER_MAXIMUM() {
        return USER_TIMER_MAXIMUM;
    }
    private static final int USER_TIMER_MINIMUM = (int)10L;
    /**
     * {@snippet lang=c :
     * #define USER_TIMER_MINIMUM 10
     * }
     */
    public static int USER_TIMER_MINIMUM() {
        return USER_TIMER_MINIMUM;
    }
    private static final int SM_CXSCREEN = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SM_CXSCREEN 0
     * }
     */
    public static int SM_CXSCREEN() {
        return SM_CXSCREEN;
    }
    private static final int SM_CYSCREEN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SM_CYSCREEN 1
     * }
     */
    public static int SM_CYSCREEN() {
        return SM_CYSCREEN;
    }
    private static final int SM_CXVSCROLL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SM_CXVSCROLL 2
     * }
     */
    public static int SM_CXVSCROLL() {
        return SM_CXVSCROLL;
    }
    private static final int SM_CYHSCROLL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SM_CYHSCROLL 3
     * }
     */
    public static int SM_CYHSCROLL() {
        return SM_CYHSCROLL;
    }
    private static final int SM_CYCAPTION = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SM_CYCAPTION 4
     * }
     */
    public static int SM_CYCAPTION() {
        return SM_CYCAPTION;
    }
    private static final int SM_CXBORDER = (int)5L;
    /**
     * {@snippet lang=c :
     * #define SM_CXBORDER 5
     * }
     */
    public static int SM_CXBORDER() {
        return SM_CXBORDER;
    }
    private static final int SM_CYBORDER = (int)6L;
    /**
     * {@snippet lang=c :
     * #define SM_CYBORDER 6
     * }
     */
    public static int SM_CYBORDER() {
        return SM_CYBORDER;
    }
    private static final int SM_CXDLGFRAME = (int)7L;
    /**
     * {@snippet lang=c :
     * #define SM_CXDLGFRAME 7
     * }
     */
    public static int SM_CXDLGFRAME() {
        return SM_CXDLGFRAME;
    }
    private static final int SM_CYDLGFRAME = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SM_CYDLGFRAME 8
     * }
     */
    public static int SM_CYDLGFRAME() {
        return SM_CYDLGFRAME;
    }
    private static final int SM_CYVTHUMB = (int)9L;
    /**
     * {@snippet lang=c :
     * #define SM_CYVTHUMB 9
     * }
     */
    public static int SM_CYVTHUMB() {
        return SM_CYVTHUMB;
    }
    private static final int SM_CXHTHUMB = (int)10L;
    /**
     * {@snippet lang=c :
     * #define SM_CXHTHUMB 10
     * }
     */
    public static int SM_CXHTHUMB() {
        return SM_CXHTHUMB;
    }
    private static final int SM_CXICON = (int)11L;
    /**
     * {@snippet lang=c :
     * #define SM_CXICON 11
     * }
     */
    public static int SM_CXICON() {
        return SM_CXICON;
    }
    private static final int SM_CYICON = (int)12L;
    /**
     * {@snippet lang=c :
     * #define SM_CYICON 12
     * }
     */
    public static int SM_CYICON() {
        return SM_CYICON;
    }
    private static final int SM_CXCURSOR = (int)13L;
    /**
     * {@snippet lang=c :
     * #define SM_CXCURSOR 13
     * }
     */
    public static int SM_CXCURSOR() {
        return SM_CXCURSOR;
    }
    private static final int SM_CYCURSOR = (int)14L;
    /**
     * {@snippet lang=c :
     * #define SM_CYCURSOR 14
     * }
     */
    public static int SM_CYCURSOR() {
        return SM_CYCURSOR;
    }
    private static final int SM_CYMENU = (int)15L;
    /**
     * {@snippet lang=c :
     * #define SM_CYMENU 15
     * }
     */
    public static int SM_CYMENU() {
        return SM_CYMENU;
    }
    private static final int SM_CXFULLSCREEN = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SM_CXFULLSCREEN 16
     * }
     */
    public static int SM_CXFULLSCREEN() {
        return SM_CXFULLSCREEN;
    }
    private static final int SM_CYFULLSCREEN = (int)17L;
    /**
     * {@snippet lang=c :
     * #define SM_CYFULLSCREEN 17
     * }
     */
    public static int SM_CYFULLSCREEN() {
        return SM_CYFULLSCREEN;
    }
    private static final int SM_CYKANJIWINDOW = (int)18L;
    /**
     * {@snippet lang=c :
     * #define SM_CYKANJIWINDOW 18
     * }
     */
    public static int SM_CYKANJIWINDOW() {
        return SM_CYKANJIWINDOW;
    }
    private static final int SM_MOUSEPRESENT = (int)19L;
    /**
     * {@snippet lang=c :
     * #define SM_MOUSEPRESENT 19
     * }
     */
    public static int SM_MOUSEPRESENT() {
        return SM_MOUSEPRESENT;
    }
    private static final int SM_CYVSCROLL = (int)20L;
    /**
     * {@snippet lang=c :
     * #define SM_CYVSCROLL 20
     * }
     */
    public static int SM_CYVSCROLL() {
        return SM_CYVSCROLL;
    }
    private static final int SM_CXHSCROLL = (int)21L;
    /**
     * {@snippet lang=c :
     * #define SM_CXHSCROLL 21
     * }
     */
    public static int SM_CXHSCROLL() {
        return SM_CXHSCROLL;
    }
    private static final int SM_DEBUG = (int)22L;
    /**
     * {@snippet lang=c :
     * #define SM_DEBUG 22
     * }
     */
    public static int SM_DEBUG() {
        return SM_DEBUG;
    }
    private static final int SM_SWAPBUTTON = (int)23L;
    /**
     * {@snippet lang=c :
     * #define SM_SWAPBUTTON 23
     * }
     */
    public static int SM_SWAPBUTTON() {
        return SM_SWAPBUTTON;
    }
    private static final int SM_RESERVED1 = (int)24L;
    /**
     * {@snippet lang=c :
     * #define SM_RESERVED1 24
     * }
     */
    public static int SM_RESERVED1() {
        return SM_RESERVED1;
    }
    private static final int SM_RESERVED2 = (int)25L;
    /**
     * {@snippet lang=c :
     * #define SM_RESERVED2 25
     * }
     */
    public static int SM_RESERVED2() {
        return SM_RESERVED2;
    }
    private static final int SM_RESERVED3 = (int)26L;
    /**
     * {@snippet lang=c :
     * #define SM_RESERVED3 26
     * }
     */
    public static int SM_RESERVED3() {
        return SM_RESERVED3;
    }
    private static final int SM_RESERVED4 = (int)27L;
    /**
     * {@snippet lang=c :
     * #define SM_RESERVED4 27
     * }
     */
    public static int SM_RESERVED4() {
        return SM_RESERVED4;
    }
    private static final int SM_CXMIN = (int)28L;
    /**
     * {@snippet lang=c :
     * #define SM_CXMIN 28
     * }
     */
    public static int SM_CXMIN() {
        return SM_CXMIN;
    }
    private static final int SM_CYMIN = (int)29L;
    /**
     * {@snippet lang=c :
     * #define SM_CYMIN 29
     * }
     */
    public static int SM_CYMIN() {
        return SM_CYMIN;
    }
    private static final int SM_CXSIZE = (int)30L;
    /**
     * {@snippet lang=c :
     * #define SM_CXSIZE 30
     * }
     */
    public static int SM_CXSIZE() {
        return SM_CXSIZE;
    }
    private static final int SM_CYSIZE = (int)31L;
    /**
     * {@snippet lang=c :
     * #define SM_CYSIZE 31
     * }
     */
    public static int SM_CYSIZE() {
        return SM_CYSIZE;
    }
    private static final int SM_CXFRAME = (int)32L;
    /**
     * {@snippet lang=c :
     * #define SM_CXFRAME 32
     * }
     */
    public static int SM_CXFRAME() {
        return SM_CXFRAME;
    }
    private static final int SM_CYFRAME = (int)33L;
    /**
     * {@snippet lang=c :
     * #define SM_CYFRAME 33
     * }
     */
    public static int SM_CYFRAME() {
        return SM_CYFRAME;
    }
    private static final int SM_CXMINTRACK = (int)34L;
    /**
     * {@snippet lang=c :
     * #define SM_CXMINTRACK 34
     * }
     */
    public static int SM_CXMINTRACK() {
        return SM_CXMINTRACK;
    }
    private static final int SM_CYMINTRACK = (int)35L;
    /**
     * {@snippet lang=c :
     * #define SM_CYMINTRACK 35
     * }
     */
    public static int SM_CYMINTRACK() {
        return SM_CYMINTRACK;
    }
    private static final int SM_CXDOUBLECLK = (int)36L;
    /**
     * {@snippet lang=c :
     * #define SM_CXDOUBLECLK 36
     * }
     */
    public static int SM_CXDOUBLECLK() {
        return SM_CXDOUBLECLK;
    }
    private static final int SM_CYDOUBLECLK = (int)37L;
    /**
     * {@snippet lang=c :
     * #define SM_CYDOUBLECLK 37
     * }
     */
    public static int SM_CYDOUBLECLK() {
        return SM_CYDOUBLECLK;
    }
    private static final int SM_CXICONSPACING = (int)38L;
    /**
     * {@snippet lang=c :
     * #define SM_CXICONSPACING 38
     * }
     */
    public static int SM_CXICONSPACING() {
        return SM_CXICONSPACING;
    }
    private static final int SM_CYICONSPACING = (int)39L;
    /**
     * {@snippet lang=c :
     * #define SM_CYICONSPACING 39
     * }
     */
    public static int SM_CYICONSPACING() {
        return SM_CYICONSPACING;
    }
    private static final int SM_MENUDROPALIGNMENT = (int)40L;
    /**
     * {@snippet lang=c :
     * #define SM_MENUDROPALIGNMENT 40
     * }
     */
    public static int SM_MENUDROPALIGNMENT() {
        return SM_MENUDROPALIGNMENT;
    }
    private static final int SM_PENWINDOWS = (int)41L;
    /**
     * {@snippet lang=c :
     * #define SM_PENWINDOWS 41
     * }
     */
    public static int SM_PENWINDOWS() {
        return SM_PENWINDOWS;
    }
    private static final int SM_DBCSENABLED = (int)42L;
    /**
     * {@snippet lang=c :
     * #define SM_DBCSENABLED 42
     * }
     */
    public static int SM_DBCSENABLED() {
        return SM_DBCSENABLED;
    }
    private static final int SM_CMOUSEBUTTONS = (int)43L;
    /**
     * {@snippet lang=c :
     * #define SM_CMOUSEBUTTONS 43
     * }
     */
    public static int SM_CMOUSEBUTTONS() {
        return SM_CMOUSEBUTTONS;
    }
    private static final int SM_SECURE = (int)44L;
    /**
     * {@snippet lang=c :
     * #define SM_SECURE 44
     * }
     */
    public static int SM_SECURE() {
        return SM_SECURE;
    }
    private static final int SM_CXEDGE = (int)45L;
    /**
     * {@snippet lang=c :
     * #define SM_CXEDGE 45
     * }
     */
    public static int SM_CXEDGE() {
        return SM_CXEDGE;
    }
    private static final int SM_CYEDGE = (int)46L;
    /**
     * {@snippet lang=c :
     * #define SM_CYEDGE 46
     * }
     */
    public static int SM_CYEDGE() {
        return SM_CYEDGE;
    }
    private static final int SM_CXMINSPACING = (int)47L;
    /**
     * {@snippet lang=c :
     * #define SM_CXMINSPACING 47
     * }
     */
    public static int SM_CXMINSPACING() {
        return SM_CXMINSPACING;
    }
    private static final int SM_CYMINSPACING = (int)48L;
    /**
     * {@snippet lang=c :
     * #define SM_CYMINSPACING 48
     * }
     */
    public static int SM_CYMINSPACING() {
        return SM_CYMINSPACING;
    }
    private static final int SM_CXSMICON = (int)49L;
    /**
     * {@snippet lang=c :
     * #define SM_CXSMICON 49
     * }
     */
    public static int SM_CXSMICON() {
        return SM_CXSMICON;
    }
    private static final int SM_CYSMICON = (int)50L;
    /**
     * {@snippet lang=c :
     * #define SM_CYSMICON 50
     * }
     */
    public static int SM_CYSMICON() {
        return SM_CYSMICON;
    }
    private static final int SM_CYSMCAPTION = (int)51L;
    /**
     * {@snippet lang=c :
     * #define SM_CYSMCAPTION 51
     * }
     */
    public static int SM_CYSMCAPTION() {
        return SM_CYSMCAPTION;
    }
    private static final int SM_CXSMSIZE = (int)52L;
    /**
     * {@snippet lang=c :
     * #define SM_CXSMSIZE 52
     * }
     */
    public static int SM_CXSMSIZE() {
        return SM_CXSMSIZE;
    }
    private static final int SM_CYSMSIZE = (int)53L;
    /**
     * {@snippet lang=c :
     * #define SM_CYSMSIZE 53
     * }
     */
    public static int SM_CYSMSIZE() {
        return SM_CYSMSIZE;
    }
    private static final int SM_CXMENUSIZE = (int)54L;
    /**
     * {@snippet lang=c :
     * #define SM_CXMENUSIZE 54
     * }
     */
    public static int SM_CXMENUSIZE() {
        return SM_CXMENUSIZE;
    }
    private static final int SM_CYMENUSIZE = (int)55L;
    /**
     * {@snippet lang=c :
     * #define SM_CYMENUSIZE 55
     * }
     */
    public static int SM_CYMENUSIZE() {
        return SM_CYMENUSIZE;
    }
    private static final int SM_ARRANGE = (int)56L;
    /**
     * {@snippet lang=c :
     * #define SM_ARRANGE 56
     * }
     */
    public static int SM_ARRANGE() {
        return SM_ARRANGE;
    }
    private static final int SM_CXMINIMIZED = (int)57L;
    /**
     * {@snippet lang=c :
     * #define SM_CXMINIMIZED 57
     * }
     */
    public static int SM_CXMINIMIZED() {
        return SM_CXMINIMIZED;
    }
    private static final int SM_CYMINIMIZED = (int)58L;
    /**
     * {@snippet lang=c :
     * #define SM_CYMINIMIZED 58
     * }
     */
    public static int SM_CYMINIMIZED() {
        return SM_CYMINIMIZED;
    }
    private static final int SM_CXMAXTRACK = (int)59L;
    /**
     * {@snippet lang=c :
     * #define SM_CXMAXTRACK 59
     * }
     */
    public static int SM_CXMAXTRACK() {
        return SM_CXMAXTRACK;
    }
    private static final int SM_CYMAXTRACK = (int)60L;
    /**
     * {@snippet lang=c :
     * #define SM_CYMAXTRACK 60
     * }
     */
    public static int SM_CYMAXTRACK() {
        return SM_CYMAXTRACK;
    }
    private static final int SM_CXMAXIMIZED = (int)61L;
    /**
     * {@snippet lang=c :
     * #define SM_CXMAXIMIZED 61
     * }
     */
    public static int SM_CXMAXIMIZED() {
        return SM_CXMAXIMIZED;
    }
    private static final int SM_CYMAXIMIZED = (int)62L;
    /**
     * {@snippet lang=c :
     * #define SM_CYMAXIMIZED 62
     * }
     */
    public static int SM_CYMAXIMIZED() {
        return SM_CYMAXIMIZED;
    }
    private static final int SM_NETWORK = (int)63L;
    /**
     * {@snippet lang=c :
     * #define SM_NETWORK 63
     * }
     */
    public static int SM_NETWORK() {
        return SM_NETWORK;
    }
    private static final int SM_CLEANBOOT = (int)67L;
    /**
     * {@snippet lang=c :
     * #define SM_CLEANBOOT 67
     * }
     */
    public static int SM_CLEANBOOT() {
        return SM_CLEANBOOT;
    }
    private static final int SM_CXDRAG = (int)68L;
    /**
     * {@snippet lang=c :
     * #define SM_CXDRAG 68
     * }
     */
    public static int SM_CXDRAG() {
        return SM_CXDRAG;
    }
    private static final int SM_CYDRAG = (int)69L;
    /**
     * {@snippet lang=c :
     * #define SM_CYDRAG 69
     * }
     */
    public static int SM_CYDRAG() {
        return SM_CYDRAG;
    }
    private static final int SM_SHOWSOUNDS = (int)70L;
    /**
     * {@snippet lang=c :
     * #define SM_SHOWSOUNDS 70
     * }
     */
    public static int SM_SHOWSOUNDS() {
        return SM_SHOWSOUNDS;
    }
    private static final int SM_CXMENUCHECK = (int)71L;
    /**
     * {@snippet lang=c :
     * #define SM_CXMENUCHECK 71
     * }
     */
    public static int SM_CXMENUCHECK() {
        return SM_CXMENUCHECK;
    }
    private static final int SM_CYMENUCHECK = (int)72L;
    /**
     * {@snippet lang=c :
     * #define SM_CYMENUCHECK 72
     * }
     */
    public static int SM_CYMENUCHECK() {
        return SM_CYMENUCHECK;
    }
    private static final int SM_SLOWMACHINE = (int)73L;
    /**
     * {@snippet lang=c :
     * #define SM_SLOWMACHINE 73
     * }
     */
    public static int SM_SLOWMACHINE() {
        return SM_SLOWMACHINE;
    }
    private static final int SM_MIDEASTENABLED = (int)74L;
    /**
     * {@snippet lang=c :
     * #define SM_MIDEASTENABLED 74
     * }
     */
    public static int SM_MIDEASTENABLED() {
        return SM_MIDEASTENABLED;
    }
    private static final int SM_MOUSEWHEELPRESENT = (int)75L;
    /**
     * {@snippet lang=c :
     * #define SM_MOUSEWHEELPRESENT 75
     * }
     */
    public static int SM_MOUSEWHEELPRESENT() {
        return SM_MOUSEWHEELPRESENT;
    }
    private static final int SM_XVIRTUALSCREEN = (int)76L;
    /**
     * {@snippet lang=c :
     * #define SM_XVIRTUALSCREEN 76
     * }
     */
    public static int SM_XVIRTUALSCREEN() {
        return SM_XVIRTUALSCREEN;
    }
    private static final int SM_YVIRTUALSCREEN = (int)77L;
    /**
     * {@snippet lang=c :
     * #define SM_YVIRTUALSCREEN 77
     * }
     */
    public static int SM_YVIRTUALSCREEN() {
        return SM_YVIRTUALSCREEN;
    }
    private static final int SM_CXVIRTUALSCREEN = (int)78L;
    /**
     * {@snippet lang=c :
     * #define SM_CXVIRTUALSCREEN 78
     * }
     */
    public static int SM_CXVIRTUALSCREEN() {
        return SM_CXVIRTUALSCREEN;
    }
    private static final int SM_CYVIRTUALSCREEN = (int)79L;
    /**
     * {@snippet lang=c :
     * #define SM_CYVIRTUALSCREEN 79
     * }
     */
    public static int SM_CYVIRTUALSCREEN() {
        return SM_CYVIRTUALSCREEN;
    }
    private static final int SM_CMONITORS = (int)80L;
    /**
     * {@snippet lang=c :
     * #define SM_CMONITORS 80
     * }
     */
    public static int SM_CMONITORS() {
        return SM_CMONITORS;
    }
    private static final int SM_SAMEDISPLAYFORMAT = (int)81L;
    /**
     * {@snippet lang=c :
     * #define SM_SAMEDISPLAYFORMAT 81
     * }
     */
    public static int SM_SAMEDISPLAYFORMAT() {
        return SM_SAMEDISPLAYFORMAT;
    }
    private static final int SM_IMMENABLED = (int)82L;
    /**
     * {@snippet lang=c :
     * #define SM_IMMENABLED 82
     * }
     */
    public static int SM_IMMENABLED() {
        return SM_IMMENABLED;
    }
    private static final int SM_CXFOCUSBORDER = (int)83L;
    /**
     * {@snippet lang=c :
     * #define SM_CXFOCUSBORDER 83
     * }
     */
    public static int SM_CXFOCUSBORDER() {
        return SM_CXFOCUSBORDER;
    }
    private static final int SM_CYFOCUSBORDER = (int)84L;
    /**
     * {@snippet lang=c :
     * #define SM_CYFOCUSBORDER 84
     * }
     */
    public static int SM_CYFOCUSBORDER() {
        return SM_CYFOCUSBORDER;
    }
    private static final int SM_TABLETPC = (int)86L;
    /**
     * {@snippet lang=c :
     * #define SM_TABLETPC 86
     * }
     */
    public static int SM_TABLETPC() {
        return SM_TABLETPC;
    }
    private static final int SM_MEDIACENTER = (int)87L;
    /**
     * {@snippet lang=c :
     * #define SM_MEDIACENTER 87
     * }
     */
    public static int SM_MEDIACENTER() {
        return SM_MEDIACENTER;
    }
    private static final int SM_STARTER = (int)88L;
    /**
     * {@snippet lang=c :
     * #define SM_STARTER 88
     * }
     */
    public static int SM_STARTER() {
        return SM_STARTER;
    }
    private static final int SM_SERVERR2 = (int)89L;
    /**
     * {@snippet lang=c :
     * #define SM_SERVERR2 89
     * }
     */
    public static int SM_SERVERR2() {
        return SM_SERVERR2;
    }
    private static final int SM_MOUSEHORIZONTALWHEELPRESENT = (int)91L;
    /**
     * {@snippet lang=c :
     * #define SM_MOUSEHORIZONTALWHEELPRESENT 91
     * }
     */
    public static int SM_MOUSEHORIZONTALWHEELPRESENT() {
        return SM_MOUSEHORIZONTALWHEELPRESENT;
    }
    private static final int SM_CXPADDEDBORDER = (int)92L;
    /**
     * {@snippet lang=c :
     * #define SM_CXPADDEDBORDER 92
     * }
     */
    public static int SM_CXPADDEDBORDER() {
        return SM_CXPADDEDBORDER;
    }
    private static final int SM_DIGITIZER = (int)94L;
    /**
     * {@snippet lang=c :
     * #define SM_DIGITIZER 94
     * }
     */
    public static int SM_DIGITIZER() {
        return SM_DIGITIZER;
    }
    private static final int SM_MAXIMUMTOUCHES = (int)95L;
    /**
     * {@snippet lang=c :
     * #define SM_MAXIMUMTOUCHES 95
     * }
     */
    public static int SM_MAXIMUMTOUCHES() {
        return SM_MAXIMUMTOUCHES;
    }
    private static final int SM_CMETRICS = (int)97L;
    /**
     * {@snippet lang=c :
     * #define SM_CMETRICS 97
     * }
     */
    public static int SM_CMETRICS() {
        return SM_CMETRICS;
    }
    private static final int SM_REMOTESESSION = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define SM_REMOTESESSION 4096
     * }
     */
    public static int SM_REMOTESESSION() {
        return SM_REMOTESESSION;
    }
    private static final int SM_SHUTTINGDOWN = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define SM_SHUTTINGDOWN 8192
     * }
     */
    public static int SM_SHUTTINGDOWN() {
        return SM_SHUTTINGDOWN;
    }
    private static final int SM_REMOTECONTROL = (int)8193L;
    /**
     * {@snippet lang=c :
     * #define SM_REMOTECONTROL 8193
     * }
     */
    public static int SM_REMOTECONTROL() {
        return SM_REMOTECONTROL;
    }
    private static final int SM_CARETBLINKINGENABLED = (int)8194L;
    /**
     * {@snippet lang=c :
     * #define SM_CARETBLINKINGENABLED 8194
     * }
     */
    public static int SM_CARETBLINKINGENABLED() {
        return SM_CARETBLINKINGENABLED;
    }
    private static final int SM_CONVERTIBLESLATEMODE = (int)8195L;
    /**
     * {@snippet lang=c :
     * #define SM_CONVERTIBLESLATEMODE 8195
     * }
     */
    public static int SM_CONVERTIBLESLATEMODE() {
        return SM_CONVERTIBLESLATEMODE;
    }
    private static final int SM_SYSTEMDOCKED = (int)8196L;
    /**
     * {@snippet lang=c :
     * #define SM_SYSTEMDOCKED 8196
     * }
     */
    public static int SM_SYSTEMDOCKED() {
        return SM_SYSTEMDOCKED;
    }
    private static final int PMB_ACTIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PMB_ACTIVE 1
     * }
     */
    public static int PMB_ACTIVE() {
        return PMB_ACTIVE;
    }
    private static final int MNC_IGNORE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MNC_IGNORE 0
     * }
     */
    public static int MNC_IGNORE() {
        return MNC_IGNORE;
    }
    private static final int MNC_CLOSE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MNC_CLOSE 1
     * }
     */
    public static int MNC_CLOSE() {
        return MNC_CLOSE;
    }
    private static final int MNC_EXECUTE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MNC_EXECUTE 2
     * }
     */
    public static int MNC_EXECUTE() {
        return MNC_EXECUTE;
    }
    private static final int MNC_SELECT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define MNC_SELECT 3
     * }
     */
    public static int MNC_SELECT() {
        return MNC_SELECT;
    }
    private static final int MNS_MODELESS = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define MNS_MODELESS 1073741824
     * }
     */
    public static int MNS_MODELESS() {
        return MNS_MODELESS;
    }
    private static final int MNS_DRAGDROP = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define MNS_DRAGDROP 536870912
     * }
     */
    public static int MNS_DRAGDROP() {
        return MNS_DRAGDROP;
    }
    private static final int MNS_AUTODISMISS = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define MNS_AUTODISMISS 268435456
     * }
     */
    public static int MNS_AUTODISMISS() {
        return MNS_AUTODISMISS;
    }
    private static final int MNS_NOTIFYBYPOS = (int)134217728L;
    /**
     * {@snippet lang=c :
     * #define MNS_NOTIFYBYPOS 134217728
     * }
     */
    public static int MNS_NOTIFYBYPOS() {
        return MNS_NOTIFYBYPOS;
    }
    private static final int MNS_CHECKORBMP = (int)67108864L;
    /**
     * {@snippet lang=c :
     * #define MNS_CHECKORBMP 67108864
     * }
     */
    public static int MNS_CHECKORBMP() {
        return MNS_CHECKORBMP;
    }
    private static final int MIM_MAXHEIGHT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MIM_MAXHEIGHT 1
     * }
     */
    public static int MIM_MAXHEIGHT() {
        return MIM_MAXHEIGHT;
    }
    private static final int MIM_BACKGROUND = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MIM_BACKGROUND 2
     * }
     */
    public static int MIM_BACKGROUND() {
        return MIM_BACKGROUND;
    }
    private static final int MIM_HELPID = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MIM_HELPID 4
     * }
     */
    public static int MIM_HELPID() {
        return MIM_HELPID;
    }
    private static final int MIM_MENUDATA = (int)8L;
    /**
     * {@snippet lang=c :
     * #define MIM_MENUDATA 8
     * }
     */
    public static int MIM_MENUDATA() {
        return MIM_MENUDATA;
    }
    private static final int MIM_STYLE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define MIM_STYLE 16
     * }
     */
    public static int MIM_STYLE() {
        return MIM_STYLE;
    }
    private static final int MND_CONTINUE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MND_CONTINUE 0
     * }
     */
    public static int MND_CONTINUE() {
        return MND_CONTINUE;
    }
    private static final int MND_ENDMENU = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MND_ENDMENU 1
     * }
     */
    public static int MND_ENDMENU() {
        return MND_ENDMENU;
    }
    private static final int MNGOF_TOPGAP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MNGOF_TOPGAP 1
     * }
     */
    public static int MNGOF_TOPGAP() {
        return MNGOF_TOPGAP;
    }
    private static final int MNGOF_BOTTOMGAP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MNGOF_BOTTOMGAP 2
     * }
     */
    public static int MNGOF_BOTTOMGAP() {
        return MNGOF_BOTTOMGAP;
    }
    private static final int MNGO_NOINTERFACE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MNGO_NOINTERFACE 0
     * }
     */
    public static int MNGO_NOINTERFACE() {
        return MNGO_NOINTERFACE;
    }
    private static final int MNGO_NOERROR = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MNGO_NOERROR 1
     * }
     */
    public static int MNGO_NOERROR() {
        return MNGO_NOERROR;
    }
    private static final int MIIM_STATE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MIIM_STATE 1
     * }
     */
    public static int MIIM_STATE() {
        return MIIM_STATE;
    }
    private static final int MIIM_ID = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MIIM_ID 2
     * }
     */
    public static int MIIM_ID() {
        return MIIM_ID;
    }
    private static final int MIIM_SUBMENU = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MIIM_SUBMENU 4
     * }
     */
    public static int MIIM_SUBMENU() {
        return MIIM_SUBMENU;
    }
    private static final int MIIM_CHECKMARKS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define MIIM_CHECKMARKS 8
     * }
     */
    public static int MIIM_CHECKMARKS() {
        return MIIM_CHECKMARKS;
    }
    private static final int MIIM_TYPE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define MIIM_TYPE 16
     * }
     */
    public static int MIIM_TYPE() {
        return MIIM_TYPE;
    }
    private static final int MIIM_DATA = (int)32L;
    /**
     * {@snippet lang=c :
     * #define MIIM_DATA 32
     * }
     */
    public static int MIIM_DATA() {
        return MIIM_DATA;
    }
    private static final int MIIM_STRING = (int)64L;
    /**
     * {@snippet lang=c :
     * #define MIIM_STRING 64
     * }
     */
    public static int MIIM_STRING() {
        return MIIM_STRING;
    }
    private static final int MIIM_BITMAP = (int)128L;
    /**
     * {@snippet lang=c :
     * #define MIIM_BITMAP 128
     * }
     */
    public static int MIIM_BITMAP() {
        return MIIM_BITMAP;
    }
    private static final int MIIM_FTYPE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define MIIM_FTYPE 256
     * }
     */
    public static int MIIM_FTYPE() {
        return MIIM_FTYPE;
    }
    private static final int DOF_EXECUTABLE = (int)32769L;
    /**
     * {@snippet lang=c :
     * #define DOF_EXECUTABLE 32769
     * }
     */
    public static int DOF_EXECUTABLE() {
        return DOF_EXECUTABLE;
    }
    private static final int DOF_DOCUMENT = (int)32770L;
    /**
     * {@snippet lang=c :
     * #define DOF_DOCUMENT 32770
     * }
     */
    public static int DOF_DOCUMENT() {
        return DOF_DOCUMENT;
    }
    private static final int DOF_DIRECTORY = (int)32771L;
    /**
     * {@snippet lang=c :
     * #define DOF_DIRECTORY 32771
     * }
     */
    public static int DOF_DIRECTORY() {
        return DOF_DIRECTORY;
    }
    private static final int DOF_MULTIPLE = (int)32772L;
    /**
     * {@snippet lang=c :
     * #define DOF_MULTIPLE 32772
     * }
     */
    public static int DOF_MULTIPLE() {
        return DOF_MULTIPLE;
    }
    private static final int DOF_PROGMAN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DOF_PROGMAN 1
     * }
     */
    public static int DOF_PROGMAN() {
        return DOF_PROGMAN;
    }
    private static final int DOF_SHELLDATA = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DOF_SHELLDATA 2
     * }
     */
    public static int DOF_SHELLDATA() {
        return DOF_SHELLDATA;
    }
    private static final int DT_TOP = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DT_TOP 0
     * }
     */
    public static int DT_TOP() {
        return DT_TOP;
    }
    private static final int DT_LEFT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DT_LEFT 0
     * }
     */
    public static int DT_LEFT() {
        return DT_LEFT;
    }
    private static final int DT_CENTER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DT_CENTER 1
     * }
     */
    public static int DT_CENTER() {
        return DT_CENTER;
    }
    private static final int DT_RIGHT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DT_RIGHT 2
     * }
     */
    public static int DT_RIGHT() {
        return DT_RIGHT;
    }
    private static final int DT_VCENTER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DT_VCENTER 4
     * }
     */
    public static int DT_VCENTER() {
        return DT_VCENTER;
    }
    private static final int DT_BOTTOM = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DT_BOTTOM 8
     * }
     */
    public static int DT_BOTTOM() {
        return DT_BOTTOM;
    }
    private static final int DT_WORDBREAK = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DT_WORDBREAK 16
     * }
     */
    public static int DT_WORDBREAK() {
        return DT_WORDBREAK;
    }
    private static final int DT_SINGLELINE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define DT_SINGLELINE 32
     * }
     */
    public static int DT_SINGLELINE() {
        return DT_SINGLELINE;
    }
    private static final int DT_EXPANDTABS = (int)64L;
    /**
     * {@snippet lang=c :
     * #define DT_EXPANDTABS 64
     * }
     */
    public static int DT_EXPANDTABS() {
        return DT_EXPANDTABS;
    }
    private static final int DT_TABSTOP = (int)128L;
    /**
     * {@snippet lang=c :
     * #define DT_TABSTOP 128
     * }
     */
    public static int DT_TABSTOP() {
        return DT_TABSTOP;
    }
    private static final int DT_NOCLIP = (int)256L;
    /**
     * {@snippet lang=c :
     * #define DT_NOCLIP 256
     * }
     */
    public static int DT_NOCLIP() {
        return DT_NOCLIP;
    }
    private static final int DT_EXTERNALLEADING = (int)512L;
    /**
     * {@snippet lang=c :
     * #define DT_EXTERNALLEADING 512
     * }
     */
    public static int DT_EXTERNALLEADING() {
        return DT_EXTERNALLEADING;
    }
    private static final int DT_CALCRECT = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define DT_CALCRECT 1024
     * }
     */
    public static int DT_CALCRECT() {
        return DT_CALCRECT;
    }
    private static final int DT_NOPREFIX = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define DT_NOPREFIX 2048
     * }
     */
    public static int DT_NOPREFIX() {
        return DT_NOPREFIX;
    }
    private static final int DT_INTERNAL = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define DT_INTERNAL 4096
     * }
     */
    public static int DT_INTERNAL() {
        return DT_INTERNAL;
    }
    private static final int DT_EDITCONTROL = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define DT_EDITCONTROL 8192
     * }
     */
    public static int DT_EDITCONTROL() {
        return DT_EDITCONTROL;
    }
    private static final int DT_PATH_ELLIPSIS = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define DT_PATH_ELLIPSIS 16384
     * }
     */
    public static int DT_PATH_ELLIPSIS() {
        return DT_PATH_ELLIPSIS;
    }
    private static final int DT_END_ELLIPSIS = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define DT_END_ELLIPSIS 32768
     * }
     */
    public static int DT_END_ELLIPSIS() {
        return DT_END_ELLIPSIS;
    }
    private static final int DT_MODIFYSTRING = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define DT_MODIFYSTRING 65536
     * }
     */
    public static int DT_MODIFYSTRING() {
        return DT_MODIFYSTRING;
    }
    private static final int DT_RTLREADING = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define DT_RTLREADING 131072
     * }
     */
    public static int DT_RTLREADING() {
        return DT_RTLREADING;
    }
    private static final int DT_WORD_ELLIPSIS = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define DT_WORD_ELLIPSIS 262144
     * }
     */
    public static int DT_WORD_ELLIPSIS() {
        return DT_WORD_ELLIPSIS;
    }
    private static final int DT_NOFULLWIDTHCHARBREAK = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define DT_NOFULLWIDTHCHARBREAK 524288
     * }
     */
    public static int DT_NOFULLWIDTHCHARBREAK() {
        return DT_NOFULLWIDTHCHARBREAK;
    }
    private static final int DT_HIDEPREFIX = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define DT_HIDEPREFIX 1048576
     * }
     */
    public static int DT_HIDEPREFIX() {
        return DT_HIDEPREFIX;
    }
    private static final int DT_PREFIXONLY = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define DT_PREFIXONLY 2097152
     * }
     */
    public static int DT_PREFIXONLY() {
        return DT_PREFIXONLY;
    }
    private static final int DST_COMPLEX = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DST_COMPLEX 0
     * }
     */
    public static int DST_COMPLEX() {
        return DST_COMPLEX;
    }
    private static final int DST_TEXT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DST_TEXT 1
     * }
     */
    public static int DST_TEXT() {
        return DST_TEXT;
    }
    private static final int DST_PREFIXTEXT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DST_PREFIXTEXT 2
     * }
     */
    public static int DST_PREFIXTEXT() {
        return DST_PREFIXTEXT;
    }
    private static final int DST_ICON = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DST_ICON 3
     * }
     */
    public static int DST_ICON() {
        return DST_ICON;
    }
    private static final int DST_BITMAP = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DST_BITMAP 4
     * }
     */
    public static int DST_BITMAP() {
        return DST_BITMAP;
    }
    private static final int DSS_NORMAL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DSS_NORMAL 0
     * }
     */
    public static int DSS_NORMAL() {
        return DSS_NORMAL;
    }
    private static final int DSS_UNION = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DSS_UNION 16
     * }
     */
    public static int DSS_UNION() {
        return DSS_UNION;
    }
    private static final int DSS_DISABLED = (int)32L;
    /**
     * {@snippet lang=c :
     * #define DSS_DISABLED 32
     * }
     */
    public static int DSS_DISABLED() {
        return DSS_DISABLED;
    }
    private static final int DSS_MONO = (int)128L;
    /**
     * {@snippet lang=c :
     * #define DSS_MONO 128
     * }
     */
    public static int DSS_MONO() {
        return DSS_MONO;
    }
    private static final int DSS_HIDEPREFIX = (int)512L;
    /**
     * {@snippet lang=c :
     * #define DSS_HIDEPREFIX 512
     * }
     */
    public static int DSS_HIDEPREFIX() {
        return DSS_HIDEPREFIX;
    }
    private static final int DSS_PREFIXONLY = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define DSS_PREFIXONLY 1024
     * }
     */
    public static int DSS_PREFIXONLY() {
        return DSS_PREFIXONLY;
    }
    private static final int DSS_RIGHT = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define DSS_RIGHT 32768
     * }
     */
    public static int DSS_RIGHT() {
        return DSS_RIGHT;
    }
    private static final int LSFW_LOCK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define LSFW_LOCK 1
     * }
     */
    public static int LSFW_LOCK() {
        return LSFW_LOCK;
    }
    private static final int LSFW_UNLOCK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define LSFW_UNLOCK 2
     * }
     */
    public static int LSFW_UNLOCK() {
        return LSFW_UNLOCK;
    }
    private static final int RDW_INVALIDATE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define RDW_INVALIDATE 1
     * }
     */
    public static int RDW_INVALIDATE() {
        return RDW_INVALIDATE;
    }
    private static final int RDW_INTERNALPAINT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define RDW_INTERNALPAINT 2
     * }
     */
    public static int RDW_INTERNALPAINT() {
        return RDW_INTERNALPAINT;
    }
    private static final int RDW_ERASE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define RDW_ERASE 4
     * }
     */
    public static int RDW_ERASE() {
        return RDW_ERASE;
    }
    private static final int RDW_VALIDATE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define RDW_VALIDATE 8
     * }
     */
    public static int RDW_VALIDATE() {
        return RDW_VALIDATE;
    }
    private static final int RDW_NOINTERNALPAINT = (int)16L;
    /**
     * {@snippet lang=c :
     * #define RDW_NOINTERNALPAINT 16
     * }
     */
    public static int RDW_NOINTERNALPAINT() {
        return RDW_NOINTERNALPAINT;
    }
    private static final int RDW_NOERASE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define RDW_NOERASE 32
     * }
     */
    public static int RDW_NOERASE() {
        return RDW_NOERASE;
    }
    private static final int RDW_NOCHILDREN = (int)64L;
    /**
     * {@snippet lang=c :
     * #define RDW_NOCHILDREN 64
     * }
     */
    public static int RDW_NOCHILDREN() {
        return RDW_NOCHILDREN;
    }
    private static final int RDW_ALLCHILDREN = (int)128L;
    /**
     * {@snippet lang=c :
     * #define RDW_ALLCHILDREN 128
     * }
     */
    public static int RDW_ALLCHILDREN() {
        return RDW_ALLCHILDREN;
    }
    private static final int RDW_UPDATENOW = (int)256L;
    /**
     * {@snippet lang=c :
     * #define RDW_UPDATENOW 256
     * }
     */
    public static int RDW_UPDATENOW() {
        return RDW_UPDATENOW;
    }
    private static final int RDW_ERASENOW = (int)512L;
    /**
     * {@snippet lang=c :
     * #define RDW_ERASENOW 512
     * }
     */
    public static int RDW_ERASENOW() {
        return RDW_ERASENOW;
    }
    private static final int RDW_FRAME = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define RDW_FRAME 1024
     * }
     */
    public static int RDW_FRAME() {
        return RDW_FRAME;
    }
    private static final int RDW_NOFRAME = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define RDW_NOFRAME 2048
     * }
     */
    public static int RDW_NOFRAME() {
        return RDW_NOFRAME;
    }
    private static final int SW_SCROLLCHILDREN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SW_SCROLLCHILDREN 1
     * }
     */
    public static int SW_SCROLLCHILDREN() {
        return SW_SCROLLCHILDREN;
    }
    private static final int SW_INVALIDATE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SW_INVALIDATE 2
     * }
     */
    public static int SW_INVALIDATE() {
        return SW_INVALIDATE;
    }
    private static final int SW_ERASE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SW_ERASE 4
     * }
     */
    public static int SW_ERASE() {
        return SW_ERASE;
    }
    private static final int SW_SMOOTHSCROLL = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SW_SMOOTHSCROLL 16
     * }
     */
    public static int SW_SMOOTHSCROLL() {
        return SW_SMOOTHSCROLL;
    }
    private static final int ESB_ENABLE_BOTH = (int)0L;
    /**
     * {@snippet lang=c :
     * #define ESB_ENABLE_BOTH 0
     * }
     */
    public static int ESB_ENABLE_BOTH() {
        return ESB_ENABLE_BOTH;
    }
    private static final int ESB_DISABLE_BOTH = (int)3L;
    /**
     * {@snippet lang=c :
     * #define ESB_DISABLE_BOTH 3
     * }
     */
    public static int ESB_DISABLE_BOTH() {
        return ESB_DISABLE_BOTH;
    }
    private static final int ESB_DISABLE_LEFT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ESB_DISABLE_LEFT 1
     * }
     */
    public static int ESB_DISABLE_LEFT() {
        return ESB_DISABLE_LEFT;
    }
    private static final int ESB_DISABLE_RIGHT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ESB_DISABLE_RIGHT 2
     * }
     */
    public static int ESB_DISABLE_RIGHT() {
        return ESB_DISABLE_RIGHT;
    }
    private static final int ESB_DISABLE_UP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ESB_DISABLE_UP 1
     * }
     */
    public static int ESB_DISABLE_UP() {
        return ESB_DISABLE_UP;
    }
    private static final int ESB_DISABLE_DOWN = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ESB_DISABLE_DOWN 2
     * }
     */
    public static int ESB_DISABLE_DOWN() {
        return ESB_DISABLE_DOWN;
    }
    private static final int HELPINFO_WINDOW = (int)1L;
    /**
     * {@snippet lang=c :
     * #define HELPINFO_WINDOW 1
     * }
     */
    public static int HELPINFO_WINDOW() {
        return HELPINFO_WINDOW;
    }
    private static final int HELPINFO_MENUITEM = (int)2L;
    /**
     * {@snippet lang=c :
     * #define HELPINFO_MENUITEM 2
     * }
     */
    public static int HELPINFO_MENUITEM() {
        return HELPINFO_MENUITEM;
    }
    private static final int CWP_ALL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CWP_ALL 0
     * }
     */
    public static int CWP_ALL() {
        return CWP_ALL;
    }
    private static final int CWP_SKIPINVISIBLE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CWP_SKIPINVISIBLE 1
     * }
     */
    public static int CWP_SKIPINVISIBLE() {
        return CWP_SKIPINVISIBLE;
    }
    private static final int CWP_SKIPDISABLED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CWP_SKIPDISABLED 2
     * }
     */
    public static int CWP_SKIPDISABLED() {
        return CWP_SKIPDISABLED;
    }
    private static final int CWP_SKIPTRANSPARENT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CWP_SKIPTRANSPARENT 4
     * }
     */
    public static int CWP_SKIPTRANSPARENT() {
        return CWP_SKIPTRANSPARENT;
    }
    private static final int CTLCOLOR_MSGBOX = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CTLCOLOR_MSGBOX 0
     * }
     */
    public static int CTLCOLOR_MSGBOX() {
        return CTLCOLOR_MSGBOX;
    }
    private static final int CTLCOLOR_EDIT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CTLCOLOR_EDIT 1
     * }
     */
    public static int CTLCOLOR_EDIT() {
        return CTLCOLOR_EDIT;
    }
    private static final int CTLCOLOR_LISTBOX = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CTLCOLOR_LISTBOX 2
     * }
     */
    public static int CTLCOLOR_LISTBOX() {
        return CTLCOLOR_LISTBOX;
    }
    private static final int CTLCOLOR_BTN = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CTLCOLOR_BTN 3
     * }
     */
    public static int CTLCOLOR_BTN() {
        return CTLCOLOR_BTN;
    }
    private static final int CTLCOLOR_DLG = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CTLCOLOR_DLG 4
     * }
     */
    public static int CTLCOLOR_DLG() {
        return CTLCOLOR_DLG;
    }
    private static final int CTLCOLOR_SCROLLBAR = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CTLCOLOR_SCROLLBAR 5
     * }
     */
    public static int CTLCOLOR_SCROLLBAR() {
        return CTLCOLOR_SCROLLBAR;
    }
    private static final int CTLCOLOR_STATIC = (int)6L;
    /**
     * {@snippet lang=c :
     * #define CTLCOLOR_STATIC 6
     * }
     */
    public static int CTLCOLOR_STATIC() {
        return CTLCOLOR_STATIC;
    }
    private static final int CTLCOLOR_MAX = (int)7L;
    /**
     * {@snippet lang=c :
     * #define CTLCOLOR_MAX 7
     * }
     */
    public static int CTLCOLOR_MAX() {
        return CTLCOLOR_MAX;
    }
    private static final int COLOR_SCROLLBAR = (int)0L;
    /**
     * {@snippet lang=c :
     * #define COLOR_SCROLLBAR 0
     * }
     */
    public static int COLOR_SCROLLBAR() {
        return COLOR_SCROLLBAR;
    }
    private static final int COLOR_BACKGROUND = (int)1L;
    /**
     * {@snippet lang=c :
     * #define COLOR_BACKGROUND 1
     * }
     */
    public static int COLOR_BACKGROUND() {
        return COLOR_BACKGROUND;
    }
    private static final int COLOR_ACTIVECAPTION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define COLOR_ACTIVECAPTION 2
     * }
     */
    public static int COLOR_ACTIVECAPTION() {
        return COLOR_ACTIVECAPTION;
    }
    private static final int COLOR_INACTIVECAPTION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define COLOR_INACTIVECAPTION 3
     * }
     */
    public static int COLOR_INACTIVECAPTION() {
        return COLOR_INACTIVECAPTION;
    }
    private static final int COLOR_MENU = (int)4L;
    /**
     * {@snippet lang=c :
     * #define COLOR_MENU 4
     * }
     */
    public static int COLOR_MENU() {
        return COLOR_MENU;
    }
    private static final int COLOR_WINDOW = (int)5L;
    /**
     * {@snippet lang=c :
     * #define COLOR_WINDOW 5
     * }
     */
    public static int COLOR_WINDOW() {
        return COLOR_WINDOW;
    }
    private static final int COLOR_WINDOWFRAME = (int)6L;
    /**
     * {@snippet lang=c :
     * #define COLOR_WINDOWFRAME 6
     * }
     */
    public static int COLOR_WINDOWFRAME() {
        return COLOR_WINDOWFRAME;
    }
    private static final int COLOR_MENUTEXT = (int)7L;
    /**
     * {@snippet lang=c :
     * #define COLOR_MENUTEXT 7
     * }
     */
    public static int COLOR_MENUTEXT() {
        return COLOR_MENUTEXT;
    }
    private static final int COLOR_WINDOWTEXT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define COLOR_WINDOWTEXT 8
     * }
     */
    public static int COLOR_WINDOWTEXT() {
        return COLOR_WINDOWTEXT;
    }
    private static final int COLOR_CAPTIONTEXT = (int)9L;
    /**
     * {@snippet lang=c :
     * #define COLOR_CAPTIONTEXT 9
     * }
     */
    public static int COLOR_CAPTIONTEXT() {
        return COLOR_CAPTIONTEXT;
    }
    private static final int COLOR_ACTIVEBORDER = (int)10L;
    /**
     * {@snippet lang=c :
     * #define COLOR_ACTIVEBORDER 10
     * }
     */
    public static int COLOR_ACTIVEBORDER() {
        return COLOR_ACTIVEBORDER;
    }
    private static final int COLOR_INACTIVEBORDER = (int)11L;
    /**
     * {@snippet lang=c :
     * #define COLOR_INACTIVEBORDER 11
     * }
     */
    public static int COLOR_INACTIVEBORDER() {
        return COLOR_INACTIVEBORDER;
    }
    private static final int COLOR_APPWORKSPACE = (int)12L;
    /**
     * {@snippet lang=c :
     * #define COLOR_APPWORKSPACE 12
     * }
     */
    public static int COLOR_APPWORKSPACE() {
        return COLOR_APPWORKSPACE;
    }
    private static final int COLOR_HIGHLIGHT = (int)13L;
    /**
     * {@snippet lang=c :
     * #define COLOR_HIGHLIGHT 13
     * }
     */
    public static int COLOR_HIGHLIGHT() {
        return COLOR_HIGHLIGHT;
    }
    private static final int COLOR_HIGHLIGHTTEXT = (int)14L;
    /**
     * {@snippet lang=c :
     * #define COLOR_HIGHLIGHTTEXT 14
     * }
     */
    public static int COLOR_HIGHLIGHTTEXT() {
        return COLOR_HIGHLIGHTTEXT;
    }
    private static final int COLOR_BTNFACE = (int)15L;
    /**
     * {@snippet lang=c :
     * #define COLOR_BTNFACE 15
     * }
     */
    public static int COLOR_BTNFACE() {
        return COLOR_BTNFACE;
    }
    private static final int COLOR_BTNSHADOW = (int)16L;
    /**
     * {@snippet lang=c :
     * #define COLOR_BTNSHADOW 16
     * }
     */
    public static int COLOR_BTNSHADOW() {
        return COLOR_BTNSHADOW;
    }
    private static final int COLOR_GRAYTEXT = (int)17L;
    /**
     * {@snippet lang=c :
     * #define COLOR_GRAYTEXT 17
     * }
     */
    public static int COLOR_GRAYTEXT() {
        return COLOR_GRAYTEXT;
    }
    private static final int COLOR_BTNTEXT = (int)18L;
    /**
     * {@snippet lang=c :
     * #define COLOR_BTNTEXT 18
     * }
     */
    public static int COLOR_BTNTEXT() {
        return COLOR_BTNTEXT;
    }
    private static final int COLOR_INACTIVECAPTIONTEXT = (int)19L;
    /**
     * {@snippet lang=c :
     * #define COLOR_INACTIVECAPTIONTEXT 19
     * }
     */
    public static int COLOR_INACTIVECAPTIONTEXT() {
        return COLOR_INACTIVECAPTIONTEXT;
    }
    private static final int COLOR_BTNHIGHLIGHT = (int)20L;
    /**
     * {@snippet lang=c :
     * #define COLOR_BTNHIGHLIGHT 20
     * }
     */
    public static int COLOR_BTNHIGHLIGHT() {
        return COLOR_BTNHIGHLIGHT;
    }
    private static final int COLOR_3DDKSHADOW = (int)21L;
    /**
     * {@snippet lang=c :
     * #define COLOR_3DDKSHADOW 21
     * }
     */
    public static int COLOR_3DDKSHADOW() {
        return COLOR_3DDKSHADOW;
    }
    private static final int COLOR_3DLIGHT = (int)22L;
    /**
     * {@snippet lang=c :
     * #define COLOR_3DLIGHT 22
     * }
     */
    public static int COLOR_3DLIGHT() {
        return COLOR_3DLIGHT;
    }
    private static final int COLOR_INFOTEXT = (int)23L;
    /**
     * {@snippet lang=c :
     * #define COLOR_INFOTEXT 23
     * }
     */
    public static int COLOR_INFOTEXT() {
        return COLOR_INFOTEXT;
    }
    private static final int COLOR_INFOBK = (int)24L;
    /**
     * {@snippet lang=c :
     * #define COLOR_INFOBK 24
     * }
     */
    public static int COLOR_INFOBK() {
        return COLOR_INFOBK;
    }
    private static final int COLOR_HOTLIGHT = (int)26L;
    /**
     * {@snippet lang=c :
     * #define COLOR_HOTLIGHT 26
     * }
     */
    public static int COLOR_HOTLIGHT() {
        return COLOR_HOTLIGHT;
    }
    private static final int COLOR_GRADIENTACTIVECAPTION = (int)27L;
    /**
     * {@snippet lang=c :
     * #define COLOR_GRADIENTACTIVECAPTION 27
     * }
     */
    public static int COLOR_GRADIENTACTIVECAPTION() {
        return COLOR_GRADIENTACTIVECAPTION;
    }
    private static final int COLOR_GRADIENTINACTIVECAPTION = (int)28L;
    /**
     * {@snippet lang=c :
     * #define COLOR_GRADIENTINACTIVECAPTION 28
     * }
     */
    public static int COLOR_GRADIENTINACTIVECAPTION() {
        return COLOR_GRADIENTINACTIVECAPTION;
    }
    private static final int COLOR_MENUHILIGHT = (int)29L;
    /**
     * {@snippet lang=c :
     * #define COLOR_MENUHILIGHT 29
     * }
     */
    public static int COLOR_MENUHILIGHT() {
        return COLOR_MENUHILIGHT;
    }
    private static final int COLOR_MENUBAR = (int)30L;
    /**
     * {@snippet lang=c :
     * #define COLOR_MENUBAR 30
     * }
     */
    public static int COLOR_MENUBAR() {
        return COLOR_MENUBAR;
    }
    private static final int GW_HWNDFIRST = (int)0L;
    /**
     * {@snippet lang=c :
     * #define GW_HWNDFIRST 0
     * }
     */
    public static int GW_HWNDFIRST() {
        return GW_HWNDFIRST;
    }
    private static final int GW_HWNDLAST = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GW_HWNDLAST 1
     * }
     */
    public static int GW_HWNDLAST() {
        return GW_HWNDLAST;
    }
    private static final int GW_HWNDNEXT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define GW_HWNDNEXT 2
     * }
     */
    public static int GW_HWNDNEXT() {
        return GW_HWNDNEXT;
    }
    private static final int GW_HWNDPREV = (int)3L;
    /**
     * {@snippet lang=c :
     * #define GW_HWNDPREV 3
     * }
     */
    public static int GW_HWNDPREV() {
        return GW_HWNDPREV;
    }
    private static final int GW_OWNER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define GW_OWNER 4
     * }
     */
    public static int GW_OWNER() {
        return GW_OWNER;
    }
    private static final int GW_CHILD = (int)5L;
    /**
     * {@snippet lang=c :
     * #define GW_CHILD 5
     * }
     */
    public static int GW_CHILD() {
        return GW_CHILD;
    }
    private static final int GW_ENABLEDPOPUP = (int)6L;
    /**
     * {@snippet lang=c :
     * #define GW_ENABLEDPOPUP 6
     * }
     */
    public static int GW_ENABLEDPOPUP() {
        return GW_ENABLEDPOPUP;
    }
    private static final int GW_MAX = (int)6L;
    /**
     * {@snippet lang=c :
     * #define GW_MAX 6
     * }
     */
    public static int GW_MAX() {
        return GW_MAX;
    }
    private static final int SC_SIZE = (int)61440L;
    /**
     * {@snippet lang=c :
     * #define SC_SIZE 61440
     * }
     */
    public static int SC_SIZE() {
        return SC_SIZE;
    }
    private static final int SC_MOVE = (int)61456L;
    /**
     * {@snippet lang=c :
     * #define SC_MOVE 61456
     * }
     */
    public static int SC_MOVE() {
        return SC_MOVE;
    }
    private static final int SC_MINIMIZE = (int)61472L;
    /**
     * {@snippet lang=c :
     * #define SC_MINIMIZE 61472
     * }
     */
    public static int SC_MINIMIZE() {
        return SC_MINIMIZE;
    }
    private static final int SC_MAXIMIZE = (int)61488L;
    /**
     * {@snippet lang=c :
     * #define SC_MAXIMIZE 61488
     * }
     */
    public static int SC_MAXIMIZE() {
        return SC_MAXIMIZE;
    }
    private static final int SC_NEXTWINDOW = (int)61504L;
    /**
     * {@snippet lang=c :
     * #define SC_NEXTWINDOW 61504
     * }
     */
    public static int SC_NEXTWINDOW() {
        return SC_NEXTWINDOW;
    }
    private static final int SC_PREVWINDOW = (int)61520L;
    /**
     * {@snippet lang=c :
     * #define SC_PREVWINDOW 61520
     * }
     */
    public static int SC_PREVWINDOW() {
        return SC_PREVWINDOW;
    }
    private static final int SC_CLOSE = (int)61536L;
    /**
     * {@snippet lang=c :
     * #define SC_CLOSE 61536
     * }
     */
    public static int SC_CLOSE() {
        return SC_CLOSE;
    }
    private static final int SC_VSCROLL = (int)61552L;
    /**
     * {@snippet lang=c :
     * #define SC_VSCROLL 61552
     * }
     */
    public static int SC_VSCROLL() {
        return SC_VSCROLL;
    }
    private static final int SC_HSCROLL = (int)61568L;
    /**
     * {@snippet lang=c :
     * #define SC_HSCROLL 61568
     * }
     */
    public static int SC_HSCROLL() {
        return SC_HSCROLL;
    }
    private static final int SC_MOUSEMENU = (int)61584L;
    /**
     * {@snippet lang=c :
     * #define SC_MOUSEMENU 61584
     * }
     */
    public static int SC_MOUSEMENU() {
        return SC_MOUSEMENU;
    }
    private static final int SC_KEYMENU = (int)61696L;
    /**
     * {@snippet lang=c :
     * #define SC_KEYMENU 61696
     * }
     */
    public static int SC_KEYMENU() {
        return SC_KEYMENU;
    }
    private static final int SC_ARRANGE = (int)61712L;
    /**
     * {@snippet lang=c :
     * #define SC_ARRANGE 61712
     * }
     */
    public static int SC_ARRANGE() {
        return SC_ARRANGE;
    }
    private static final int SC_RESTORE = (int)61728L;
    /**
     * {@snippet lang=c :
     * #define SC_RESTORE 61728
     * }
     */
    public static int SC_RESTORE() {
        return SC_RESTORE;
    }
    private static final int SC_TASKLIST = (int)61744L;
    /**
     * {@snippet lang=c :
     * #define SC_TASKLIST 61744
     * }
     */
    public static int SC_TASKLIST() {
        return SC_TASKLIST;
    }
    private static final int SC_SCREENSAVE = (int)61760L;
    /**
     * {@snippet lang=c :
     * #define SC_SCREENSAVE 61760
     * }
     */
    public static int SC_SCREENSAVE() {
        return SC_SCREENSAVE;
    }
    private static final int SC_HOTKEY = (int)61776L;
    /**
     * {@snippet lang=c :
     * #define SC_HOTKEY 61776
     * }
     */
    public static int SC_HOTKEY() {
        return SC_HOTKEY;
    }
    private static final int SC_DEFAULT = (int)61792L;
    /**
     * {@snippet lang=c :
     * #define SC_DEFAULT 61792
     * }
     */
    public static int SC_DEFAULT() {
        return SC_DEFAULT;
    }
    private static final int SC_MONITORPOWER = (int)61808L;
    /**
     * {@snippet lang=c :
     * #define SC_MONITORPOWER 61808
     * }
     */
    public static int SC_MONITORPOWER() {
        return SC_MONITORPOWER;
    }
    private static final int SC_CONTEXTHELP = (int)61824L;
    /**
     * {@snippet lang=c :
     * #define SC_CONTEXTHELP 61824
     * }
     */
    public static int SC_CONTEXTHELP() {
        return SC_CONTEXTHELP;
    }
    private static final int SC_SEPARATOR = (int)61455L;
    /**
     * {@snippet lang=c :
     * #define SC_SEPARATOR 61455
     * }
     */
    public static int SC_SEPARATOR() {
        return SC_SEPARATOR;
    }
    private static final int SCF_ISSECURE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCF_ISSECURE 1
     * }
     */
    public static int SCF_ISSECURE() {
        return SCF_ISSECURE;
    }
    private static final int IMAGE_BITMAP = (int)0L;
    /**
     * {@snippet lang=c :
     * #define IMAGE_BITMAP 0
     * }
     */
    public static int IMAGE_BITMAP() {
        return IMAGE_BITMAP;
    }
    private static final int IMAGE_ICON = (int)1L;
    /**
     * {@snippet lang=c :
     * #define IMAGE_ICON 1
     * }
     */
    public static int IMAGE_ICON() {
        return IMAGE_ICON;
    }
    private static final int IMAGE_CURSOR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define IMAGE_CURSOR 2
     * }
     */
    public static int IMAGE_CURSOR() {
        return IMAGE_CURSOR;
    }
    private static final int IMAGE_ENHMETAFILE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define IMAGE_ENHMETAFILE 3
     * }
     */
    public static int IMAGE_ENHMETAFILE() {
        return IMAGE_ENHMETAFILE;
    }
    private static final int LR_DEFAULTCOLOR = (int)0L;
    /**
     * {@snippet lang=c :
     * #define LR_DEFAULTCOLOR 0
     * }
     */
    public static int LR_DEFAULTCOLOR() {
        return LR_DEFAULTCOLOR;
    }
    private static final int LR_MONOCHROME = (int)1L;
    /**
     * {@snippet lang=c :
     * #define LR_MONOCHROME 1
     * }
     */
    public static int LR_MONOCHROME() {
        return LR_MONOCHROME;
    }
    private static final int LR_COLOR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define LR_COLOR 2
     * }
     */
    public static int LR_COLOR() {
        return LR_COLOR;
    }
    private static final int LR_COPYRETURNORG = (int)4L;
    /**
     * {@snippet lang=c :
     * #define LR_COPYRETURNORG 4
     * }
     */
    public static int LR_COPYRETURNORG() {
        return LR_COPYRETURNORG;
    }
    private static final int LR_COPYDELETEORG = (int)8L;
    /**
     * {@snippet lang=c :
     * #define LR_COPYDELETEORG 8
     * }
     */
    public static int LR_COPYDELETEORG() {
        return LR_COPYDELETEORG;
    }
    private static final int LR_LOADFROMFILE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define LR_LOADFROMFILE 16
     * }
     */
    public static int LR_LOADFROMFILE() {
        return LR_LOADFROMFILE;
    }
    private static final int LR_LOADTRANSPARENT = (int)32L;
    /**
     * {@snippet lang=c :
     * #define LR_LOADTRANSPARENT 32
     * }
     */
    public static int LR_LOADTRANSPARENT() {
        return LR_LOADTRANSPARENT;
    }
    private static final int LR_DEFAULTSIZE = (int)64L;
    /**
     * {@snippet lang=c :
     * #define LR_DEFAULTSIZE 64
     * }
     */
    public static int LR_DEFAULTSIZE() {
        return LR_DEFAULTSIZE;
    }
    private static final int LR_VGACOLOR = (int)128L;
    /**
     * {@snippet lang=c :
     * #define LR_VGACOLOR 128
     * }
     */
    public static int LR_VGACOLOR() {
        return LR_VGACOLOR;
    }
    private static final int LR_LOADMAP3DCOLORS = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define LR_LOADMAP3DCOLORS 4096
     * }
     */
    public static int LR_LOADMAP3DCOLORS() {
        return LR_LOADMAP3DCOLORS;
    }
    private static final int LR_CREATEDIBSECTION = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define LR_CREATEDIBSECTION 8192
     * }
     */
    public static int LR_CREATEDIBSECTION() {
        return LR_CREATEDIBSECTION;
    }
    private static final int LR_COPYFROMRESOURCE = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define LR_COPYFROMRESOURCE 16384
     * }
     */
    public static int LR_COPYFROMRESOURCE() {
        return LR_COPYFROMRESOURCE;
    }
    private static final int LR_SHARED = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define LR_SHARED 32768
     * }
     */
    public static int LR_SHARED() {
        return LR_SHARED;
    }
    private static final int DI_MASK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DI_MASK 1
     * }
     */
    public static int DI_MASK() {
        return DI_MASK;
    }
    private static final int DI_IMAGE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DI_IMAGE 2
     * }
     */
    public static int DI_IMAGE() {
        return DI_IMAGE;
    }
    private static final int DI_NORMAL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DI_NORMAL 3
     * }
     */
    public static int DI_NORMAL() {
        return DI_NORMAL;
    }
    private static final int DI_COMPAT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DI_COMPAT 4
     * }
     */
    public static int DI_COMPAT() {
        return DI_COMPAT;
    }
    private static final int DI_DEFAULTSIZE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DI_DEFAULTSIZE 8
     * }
     */
    public static int DI_DEFAULTSIZE() {
        return DI_DEFAULTSIZE;
    }
    private static final int DI_NOMIRROR = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DI_NOMIRROR 16
     * }
     */
    public static int DI_NOMIRROR() {
        return DI_NOMIRROR;
    }
    private static final int RES_ICON = (int)1L;
    /**
     * {@snippet lang=c :
     * #define RES_ICON 1
     * }
     */
    public static int RES_ICON() {
        return RES_ICON;
    }
    private static final int RES_CURSOR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define RES_CURSOR 2
     * }
     */
    public static int RES_CURSOR() {
        return RES_CURSOR;
    }
    private static final int ORD_LANGDRIVER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ORD_LANGDRIVER 1
     * }
     */
    public static int ORD_LANGDRIVER() {
        return ORD_LANGDRIVER;
    }
    private static final int IDOK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define IDOK 1
     * }
     */
    public static int IDOK() {
        return IDOK;
    }
    private static final int IDCANCEL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define IDCANCEL 2
     * }
     */
    public static int IDCANCEL() {
        return IDCANCEL;
    }
    private static final int IDABORT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define IDABORT 3
     * }
     */
    public static int IDABORT() {
        return IDABORT;
    }
    private static final int IDRETRY = (int)4L;
    /**
     * {@snippet lang=c :
     * #define IDRETRY 4
     * }
     */
    public static int IDRETRY() {
        return IDRETRY;
    }
    private static final int IDIGNORE = (int)5L;
    /**
     * {@snippet lang=c :
     * #define IDIGNORE 5
     * }
     */
    public static int IDIGNORE() {
        return IDIGNORE;
    }
    private static final int IDYES = (int)6L;
    /**
     * {@snippet lang=c :
     * #define IDYES 6
     * }
     */
    public static int IDYES() {
        return IDYES;
    }
    private static final int IDNO = (int)7L;
    /**
     * {@snippet lang=c :
     * #define IDNO 7
     * }
     */
    public static int IDNO() {
        return IDNO;
    }
    private static final int IDCLOSE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define IDCLOSE 8
     * }
     */
    public static int IDCLOSE() {
        return IDCLOSE;
    }
    private static final int IDHELP = (int)9L;
    /**
     * {@snippet lang=c :
     * #define IDHELP 9
     * }
     */
    public static int IDHELP() {
        return IDHELP;
    }
    private static final int IDTRYAGAIN = (int)10L;
    /**
     * {@snippet lang=c :
     * #define IDTRYAGAIN 10
     * }
     */
    public static int IDTRYAGAIN() {
        return IDTRYAGAIN;
    }
    private static final int IDCONTINUE = (int)11L;
    /**
     * {@snippet lang=c :
     * #define IDCONTINUE 11
     * }
     */
    public static int IDCONTINUE() {
        return IDCONTINUE;
    }
    private static final int IDTIMEOUT = (int)32000L;
    /**
     * {@snippet lang=c :
     * #define IDTIMEOUT 32000
     * }
     */
    public static int IDTIMEOUT() {
        return IDTIMEOUT;
    }
    private static final int EN_SETFOCUS = (int)256L;
    /**
     * {@snippet lang=c :
     * #define EN_SETFOCUS 256
     * }
     */
    public static int EN_SETFOCUS() {
        return EN_SETFOCUS;
    }
    private static final int EN_KILLFOCUS = (int)512L;
    /**
     * {@snippet lang=c :
     * #define EN_KILLFOCUS 512
     * }
     */
    public static int EN_KILLFOCUS() {
        return EN_KILLFOCUS;
    }
    private static final int EN_CHANGE = (int)768L;
    /**
     * {@snippet lang=c :
     * #define EN_CHANGE 768
     * }
     */
    public static int EN_CHANGE() {
        return EN_CHANGE;
    }
    private static final int EN_UPDATE = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define EN_UPDATE 1024
     * }
     */
    public static int EN_UPDATE() {
        return EN_UPDATE;
    }
    private static final int EN_ERRSPACE = (int)1280L;
    /**
     * {@snippet lang=c :
     * #define EN_ERRSPACE 1280
     * }
     */
    public static int EN_ERRSPACE() {
        return EN_ERRSPACE;
    }
    private static final int EN_MAXTEXT = (int)1281L;
    /**
     * {@snippet lang=c :
     * #define EN_MAXTEXT 1281
     * }
     */
    public static int EN_MAXTEXT() {
        return EN_MAXTEXT;
    }
    private static final int EN_HSCROLL = (int)1537L;
    /**
     * {@snippet lang=c :
     * #define EN_HSCROLL 1537
     * }
     */
    public static int EN_HSCROLL() {
        return EN_HSCROLL;
    }
    private static final int EN_VSCROLL = (int)1538L;
    /**
     * {@snippet lang=c :
     * #define EN_VSCROLL 1538
     * }
     */
    public static int EN_VSCROLL() {
        return EN_VSCROLL;
    }
    private static final int EN_ALIGN_LTR_EC = (int)1792L;
    /**
     * {@snippet lang=c :
     * #define EN_ALIGN_LTR_EC 1792
     * }
     */
    public static int EN_ALIGN_LTR_EC() {
        return EN_ALIGN_LTR_EC;
    }
    private static final int EN_ALIGN_RTL_EC = (int)1793L;
    /**
     * {@snippet lang=c :
     * #define EN_ALIGN_RTL_EC 1793
     * }
     */
    public static int EN_ALIGN_RTL_EC() {
        return EN_ALIGN_RTL_EC;
    }
    private static final int EN_BEFORE_PASTE = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define EN_BEFORE_PASTE 2048
     * }
     */
    public static int EN_BEFORE_PASTE() {
        return EN_BEFORE_PASTE;
    }
    private static final int EN_AFTER_PASTE = (int)2049L;
    /**
     * {@snippet lang=c :
     * #define EN_AFTER_PASTE 2049
     * }
     */
    public static int EN_AFTER_PASTE() {
        return EN_AFTER_PASTE;
    }
    private static final int EC_LEFTMARGIN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EC_LEFTMARGIN 1
     * }
     */
    public static int EC_LEFTMARGIN() {
        return EC_LEFTMARGIN;
    }
    private static final int EC_RIGHTMARGIN = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EC_RIGHTMARGIN 2
     * }
     */
    public static int EC_RIGHTMARGIN() {
        return EC_RIGHTMARGIN;
    }
    private static final int EC_USEFONTINFO = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define EC_USEFONTINFO 65535
     * }
     */
    public static int EC_USEFONTINFO() {
        return EC_USEFONTINFO;
    }
    private static final int EMSIS_COMPOSITIONSTRING = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EMSIS_COMPOSITIONSTRING 1
     * }
     */
    public static int EMSIS_COMPOSITIONSTRING() {
        return EMSIS_COMPOSITIONSTRING;
    }
    private static final int EIMES_GETCOMPSTRATONCE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EIMES_GETCOMPSTRATONCE 1
     * }
     */
    public static int EIMES_GETCOMPSTRATONCE() {
        return EIMES_GETCOMPSTRATONCE;
    }
    private static final int EIMES_CANCELCOMPSTRINFOCUS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EIMES_CANCELCOMPSTRINFOCUS 2
     * }
     */
    public static int EIMES_CANCELCOMPSTRINFOCUS() {
        return EIMES_CANCELCOMPSTRINFOCUS;
    }
    private static final int EIMES_COMPLETECOMPSTRKILLFOCUS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define EIMES_COMPLETECOMPSTRKILLFOCUS 4
     * }
     */
    public static int EIMES_COMPLETECOMPSTRKILLFOCUS() {
        return EIMES_COMPLETECOMPSTRKILLFOCUS;
    }
    private static final int EM_GETSEL = (int)176L;
    /**
     * {@snippet lang=c :
     * #define EM_GETSEL 176
     * }
     */
    public static int EM_GETSEL() {
        return EM_GETSEL;
    }
    private static final int EM_SETSEL = (int)177L;
    /**
     * {@snippet lang=c :
     * #define EM_SETSEL 177
     * }
     */
    public static int EM_SETSEL() {
        return EM_SETSEL;
    }
    private static final int EM_GETRECT = (int)178L;
    /**
     * {@snippet lang=c :
     * #define EM_GETRECT 178
     * }
     */
    public static int EM_GETRECT() {
        return EM_GETRECT;
    }
    private static final int EM_SETRECT = (int)179L;
    /**
     * {@snippet lang=c :
     * #define EM_SETRECT 179
     * }
     */
    public static int EM_SETRECT() {
        return EM_SETRECT;
    }
    private static final int EM_SETRECTNP = (int)180L;
    /**
     * {@snippet lang=c :
     * #define EM_SETRECTNP 180
     * }
     */
    public static int EM_SETRECTNP() {
        return EM_SETRECTNP;
    }
    private static final int EM_SCROLL = (int)181L;
    /**
     * {@snippet lang=c :
     * #define EM_SCROLL 181
     * }
     */
    public static int EM_SCROLL() {
        return EM_SCROLL;
    }
    private static final int EM_LINESCROLL = (int)182L;
    /**
     * {@snippet lang=c :
     * #define EM_LINESCROLL 182
     * }
     */
    public static int EM_LINESCROLL() {
        return EM_LINESCROLL;
    }
    private static final int EM_SCROLLCARET = (int)183L;
    /**
     * {@snippet lang=c :
     * #define EM_SCROLLCARET 183
     * }
     */
    public static int EM_SCROLLCARET() {
        return EM_SCROLLCARET;
    }
    private static final int EM_GETMODIFY = (int)184L;
    /**
     * {@snippet lang=c :
     * #define EM_GETMODIFY 184
     * }
     */
    public static int EM_GETMODIFY() {
        return EM_GETMODIFY;
    }
    private static final int EM_SETMODIFY = (int)185L;
    /**
     * {@snippet lang=c :
     * #define EM_SETMODIFY 185
     * }
     */
    public static int EM_SETMODIFY() {
        return EM_SETMODIFY;
    }
    private static final int EM_GETLINECOUNT = (int)186L;
    /**
     * {@snippet lang=c :
     * #define EM_GETLINECOUNT 186
     * }
     */
    public static int EM_GETLINECOUNT() {
        return EM_GETLINECOUNT;
    }
    private static final int EM_LINEINDEX = (int)187L;
    /**
     * {@snippet lang=c :
     * #define EM_LINEINDEX 187
     * }
     */
    public static int EM_LINEINDEX() {
        return EM_LINEINDEX;
    }
    private static final int EM_SETHANDLE = (int)188L;
    /**
     * {@snippet lang=c :
     * #define EM_SETHANDLE 188
     * }
     */
    public static int EM_SETHANDLE() {
        return EM_SETHANDLE;
    }
    private static final int EM_GETHANDLE = (int)189L;
    /**
     * {@snippet lang=c :
     * #define EM_GETHANDLE 189
     * }
     */
    public static int EM_GETHANDLE() {
        return EM_GETHANDLE;
    }
    private static final int EM_GETTHUMB = (int)190L;
    /**
     * {@snippet lang=c :
     * #define EM_GETTHUMB 190
     * }
     */
    public static int EM_GETTHUMB() {
        return EM_GETTHUMB;
    }
    private static final int EM_LINELENGTH = (int)193L;
    /**
     * {@snippet lang=c :
     * #define EM_LINELENGTH 193
     * }
     */
    public static int EM_LINELENGTH() {
        return EM_LINELENGTH;
    }
    private static final int EM_REPLACESEL = (int)194L;
    /**
     * {@snippet lang=c :
     * #define EM_REPLACESEL 194
     * }
     */
    public static int EM_REPLACESEL() {
        return EM_REPLACESEL;
    }
    private static final int EM_GETLINE = (int)196L;
    /**
     * {@snippet lang=c :
     * #define EM_GETLINE 196
     * }
     */
    public static int EM_GETLINE() {
        return EM_GETLINE;
    }
    private static final int EM_LIMITTEXT = (int)197L;
    /**
     * {@snippet lang=c :
     * #define EM_LIMITTEXT 197
     * }
     */
    public static int EM_LIMITTEXT() {
        return EM_LIMITTEXT;
    }
    private static final int EM_CANUNDO = (int)198L;
    /**
     * {@snippet lang=c :
     * #define EM_CANUNDO 198
     * }
     */
    public static int EM_CANUNDO() {
        return EM_CANUNDO;
    }
    private static final int EM_UNDO = (int)199L;
    /**
     * {@snippet lang=c :
     * #define EM_UNDO 199
     * }
     */
    public static int EM_UNDO() {
        return EM_UNDO;
    }
    private static final int EM_FMTLINES = (int)200L;
    /**
     * {@snippet lang=c :
     * #define EM_FMTLINES 200
     * }
     */
    public static int EM_FMTLINES() {
        return EM_FMTLINES;
    }
    private static final int EM_LINEFROMCHAR = (int)201L;
    /**
     * {@snippet lang=c :
     * #define EM_LINEFROMCHAR 201
     * }
     */
    public static int EM_LINEFROMCHAR() {
        return EM_LINEFROMCHAR;
    }
    private static final int EM_SETTABSTOPS = (int)203L;
    /**
     * {@snippet lang=c :
     * #define EM_SETTABSTOPS 203
     * }
     */
    public static int EM_SETTABSTOPS() {
        return EM_SETTABSTOPS;
    }
    private static final int EM_SETPASSWORDCHAR = (int)204L;
    /**
     * {@snippet lang=c :
     * #define EM_SETPASSWORDCHAR 204
     * }
     */
    public static int EM_SETPASSWORDCHAR() {
        return EM_SETPASSWORDCHAR;
    }
    private static final int EM_EMPTYUNDOBUFFER = (int)205L;
    /**
     * {@snippet lang=c :
     * #define EM_EMPTYUNDOBUFFER 205
     * }
     */
    public static int EM_EMPTYUNDOBUFFER() {
        return EM_EMPTYUNDOBUFFER;
    }
    private static final int EM_GETFIRSTVISIBLELINE = (int)206L;
    /**
     * {@snippet lang=c :
     * #define EM_GETFIRSTVISIBLELINE 206
     * }
     */
    public static int EM_GETFIRSTVISIBLELINE() {
        return EM_GETFIRSTVISIBLELINE;
    }
    private static final int EM_SETREADONLY = (int)207L;
    /**
     * {@snippet lang=c :
     * #define EM_SETREADONLY 207
     * }
     */
    public static int EM_SETREADONLY() {
        return EM_SETREADONLY;
    }
    private static final int EM_SETWORDBREAKPROC = (int)208L;
    /**
     * {@snippet lang=c :
     * #define EM_SETWORDBREAKPROC 208
     * }
     */
    public static int EM_SETWORDBREAKPROC() {
        return EM_SETWORDBREAKPROC;
    }
    private static final int EM_GETWORDBREAKPROC = (int)209L;
    /**
     * {@snippet lang=c :
     * #define EM_GETWORDBREAKPROC 209
     * }
     */
    public static int EM_GETWORDBREAKPROC() {
        return EM_GETWORDBREAKPROC;
    }
    private static final int EM_GETPASSWORDCHAR = (int)210L;
    /**
     * {@snippet lang=c :
     * #define EM_GETPASSWORDCHAR 210
     * }
     */
    public static int EM_GETPASSWORDCHAR() {
        return EM_GETPASSWORDCHAR;
    }
    private static final int EM_SETMARGINS = (int)211L;
    /**
     * {@snippet lang=c :
     * #define EM_SETMARGINS 211
     * }
     */
    public static int EM_SETMARGINS() {
        return EM_SETMARGINS;
    }
    private static final int EM_GETMARGINS = (int)212L;
    /**
     * {@snippet lang=c :
     * #define EM_GETMARGINS 212
     * }
     */
    public static int EM_GETMARGINS() {
        return EM_GETMARGINS;
    }
    private static final int EM_GETLIMITTEXT = (int)213L;
    /**
     * {@snippet lang=c :
     * #define EM_GETLIMITTEXT 213
     * }
     */
    public static int EM_GETLIMITTEXT() {
        return EM_GETLIMITTEXT;
    }
    private static final int EM_POSFROMCHAR = (int)214L;
    /**
     * {@snippet lang=c :
     * #define EM_POSFROMCHAR 214
     * }
     */
    public static int EM_POSFROMCHAR() {
        return EM_POSFROMCHAR;
    }
    private static final int EM_CHARFROMPOS = (int)215L;
    /**
     * {@snippet lang=c :
     * #define EM_CHARFROMPOS 215
     * }
     */
    public static int EM_CHARFROMPOS() {
        return EM_CHARFROMPOS;
    }
    private static final int EM_SETIMESTATUS = (int)216L;
    /**
     * {@snippet lang=c :
     * #define EM_SETIMESTATUS 216
     * }
     */
    public static int EM_SETIMESTATUS() {
        return EM_SETIMESTATUS;
    }
    private static final int EM_GETIMESTATUS = (int)217L;
    /**
     * {@snippet lang=c :
     * #define EM_GETIMESTATUS 217
     * }
     */
    public static int EM_GETIMESTATUS() {
        return EM_GETIMESTATUS;
    }
    private static final int EM_ENABLEFEATURE = (int)218L;
    /**
     * {@snippet lang=c :
     * #define EM_ENABLEFEATURE 218
     * }
     */
    public static int EM_ENABLEFEATURE() {
        return EM_ENABLEFEATURE;
    }
    private static final int WB_LEFT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WB_LEFT 0
     * }
     */
    public static int WB_LEFT() {
        return WB_LEFT;
    }
    private static final int WB_RIGHT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WB_RIGHT 1
     * }
     */
    public static int WB_RIGHT() {
        return WB_RIGHT;
    }
    private static final int WB_ISDELIMITER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WB_ISDELIMITER 2
     * }
     */
    public static int WB_ISDELIMITER() {
        return WB_ISDELIMITER;
    }
    private static final int BN_CLICKED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define BN_CLICKED 0
     * }
     */
    public static int BN_CLICKED() {
        return BN_CLICKED;
    }
    private static final int BN_PAINT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define BN_PAINT 1
     * }
     */
    public static int BN_PAINT() {
        return BN_PAINT;
    }
    private static final int BN_HILITE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define BN_HILITE 2
     * }
     */
    public static int BN_HILITE() {
        return BN_HILITE;
    }
    private static final int BN_UNHILITE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define BN_UNHILITE 3
     * }
     */
    public static int BN_UNHILITE() {
        return BN_UNHILITE;
    }
    private static final int BN_DISABLE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define BN_DISABLE 4
     * }
     */
    public static int BN_DISABLE() {
        return BN_DISABLE;
    }
    private static final int BN_DOUBLECLICKED = (int)5L;
    /**
     * {@snippet lang=c :
     * #define BN_DOUBLECLICKED 5
     * }
     */
    public static int BN_DOUBLECLICKED() {
        return BN_DOUBLECLICKED;
    }
    private static final int BN_SETFOCUS = (int)6L;
    /**
     * {@snippet lang=c :
     * #define BN_SETFOCUS 6
     * }
     */
    public static int BN_SETFOCUS() {
        return BN_SETFOCUS;
    }
    private static final int BN_KILLFOCUS = (int)7L;
    /**
     * {@snippet lang=c :
     * #define BN_KILLFOCUS 7
     * }
     */
    public static int BN_KILLFOCUS() {
        return BN_KILLFOCUS;
    }
    private static final int BM_GETCHECK = (int)240L;
    /**
     * {@snippet lang=c :
     * #define BM_GETCHECK 240
     * }
     */
    public static int BM_GETCHECK() {
        return BM_GETCHECK;
    }
    private static final int BM_SETCHECK = (int)241L;
    /**
     * {@snippet lang=c :
     * #define BM_SETCHECK 241
     * }
     */
    public static int BM_SETCHECK() {
        return BM_SETCHECK;
    }
    private static final int BM_GETSTATE = (int)242L;
    /**
     * {@snippet lang=c :
     * #define BM_GETSTATE 242
     * }
     */
    public static int BM_GETSTATE() {
        return BM_GETSTATE;
    }
    private static final int BM_SETSTATE = (int)243L;
    /**
     * {@snippet lang=c :
     * #define BM_SETSTATE 243
     * }
     */
    public static int BM_SETSTATE() {
        return BM_SETSTATE;
    }
    private static final int BM_SETSTYLE = (int)244L;
    /**
     * {@snippet lang=c :
     * #define BM_SETSTYLE 244
     * }
     */
    public static int BM_SETSTYLE() {
        return BM_SETSTYLE;
    }
    private static final int BM_CLICK = (int)245L;
    /**
     * {@snippet lang=c :
     * #define BM_CLICK 245
     * }
     */
    public static int BM_CLICK() {
        return BM_CLICK;
    }
    private static final int BM_GETIMAGE = (int)246L;
    /**
     * {@snippet lang=c :
     * #define BM_GETIMAGE 246
     * }
     */
    public static int BM_GETIMAGE() {
        return BM_GETIMAGE;
    }
    private static final int BM_SETIMAGE = (int)247L;
    /**
     * {@snippet lang=c :
     * #define BM_SETIMAGE 247
     * }
     */
    public static int BM_SETIMAGE() {
        return BM_SETIMAGE;
    }
    private static final int BM_SETDONTCLICK = (int)248L;
    /**
     * {@snippet lang=c :
     * #define BM_SETDONTCLICK 248
     * }
     */
    public static int BM_SETDONTCLICK() {
        return BM_SETDONTCLICK;
    }
    private static final int BST_UNCHECKED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define BST_UNCHECKED 0
     * }
     */
    public static int BST_UNCHECKED() {
        return BST_UNCHECKED;
    }
    private static final int BST_CHECKED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define BST_CHECKED 1
     * }
     */
    public static int BST_CHECKED() {
        return BST_CHECKED;
    }
    private static final int BST_INDETERMINATE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define BST_INDETERMINATE 2
     * }
     */
    public static int BST_INDETERMINATE() {
        return BST_INDETERMINATE;
    }
    private static final int BST_PUSHED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define BST_PUSHED 4
     * }
     */
    public static int BST_PUSHED() {
        return BST_PUSHED;
    }
    private static final int BST_FOCUS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define BST_FOCUS 8
     * }
     */
    public static int BST_FOCUS() {
        return BST_FOCUS;
    }
    private static final int STM_SETICON = (int)368L;
    /**
     * {@snippet lang=c :
     * #define STM_SETICON 368
     * }
     */
    public static int STM_SETICON() {
        return STM_SETICON;
    }
    private static final int STM_GETICON = (int)369L;
    /**
     * {@snippet lang=c :
     * #define STM_GETICON 369
     * }
     */
    public static int STM_GETICON() {
        return STM_GETICON;
    }
    private static final int STM_SETIMAGE = (int)370L;
    /**
     * {@snippet lang=c :
     * #define STM_SETIMAGE 370
     * }
     */
    public static int STM_SETIMAGE() {
        return STM_SETIMAGE;
    }
    private static final int STM_GETIMAGE = (int)371L;
    /**
     * {@snippet lang=c :
     * #define STM_GETIMAGE 371
     * }
     */
    public static int STM_GETIMAGE() {
        return STM_GETIMAGE;
    }
    private static final int STN_CLICKED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define STN_CLICKED 0
     * }
     */
    public static int STN_CLICKED() {
        return STN_CLICKED;
    }
    private static final int STN_DBLCLK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STN_DBLCLK 1
     * }
     */
    public static int STN_DBLCLK() {
        return STN_DBLCLK;
    }
    private static final int STN_ENABLE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define STN_ENABLE 2
     * }
     */
    public static int STN_ENABLE() {
        return STN_ENABLE;
    }
    private static final int STN_DISABLE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define STN_DISABLE 3
     * }
     */
    public static int STN_DISABLE() {
        return STN_DISABLE;
    }
    private static final int STM_MSGMAX = (int)372L;
    /**
     * {@snippet lang=c :
     * #define STM_MSGMAX 372
     * }
     */
    public static int STM_MSGMAX() {
        return STM_MSGMAX;
    }
    private static final int DWL_MSGRESULT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DWL_MSGRESULT 0
     * }
     */
    public static int DWL_MSGRESULT() {
        return DWL_MSGRESULT;
    }
    private static final int DWL_DLGPROC = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DWL_DLGPROC 4
     * }
     */
    public static int DWL_DLGPROC() {
        return DWL_DLGPROC;
    }
    private static final int DWL_USER = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DWL_USER 8
     * }
     */
    public static int DWL_USER() {
        return DWL_USER;
    }
    private static final int DWLP_MSGRESULT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DWLP_MSGRESULT 0
     * }
     */
    public static int DWLP_MSGRESULT() {
        return DWLP_MSGRESULT;
    }
    private static final int DDL_READWRITE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DDL_READWRITE 0
     * }
     */
    public static int DDL_READWRITE() {
        return DDL_READWRITE;
    }
    private static final int DDL_READONLY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DDL_READONLY 1
     * }
     */
    public static int DDL_READONLY() {
        return DDL_READONLY;
    }
    private static final int DDL_HIDDEN = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DDL_HIDDEN 2
     * }
     */
    public static int DDL_HIDDEN() {
        return DDL_HIDDEN;
    }
    private static final int DDL_SYSTEM = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DDL_SYSTEM 4
     * }
     */
    public static int DDL_SYSTEM() {
        return DDL_SYSTEM;
    }
    private static final int DDL_DIRECTORY = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DDL_DIRECTORY 16
     * }
     */
    public static int DDL_DIRECTORY() {
        return DDL_DIRECTORY;
    }
    private static final int DDL_ARCHIVE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define DDL_ARCHIVE 32
     * }
     */
    public static int DDL_ARCHIVE() {
        return DDL_ARCHIVE;
    }
    private static final int DDL_POSTMSGS = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define DDL_POSTMSGS 8192
     * }
     */
    public static int DDL_POSTMSGS() {
        return DDL_POSTMSGS;
    }
    private static final int DDL_DRIVES = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define DDL_DRIVES 16384
     * }
     */
    public static int DDL_DRIVES() {
        return DDL_DRIVES;
    }
    private static final int DDL_EXCLUSIVE = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define DDL_EXCLUSIVE 32768
     * }
     */
    public static int DDL_EXCLUSIVE() {
        return DDL_EXCLUSIVE;
    }
    private static final int DC_HASDEFID = (int)21323L;
    /**
     * {@snippet lang=c :
     * #define DC_HASDEFID 21323
     * }
     */
    public static int DC_HASDEFID() {
        return DC_HASDEFID;
    }
    private static final int DLGC_WANTARROWS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DLGC_WANTARROWS 1
     * }
     */
    public static int DLGC_WANTARROWS() {
        return DLGC_WANTARROWS;
    }
    private static final int DLGC_WANTTAB = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DLGC_WANTTAB 2
     * }
     */
    public static int DLGC_WANTTAB() {
        return DLGC_WANTTAB;
    }
    private static final int DLGC_WANTALLKEYS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DLGC_WANTALLKEYS 4
     * }
     */
    public static int DLGC_WANTALLKEYS() {
        return DLGC_WANTALLKEYS;
    }
    private static final int DLGC_WANTMESSAGE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DLGC_WANTMESSAGE 4
     * }
     */
    public static int DLGC_WANTMESSAGE() {
        return DLGC_WANTMESSAGE;
    }
    private static final int DLGC_HASSETSEL = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DLGC_HASSETSEL 8
     * }
     */
    public static int DLGC_HASSETSEL() {
        return DLGC_HASSETSEL;
    }
    private static final int DLGC_DEFPUSHBUTTON = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DLGC_DEFPUSHBUTTON 16
     * }
     */
    public static int DLGC_DEFPUSHBUTTON() {
        return DLGC_DEFPUSHBUTTON;
    }
    private static final int DLGC_UNDEFPUSHBUTTON = (int)32L;
    /**
     * {@snippet lang=c :
     * #define DLGC_UNDEFPUSHBUTTON 32
     * }
     */
    public static int DLGC_UNDEFPUSHBUTTON() {
        return DLGC_UNDEFPUSHBUTTON;
    }
    private static final int DLGC_RADIOBUTTON = (int)64L;
    /**
     * {@snippet lang=c :
     * #define DLGC_RADIOBUTTON 64
     * }
     */
    public static int DLGC_RADIOBUTTON() {
        return DLGC_RADIOBUTTON;
    }
    private static final int DLGC_WANTCHARS = (int)128L;
    /**
     * {@snippet lang=c :
     * #define DLGC_WANTCHARS 128
     * }
     */
    public static int DLGC_WANTCHARS() {
        return DLGC_WANTCHARS;
    }
    private static final int DLGC_STATIC = (int)256L;
    /**
     * {@snippet lang=c :
     * #define DLGC_STATIC 256
     * }
     */
    public static int DLGC_STATIC() {
        return DLGC_STATIC;
    }
    private static final int DLGC_BUTTON = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define DLGC_BUTTON 8192
     * }
     */
    public static int DLGC_BUTTON() {
        return DLGC_BUTTON;
    }
    private static final int LB_OKAY = (int)0L;
    /**
     * {@snippet lang=c :
     * #define LB_OKAY 0
     * }
     */
    public static int LB_OKAY() {
        return LB_OKAY;
    }
    private static final int LBN_SELCHANGE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define LBN_SELCHANGE 1
     * }
     */
    public static int LBN_SELCHANGE() {
        return LBN_SELCHANGE;
    }
    private static final int LBN_DBLCLK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define LBN_DBLCLK 2
     * }
     */
    public static int LBN_DBLCLK() {
        return LBN_DBLCLK;
    }
    private static final int LBN_SELCANCEL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define LBN_SELCANCEL 3
     * }
     */
    public static int LBN_SELCANCEL() {
        return LBN_SELCANCEL;
    }
    private static final int LBN_SETFOCUS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define LBN_SETFOCUS 4
     * }
     */
    public static int LBN_SETFOCUS() {
        return LBN_SETFOCUS;
    }
    private static final int LBN_KILLFOCUS = (int)5L;
    /**
     * {@snippet lang=c :
     * #define LBN_KILLFOCUS 5
     * }
     */
    public static int LBN_KILLFOCUS() {
        return LBN_KILLFOCUS;
    }
    private static final int LB_ADDSTRING = (int)384L;
    /**
     * {@snippet lang=c :
     * #define LB_ADDSTRING 384
     * }
     */
    public static int LB_ADDSTRING() {
        return LB_ADDSTRING;
    }
    private static final int LB_INSERTSTRING = (int)385L;
    /**
     * {@snippet lang=c :
     * #define LB_INSERTSTRING 385
     * }
     */
    public static int LB_INSERTSTRING() {
        return LB_INSERTSTRING;
    }
    private static final int LB_DELETESTRING = (int)386L;
    /**
     * {@snippet lang=c :
     * #define LB_DELETESTRING 386
     * }
     */
    public static int LB_DELETESTRING() {
        return LB_DELETESTRING;
    }
    private static final int LB_SELITEMRANGEEX = (int)387L;
    /**
     * {@snippet lang=c :
     * #define LB_SELITEMRANGEEX 387
     * }
     */
    public static int LB_SELITEMRANGEEX() {
        return LB_SELITEMRANGEEX;
    }
    private static final int LB_RESETCONTENT = (int)388L;
    /**
     * {@snippet lang=c :
     * #define LB_RESETCONTENT 388
     * }
     */
    public static int LB_RESETCONTENT() {
        return LB_RESETCONTENT;
    }
    private static final int LB_SETSEL = (int)389L;
    /**
     * {@snippet lang=c :
     * #define LB_SETSEL 389
     * }
     */
    public static int LB_SETSEL() {
        return LB_SETSEL;
    }
    private static final int LB_SETCURSEL = (int)390L;
    /**
     * {@snippet lang=c :
     * #define LB_SETCURSEL 390
     * }
     */
    public static int LB_SETCURSEL() {
        return LB_SETCURSEL;
    }
    private static final int LB_GETSEL = (int)391L;
    /**
     * {@snippet lang=c :
     * #define LB_GETSEL 391
     * }
     */
    public static int LB_GETSEL() {
        return LB_GETSEL;
    }
    private static final int LB_GETCURSEL = (int)392L;
    /**
     * {@snippet lang=c :
     * #define LB_GETCURSEL 392
     * }
     */
    public static int LB_GETCURSEL() {
        return LB_GETCURSEL;
    }
    private static final int LB_GETTEXT = (int)393L;
    /**
     * {@snippet lang=c :
     * #define LB_GETTEXT 393
     * }
     */
    public static int LB_GETTEXT() {
        return LB_GETTEXT;
    }
    private static final int LB_GETTEXTLEN = (int)394L;
    /**
     * {@snippet lang=c :
     * #define LB_GETTEXTLEN 394
     * }
     */
    public static int LB_GETTEXTLEN() {
        return LB_GETTEXTLEN;
    }
    private static final int LB_GETCOUNT = (int)395L;
    /**
     * {@snippet lang=c :
     * #define LB_GETCOUNT 395
     * }
     */
    public static int LB_GETCOUNT() {
        return LB_GETCOUNT;
    }
    private static final int LB_SELECTSTRING = (int)396L;
    /**
     * {@snippet lang=c :
     * #define LB_SELECTSTRING 396
     * }
     */
    public static int LB_SELECTSTRING() {
        return LB_SELECTSTRING;
    }
    private static final int LB_DIR = (int)397L;
    /**
     * {@snippet lang=c :
     * #define LB_DIR 397
     * }
     */
    public static int LB_DIR() {
        return LB_DIR;
    }
    private static final int LB_GETTOPINDEX = (int)398L;
    /**
     * {@snippet lang=c :
     * #define LB_GETTOPINDEX 398
     * }
     */
    public static int LB_GETTOPINDEX() {
        return LB_GETTOPINDEX;
    }
    private static final int LB_FINDSTRING = (int)399L;
    /**
     * {@snippet lang=c :
     * #define LB_FINDSTRING 399
     * }
     */
    public static int LB_FINDSTRING() {
        return LB_FINDSTRING;
    }
    private static final int LB_GETSELCOUNT = (int)400L;
    /**
     * {@snippet lang=c :
     * #define LB_GETSELCOUNT 400
     * }
     */
    public static int LB_GETSELCOUNT() {
        return LB_GETSELCOUNT;
    }
    private static final int LB_GETSELITEMS = (int)401L;
    /**
     * {@snippet lang=c :
     * #define LB_GETSELITEMS 401
     * }
     */
    public static int LB_GETSELITEMS() {
        return LB_GETSELITEMS;
    }
    private static final int LB_SETTABSTOPS = (int)402L;
    /**
     * {@snippet lang=c :
     * #define LB_SETTABSTOPS 402
     * }
     */
    public static int LB_SETTABSTOPS() {
        return LB_SETTABSTOPS;
    }
    private static final int LB_GETHORIZONTALEXTENT = (int)403L;
    /**
     * {@snippet lang=c :
     * #define LB_GETHORIZONTALEXTENT 403
     * }
     */
    public static int LB_GETHORIZONTALEXTENT() {
        return LB_GETHORIZONTALEXTENT;
    }
    private static final int LB_SETHORIZONTALEXTENT = (int)404L;
    /**
     * {@snippet lang=c :
     * #define LB_SETHORIZONTALEXTENT 404
     * }
     */
    public static int LB_SETHORIZONTALEXTENT() {
        return LB_SETHORIZONTALEXTENT;
    }
    private static final int LB_SETCOLUMNWIDTH = (int)405L;
    /**
     * {@snippet lang=c :
     * #define LB_SETCOLUMNWIDTH 405
     * }
     */
    public static int LB_SETCOLUMNWIDTH() {
        return LB_SETCOLUMNWIDTH;
    }
    private static final int LB_ADDFILE = (int)406L;
    /**
     * {@snippet lang=c :
     * #define LB_ADDFILE 406
     * }
     */
    public static int LB_ADDFILE() {
        return LB_ADDFILE;
    }
    private static final int LB_SETTOPINDEX = (int)407L;
    /**
     * {@snippet lang=c :
     * #define LB_SETTOPINDEX 407
     * }
     */
    public static int LB_SETTOPINDEX() {
        return LB_SETTOPINDEX;
    }
    private static final int LB_GETITEMRECT = (int)408L;
    /**
     * {@snippet lang=c :
     * #define LB_GETITEMRECT 408
     * }
     */
    public static int LB_GETITEMRECT() {
        return LB_GETITEMRECT;
    }
    private static final int LB_GETITEMDATA = (int)409L;
    /**
     * {@snippet lang=c :
     * #define LB_GETITEMDATA 409
     * }
     */
    public static int LB_GETITEMDATA() {
        return LB_GETITEMDATA;
    }
    private static final int LB_SETITEMDATA = (int)410L;
    /**
     * {@snippet lang=c :
     * #define LB_SETITEMDATA 410
     * }
     */
    public static int LB_SETITEMDATA() {
        return LB_SETITEMDATA;
    }
    private static final int LB_SELITEMRANGE = (int)411L;
    /**
     * {@snippet lang=c :
     * #define LB_SELITEMRANGE 411
     * }
     */
    public static int LB_SELITEMRANGE() {
        return LB_SELITEMRANGE;
    }
    private static final int LB_SETANCHORINDEX = (int)412L;
    /**
     * {@snippet lang=c :
     * #define LB_SETANCHORINDEX 412
     * }
     */
    public static int LB_SETANCHORINDEX() {
        return LB_SETANCHORINDEX;
    }
    private static final int LB_GETANCHORINDEX = (int)413L;
    /**
     * {@snippet lang=c :
     * #define LB_GETANCHORINDEX 413
     * }
     */
    public static int LB_GETANCHORINDEX() {
        return LB_GETANCHORINDEX;
    }
    private static final int LB_SETCARETINDEX = (int)414L;
    /**
     * {@snippet lang=c :
     * #define LB_SETCARETINDEX 414
     * }
     */
    public static int LB_SETCARETINDEX() {
        return LB_SETCARETINDEX;
    }
    private static final int LB_GETCARETINDEX = (int)415L;
    /**
     * {@snippet lang=c :
     * #define LB_GETCARETINDEX 415
     * }
     */
    public static int LB_GETCARETINDEX() {
        return LB_GETCARETINDEX;
    }
    private static final int LB_SETITEMHEIGHT = (int)416L;
    /**
     * {@snippet lang=c :
     * #define LB_SETITEMHEIGHT 416
     * }
     */
    public static int LB_SETITEMHEIGHT() {
        return LB_SETITEMHEIGHT;
    }
    private static final int LB_GETITEMHEIGHT = (int)417L;
    /**
     * {@snippet lang=c :
     * #define LB_GETITEMHEIGHT 417
     * }
     */
    public static int LB_GETITEMHEIGHT() {
        return LB_GETITEMHEIGHT;
    }
    private static final int LB_FINDSTRINGEXACT = (int)418L;
    /**
     * {@snippet lang=c :
     * #define LB_FINDSTRINGEXACT 418
     * }
     */
    public static int LB_FINDSTRINGEXACT() {
        return LB_FINDSTRINGEXACT;
    }
    private static final int LB_SETLOCALE = (int)421L;
    /**
     * {@snippet lang=c :
     * #define LB_SETLOCALE 421
     * }
     */
    public static int LB_SETLOCALE() {
        return LB_SETLOCALE;
    }
    private static final int LB_GETLOCALE = (int)422L;
    /**
     * {@snippet lang=c :
     * #define LB_GETLOCALE 422
     * }
     */
    public static int LB_GETLOCALE() {
        return LB_GETLOCALE;
    }
    private static final int LB_SETCOUNT = (int)423L;
    /**
     * {@snippet lang=c :
     * #define LB_SETCOUNT 423
     * }
     */
    public static int LB_SETCOUNT() {
        return LB_SETCOUNT;
    }
    private static final int LB_INITSTORAGE = (int)424L;
    /**
     * {@snippet lang=c :
     * #define LB_INITSTORAGE 424
     * }
     */
    public static int LB_INITSTORAGE() {
        return LB_INITSTORAGE;
    }
    private static final int LB_ITEMFROMPOINT = (int)425L;
    /**
     * {@snippet lang=c :
     * #define LB_ITEMFROMPOINT 425
     * }
     */
    public static int LB_ITEMFROMPOINT() {
        return LB_ITEMFROMPOINT;
    }
    private static final int LB_GETLISTBOXINFO = (int)434L;
    /**
     * {@snippet lang=c :
     * #define LB_GETLISTBOXINFO 434
     * }
     */
    public static int LB_GETLISTBOXINFO() {
        return LB_GETLISTBOXINFO;
    }
    private static final int LB_MSGMAX = (int)435L;
    /**
     * {@snippet lang=c :
     * #define LB_MSGMAX 435
     * }
     */
    public static int LB_MSGMAX() {
        return LB_MSGMAX;
    }
    private static final int CB_OKAY = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CB_OKAY 0
     * }
     */
    public static int CB_OKAY() {
        return CB_OKAY;
    }
    private static final int CBN_SELCHANGE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CBN_SELCHANGE 1
     * }
     */
    public static int CBN_SELCHANGE() {
        return CBN_SELCHANGE;
    }
    private static final int CBN_DBLCLK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CBN_DBLCLK 2
     * }
     */
    public static int CBN_DBLCLK() {
        return CBN_DBLCLK;
    }
    private static final int CBN_SETFOCUS = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CBN_SETFOCUS 3
     * }
     */
    public static int CBN_SETFOCUS() {
        return CBN_SETFOCUS;
    }
    private static final int CBN_KILLFOCUS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CBN_KILLFOCUS 4
     * }
     */
    public static int CBN_KILLFOCUS() {
        return CBN_KILLFOCUS;
    }
    private static final int CBN_EDITCHANGE = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CBN_EDITCHANGE 5
     * }
     */
    public static int CBN_EDITCHANGE() {
        return CBN_EDITCHANGE;
    }
    private static final int CBN_EDITUPDATE = (int)6L;
    /**
     * {@snippet lang=c :
     * #define CBN_EDITUPDATE 6
     * }
     */
    public static int CBN_EDITUPDATE() {
        return CBN_EDITUPDATE;
    }
    private static final int CBN_DROPDOWN = (int)7L;
    /**
     * {@snippet lang=c :
     * #define CBN_DROPDOWN 7
     * }
     */
    public static int CBN_DROPDOWN() {
        return CBN_DROPDOWN;
    }
    private static final int CBN_CLOSEUP = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CBN_CLOSEUP 8
     * }
     */
    public static int CBN_CLOSEUP() {
        return CBN_CLOSEUP;
    }
    private static final int CBN_SELENDOK = (int)9L;
    /**
     * {@snippet lang=c :
     * #define CBN_SELENDOK 9
     * }
     */
    public static int CBN_SELENDOK() {
        return CBN_SELENDOK;
    }
    private static final int CBN_SELENDCANCEL = (int)10L;
    /**
     * {@snippet lang=c :
     * #define CBN_SELENDCANCEL 10
     * }
     */
    public static int CBN_SELENDCANCEL() {
        return CBN_SELENDCANCEL;
    }
    private static final int CB_GETEDITSEL = (int)320L;
    /**
     * {@snippet lang=c :
     * #define CB_GETEDITSEL 320
     * }
     */
    public static int CB_GETEDITSEL() {
        return CB_GETEDITSEL;
    }
    private static final int CB_LIMITTEXT = (int)321L;
    /**
     * {@snippet lang=c :
     * #define CB_LIMITTEXT 321
     * }
     */
    public static int CB_LIMITTEXT() {
        return CB_LIMITTEXT;
    }
    private static final int CB_SETEDITSEL = (int)322L;
    /**
     * {@snippet lang=c :
     * #define CB_SETEDITSEL 322
     * }
     */
    public static int CB_SETEDITSEL() {
        return CB_SETEDITSEL;
    }
    private static final int CB_ADDSTRING = (int)323L;
    /**
     * {@snippet lang=c :
     * #define CB_ADDSTRING 323
     * }
     */
    public static int CB_ADDSTRING() {
        return CB_ADDSTRING;
    }
    private static final int CB_DELETESTRING = (int)324L;
    /**
     * {@snippet lang=c :
     * #define CB_DELETESTRING 324
     * }
     */
    public static int CB_DELETESTRING() {
        return CB_DELETESTRING;
    }
    private static final int CB_DIR = (int)325L;
    /**
     * {@snippet lang=c :
     * #define CB_DIR 325
     * }
     */
    public static int CB_DIR() {
        return CB_DIR;
    }
    private static final int CB_GETCOUNT = (int)326L;
    /**
     * {@snippet lang=c :
     * #define CB_GETCOUNT 326
     * }
     */
    public static int CB_GETCOUNT() {
        return CB_GETCOUNT;
    }
    private static final int CB_GETCURSEL = (int)327L;
    /**
     * {@snippet lang=c :
     * #define CB_GETCURSEL 327
     * }
     */
    public static int CB_GETCURSEL() {
        return CB_GETCURSEL;
    }
    private static final int CB_GETLBTEXT = (int)328L;
    /**
     * {@snippet lang=c :
     * #define CB_GETLBTEXT 328
     * }
     */
    public static int CB_GETLBTEXT() {
        return CB_GETLBTEXT;
    }
    private static final int CB_GETLBTEXTLEN = (int)329L;
    /**
     * {@snippet lang=c :
     * #define CB_GETLBTEXTLEN 329
     * }
     */
    public static int CB_GETLBTEXTLEN() {
        return CB_GETLBTEXTLEN;
    }
    private static final int CB_INSERTSTRING = (int)330L;
    /**
     * {@snippet lang=c :
     * #define CB_INSERTSTRING 330
     * }
     */
    public static int CB_INSERTSTRING() {
        return CB_INSERTSTRING;
    }
    private static final int CB_RESETCONTENT = (int)331L;
    /**
     * {@snippet lang=c :
     * #define CB_RESETCONTENT 331
     * }
     */
    public static int CB_RESETCONTENT() {
        return CB_RESETCONTENT;
    }
    private static final int CB_FINDSTRING = (int)332L;
    /**
     * {@snippet lang=c :
     * #define CB_FINDSTRING 332
     * }
     */
    public static int CB_FINDSTRING() {
        return CB_FINDSTRING;
    }
    private static final int CB_SELECTSTRING = (int)333L;
    /**
     * {@snippet lang=c :
     * #define CB_SELECTSTRING 333
     * }
     */
    public static int CB_SELECTSTRING() {
        return CB_SELECTSTRING;
    }
    private static final int CB_SETCURSEL = (int)334L;
    /**
     * {@snippet lang=c :
     * #define CB_SETCURSEL 334
     * }
     */
    public static int CB_SETCURSEL() {
        return CB_SETCURSEL;
    }
    private static final int CB_SHOWDROPDOWN = (int)335L;
    /**
     * {@snippet lang=c :
     * #define CB_SHOWDROPDOWN 335
     * }
     */
    public static int CB_SHOWDROPDOWN() {
        return CB_SHOWDROPDOWN;
    }
    private static final int CB_GETITEMDATA = (int)336L;
    /**
     * {@snippet lang=c :
     * #define CB_GETITEMDATA 336
     * }
     */
    public static int CB_GETITEMDATA() {
        return CB_GETITEMDATA;
    }
    private static final int CB_SETITEMDATA = (int)337L;
    /**
     * {@snippet lang=c :
     * #define CB_SETITEMDATA 337
     * }
     */
    public static int CB_SETITEMDATA() {
        return CB_SETITEMDATA;
    }
    private static final int CB_GETDROPPEDCONTROLRECT = (int)338L;
    /**
     * {@snippet lang=c :
     * #define CB_GETDROPPEDCONTROLRECT 338
     * }
     */
    public static int CB_GETDROPPEDCONTROLRECT() {
        return CB_GETDROPPEDCONTROLRECT;
    }
    private static final int CB_SETITEMHEIGHT = (int)339L;
    /**
     * {@snippet lang=c :
     * #define CB_SETITEMHEIGHT 339
     * }
     */
    public static int CB_SETITEMHEIGHT() {
        return CB_SETITEMHEIGHT;
    }
    private static final int CB_GETITEMHEIGHT = (int)340L;
    /**
     * {@snippet lang=c :
     * #define CB_GETITEMHEIGHT 340
     * }
     */
    public static int CB_GETITEMHEIGHT() {
        return CB_GETITEMHEIGHT;
    }
    private static final int CB_SETEXTENDEDUI = (int)341L;
    /**
     * {@snippet lang=c :
     * #define CB_SETEXTENDEDUI 341
     * }
     */
    public static int CB_SETEXTENDEDUI() {
        return CB_SETEXTENDEDUI;
    }
    private static final int CB_GETEXTENDEDUI = (int)342L;
    /**
     * {@snippet lang=c :
     * #define CB_GETEXTENDEDUI 342
     * }
     */
    public static int CB_GETEXTENDEDUI() {
        return CB_GETEXTENDEDUI;
    }
    private static final int CB_GETDROPPEDSTATE = (int)343L;
    /**
     * {@snippet lang=c :
     * #define CB_GETDROPPEDSTATE 343
     * }
     */
    public static int CB_GETDROPPEDSTATE() {
        return CB_GETDROPPEDSTATE;
    }
    private static final int CB_FINDSTRINGEXACT = (int)344L;
    /**
     * {@snippet lang=c :
     * #define CB_FINDSTRINGEXACT 344
     * }
     */
    public static int CB_FINDSTRINGEXACT() {
        return CB_FINDSTRINGEXACT;
    }
    private static final int CB_SETLOCALE = (int)345L;
    /**
     * {@snippet lang=c :
     * #define CB_SETLOCALE 345
     * }
     */
    public static int CB_SETLOCALE() {
        return CB_SETLOCALE;
    }
    private static final int CB_GETLOCALE = (int)346L;
    /**
     * {@snippet lang=c :
     * #define CB_GETLOCALE 346
     * }
     */
    public static int CB_GETLOCALE() {
        return CB_GETLOCALE;
    }
    private static final int CB_GETTOPINDEX = (int)347L;
    /**
     * {@snippet lang=c :
     * #define CB_GETTOPINDEX 347
     * }
     */
    public static int CB_GETTOPINDEX() {
        return CB_GETTOPINDEX;
    }
    private static final int CB_SETTOPINDEX = (int)348L;
    /**
     * {@snippet lang=c :
     * #define CB_SETTOPINDEX 348
     * }
     */
    public static int CB_SETTOPINDEX() {
        return CB_SETTOPINDEX;
    }
    private static final int CB_GETHORIZONTALEXTENT = (int)349L;
    /**
     * {@snippet lang=c :
     * #define CB_GETHORIZONTALEXTENT 349
     * }
     */
    public static int CB_GETHORIZONTALEXTENT() {
        return CB_GETHORIZONTALEXTENT;
    }
    private static final int CB_SETHORIZONTALEXTENT = (int)350L;
    /**
     * {@snippet lang=c :
     * #define CB_SETHORIZONTALEXTENT 350
     * }
     */
    public static int CB_SETHORIZONTALEXTENT() {
        return CB_SETHORIZONTALEXTENT;
    }
    private static final int CB_GETDROPPEDWIDTH = (int)351L;
    /**
     * {@snippet lang=c :
     * #define CB_GETDROPPEDWIDTH 351
     * }
     */
    public static int CB_GETDROPPEDWIDTH() {
        return CB_GETDROPPEDWIDTH;
    }
    private static final int CB_SETDROPPEDWIDTH = (int)352L;
    /**
     * {@snippet lang=c :
     * #define CB_SETDROPPEDWIDTH 352
     * }
     */
    public static int CB_SETDROPPEDWIDTH() {
        return CB_SETDROPPEDWIDTH;
    }
    private static final int CB_INITSTORAGE = (int)353L;
    /**
     * {@snippet lang=c :
     * #define CB_INITSTORAGE 353
     * }
     */
    public static int CB_INITSTORAGE() {
        return CB_INITSTORAGE;
    }
    private static final int CB_GETCOMBOBOXINFO = (int)356L;
    /**
     * {@snippet lang=c :
     * #define CB_GETCOMBOBOXINFO 356
     * }
     */
    public static int CB_GETCOMBOBOXINFO() {
        return CB_GETCOMBOBOXINFO;
    }
    private static final int CB_MSGMAX = (int)357L;
    /**
     * {@snippet lang=c :
     * #define CB_MSGMAX 357
     * }
     */
    public static int CB_MSGMAX() {
        return CB_MSGMAX;
    }
    private static final int SBM_SETPOS = (int)224L;
    /**
     * {@snippet lang=c :
     * #define SBM_SETPOS 224
     * }
     */
    public static int SBM_SETPOS() {
        return SBM_SETPOS;
    }
    private static final int SBM_GETPOS = (int)225L;
    /**
     * {@snippet lang=c :
     * #define SBM_GETPOS 225
     * }
     */
    public static int SBM_GETPOS() {
        return SBM_GETPOS;
    }
    private static final int SBM_SETRANGE = (int)226L;
    /**
     * {@snippet lang=c :
     * #define SBM_SETRANGE 226
     * }
     */
    public static int SBM_SETRANGE() {
        return SBM_SETRANGE;
    }
    private static final int SBM_SETRANGEREDRAW = (int)230L;
    /**
     * {@snippet lang=c :
     * #define SBM_SETRANGEREDRAW 230
     * }
     */
    public static int SBM_SETRANGEREDRAW() {
        return SBM_SETRANGEREDRAW;
    }
    private static final int SBM_GETRANGE = (int)227L;
    /**
     * {@snippet lang=c :
     * #define SBM_GETRANGE 227
     * }
     */
    public static int SBM_GETRANGE() {
        return SBM_GETRANGE;
    }
    private static final int SBM_ENABLE_ARROWS = (int)228L;
    /**
     * {@snippet lang=c :
     * #define SBM_ENABLE_ARROWS 228
     * }
     */
    public static int SBM_ENABLE_ARROWS() {
        return SBM_ENABLE_ARROWS;
    }
    private static final int SBM_SETSCROLLINFO = (int)233L;
    /**
     * {@snippet lang=c :
     * #define SBM_SETSCROLLINFO 233
     * }
     */
    public static int SBM_SETSCROLLINFO() {
        return SBM_SETSCROLLINFO;
    }
    private static final int SBM_GETSCROLLINFO = (int)234L;
    /**
     * {@snippet lang=c :
     * #define SBM_GETSCROLLINFO 234
     * }
     */
    public static int SBM_GETSCROLLINFO() {
        return SBM_GETSCROLLINFO;
    }
    private static final int SBM_GETSCROLLBARINFO = (int)235L;
    /**
     * {@snippet lang=c :
     * #define SBM_GETSCROLLBARINFO 235
     * }
     */
    public static int SBM_GETSCROLLBARINFO() {
        return SBM_GETSCROLLBARINFO;
    }
    private static final int SIF_RANGE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SIF_RANGE 1
     * }
     */
    public static int SIF_RANGE() {
        return SIF_RANGE;
    }
    private static final int SIF_PAGE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SIF_PAGE 2
     * }
     */
    public static int SIF_PAGE() {
        return SIF_PAGE;
    }
    private static final int SIF_POS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SIF_POS 4
     * }
     */
    public static int SIF_POS() {
        return SIF_POS;
    }
    private static final int SIF_DISABLENOSCROLL = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SIF_DISABLENOSCROLL 8
     * }
     */
    public static int SIF_DISABLENOSCROLL() {
        return SIF_DISABLENOSCROLL;
    }
    private static final int SIF_TRACKPOS = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SIF_TRACKPOS 16
     * }
     */
    public static int SIF_TRACKPOS() {
        return SIF_TRACKPOS;
    }
    private static final int MDIS_ALLCHILDSTYLES = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MDIS_ALLCHILDSTYLES 1
     * }
     */
    public static int MDIS_ALLCHILDSTYLES() {
        return MDIS_ALLCHILDSTYLES;
    }
    private static final int MDITILE_VERTICAL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MDITILE_VERTICAL 0
     * }
     */
    public static int MDITILE_VERTICAL() {
        return MDITILE_VERTICAL;
    }
    private static final int MDITILE_HORIZONTAL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MDITILE_HORIZONTAL 1
     * }
     */
    public static int MDITILE_HORIZONTAL() {
        return MDITILE_HORIZONTAL;
    }
    private static final int MDITILE_SKIPDISABLED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MDITILE_SKIPDISABLED 2
     * }
     */
    public static int MDITILE_SKIPDISABLED() {
        return MDITILE_SKIPDISABLED;
    }
    private static final int MDITILE_ZORDER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MDITILE_ZORDER 4
     * }
     */
    public static int MDITILE_ZORDER() {
        return MDITILE_ZORDER;
    }
    private static final int HELP_CONTEXTMENU = (int)10L;
    /**
     * {@snippet lang=c :
     * #define HELP_CONTEXTMENU 10
     * }
     */
    public static int HELP_CONTEXTMENU() {
        return HELP_CONTEXTMENU;
    }
    private static final int HELP_FINDER = (int)11L;
    /**
     * {@snippet lang=c :
     * #define HELP_FINDER 11
     * }
     */
    public static int HELP_FINDER() {
        return HELP_FINDER;
    }
    private static final int HELP_WM_HELP = (int)12L;
    /**
     * {@snippet lang=c :
     * #define HELP_WM_HELP 12
     * }
     */
    public static int HELP_WM_HELP() {
        return HELP_WM_HELP;
    }
    private static final int HELP_SETPOPUP_POS = (int)13L;
    /**
     * {@snippet lang=c :
     * #define HELP_SETPOPUP_POS 13
     * }
     */
    public static int HELP_SETPOPUP_POS() {
        return HELP_SETPOPUP_POS;
    }
    private static final int HELP_TCARD = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define HELP_TCARD 32768
     * }
     */
    public static int HELP_TCARD() {
        return HELP_TCARD;
    }
    private static final int HELP_TCARD_DATA = (int)16L;
    /**
     * {@snippet lang=c :
     * #define HELP_TCARD_DATA 16
     * }
     */
    public static int HELP_TCARD_DATA() {
        return HELP_TCARD_DATA;
    }
    private static final int HELP_TCARD_OTHER_CALLER = (int)17L;
    /**
     * {@snippet lang=c :
     * #define HELP_TCARD_OTHER_CALLER 17
     * }
     */
    public static int HELP_TCARD_OTHER_CALLER() {
        return HELP_TCARD_OTHER_CALLER;
    }
    private static final int IDH_NO_HELP = (int)28440L;
    /**
     * {@snippet lang=c :
     * #define IDH_NO_HELP 28440
     * }
     */
    public static int IDH_NO_HELP() {
        return IDH_NO_HELP;
    }
    private static final int IDH_MISSING_CONTEXT = (int)28441L;
    /**
     * {@snippet lang=c :
     * #define IDH_MISSING_CONTEXT 28441
     * }
     */
    public static int IDH_MISSING_CONTEXT() {
        return IDH_MISSING_CONTEXT;
    }
    private static final int IDH_GENERIC_HELP_BUTTON = (int)28442L;
    /**
     * {@snippet lang=c :
     * #define IDH_GENERIC_HELP_BUTTON 28442
     * }
     */
    public static int IDH_GENERIC_HELP_BUTTON() {
        return IDH_GENERIC_HELP_BUTTON;
    }
    private static final int IDH_OK = (int)28443L;
    /**
     * {@snippet lang=c :
     * #define IDH_OK 28443
     * }
     */
    public static int IDH_OK() {
        return IDH_OK;
    }
    private static final int IDH_CANCEL = (int)28444L;
    /**
     * {@snippet lang=c :
     * #define IDH_CANCEL 28444
     * }
     */
    public static int IDH_CANCEL() {
        return IDH_CANCEL;
    }
    private static final int IDH_HELP = (int)28445L;
    /**
     * {@snippet lang=c :
     * #define IDH_HELP 28445
     * }
     */
    public static int IDH_HELP() {
        return IDH_HELP;
    }
    private static final int GR_GDIOBJECTS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define GR_GDIOBJECTS 0
     * }
     */
    public static int GR_GDIOBJECTS() {
        return GR_GDIOBJECTS;
    }
    private static final int GR_USEROBJECTS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GR_USEROBJECTS 1
     * }
     */
    public static int GR_USEROBJECTS() {
        return GR_USEROBJECTS;
    }
    private static final int GR_GDIOBJECTS_PEAK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define GR_GDIOBJECTS_PEAK 2
     * }
     */
    public static int GR_GDIOBJECTS_PEAK() {
        return GR_GDIOBJECTS_PEAK;
    }
    private static final int GR_USEROBJECTS_PEAK = (int)4L;
    /**
     * {@snippet lang=c :
     * #define GR_USEROBJECTS_PEAK 4
     * }
     */
    public static int GR_USEROBJECTS_PEAK() {
        return GR_USEROBJECTS_PEAK;
    }
    private static final int SPI_GETBEEP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETBEEP 1
     * }
     */
    public static int SPI_GETBEEP() {
        return SPI_GETBEEP;
    }
    private static final int SPI_SETBEEP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETBEEP 2
     * }
     */
    public static int SPI_SETBEEP() {
        return SPI_SETBEEP;
    }
    private static final int SPI_GETMOUSE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMOUSE 3
     * }
     */
    public static int SPI_GETMOUSE() {
        return SPI_GETMOUSE;
    }
    private static final int SPI_SETMOUSE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMOUSE 4
     * }
     */
    public static int SPI_SETMOUSE() {
        return SPI_SETMOUSE;
    }
    private static final int SPI_GETBORDER = (int)5L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETBORDER 5
     * }
     */
    public static int SPI_GETBORDER() {
        return SPI_GETBORDER;
    }
    private static final int SPI_SETBORDER = (int)6L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETBORDER 6
     * }
     */
    public static int SPI_SETBORDER() {
        return SPI_SETBORDER;
    }
    private static final int SPI_GETKEYBOARDSPEED = (int)10L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETKEYBOARDSPEED 10
     * }
     */
    public static int SPI_GETKEYBOARDSPEED() {
        return SPI_GETKEYBOARDSPEED;
    }
    private static final int SPI_SETKEYBOARDSPEED = (int)11L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETKEYBOARDSPEED 11
     * }
     */
    public static int SPI_SETKEYBOARDSPEED() {
        return SPI_SETKEYBOARDSPEED;
    }
    private static final int SPI_LANGDRIVER = (int)12L;
    /**
     * {@snippet lang=c :
     * #define SPI_LANGDRIVER 12
     * }
     */
    public static int SPI_LANGDRIVER() {
        return SPI_LANGDRIVER;
    }
    private static final int SPI_ICONHORIZONTALSPACING = (int)13L;
    /**
     * {@snippet lang=c :
     * #define SPI_ICONHORIZONTALSPACING 13
     * }
     */
    public static int SPI_ICONHORIZONTALSPACING() {
        return SPI_ICONHORIZONTALSPACING;
    }
    private static final int SPI_GETSCREENSAVETIMEOUT = (int)14L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETSCREENSAVETIMEOUT 14
     * }
     */
    public static int SPI_GETSCREENSAVETIMEOUT() {
        return SPI_GETSCREENSAVETIMEOUT;
    }
    private static final int SPI_SETSCREENSAVETIMEOUT = (int)15L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETSCREENSAVETIMEOUT 15
     * }
     */
    public static int SPI_SETSCREENSAVETIMEOUT() {
        return SPI_SETSCREENSAVETIMEOUT;
    }
    private static final int SPI_GETSCREENSAVEACTIVE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETSCREENSAVEACTIVE 16
     * }
     */
    public static int SPI_GETSCREENSAVEACTIVE() {
        return SPI_GETSCREENSAVEACTIVE;
    }
    private static final int SPI_SETSCREENSAVEACTIVE = (int)17L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETSCREENSAVEACTIVE 17
     * }
     */
    public static int SPI_SETSCREENSAVEACTIVE() {
        return SPI_SETSCREENSAVEACTIVE;
    }
    private static final int SPI_GETGRIDGRANULARITY = (int)18L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETGRIDGRANULARITY 18
     * }
     */
    public static int SPI_GETGRIDGRANULARITY() {
        return SPI_GETGRIDGRANULARITY;
    }
    private static final int SPI_SETGRIDGRANULARITY = (int)19L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETGRIDGRANULARITY 19
     * }
     */
    public static int SPI_SETGRIDGRANULARITY() {
        return SPI_SETGRIDGRANULARITY;
    }
    private static final int SPI_SETDESKWALLPAPER = (int)20L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETDESKWALLPAPER 20
     * }
     */
    public static int SPI_SETDESKWALLPAPER() {
        return SPI_SETDESKWALLPAPER;
    }
    private static final int SPI_SETDESKPATTERN = (int)21L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETDESKPATTERN 21
     * }
     */
    public static int SPI_SETDESKPATTERN() {
        return SPI_SETDESKPATTERN;
    }
    private static final int SPI_GETKEYBOARDDELAY = (int)22L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETKEYBOARDDELAY 22
     * }
     */
    public static int SPI_GETKEYBOARDDELAY() {
        return SPI_GETKEYBOARDDELAY;
    }
    private static final int SPI_SETKEYBOARDDELAY = (int)23L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETKEYBOARDDELAY 23
     * }
     */
    public static int SPI_SETKEYBOARDDELAY() {
        return SPI_SETKEYBOARDDELAY;
    }
    private static final int SPI_ICONVERTICALSPACING = (int)24L;
    /**
     * {@snippet lang=c :
     * #define SPI_ICONVERTICALSPACING 24
     * }
     */
    public static int SPI_ICONVERTICALSPACING() {
        return SPI_ICONVERTICALSPACING;
    }
    private static final int SPI_GETICONTITLEWRAP = (int)25L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETICONTITLEWRAP 25
     * }
     */
    public static int SPI_GETICONTITLEWRAP() {
        return SPI_GETICONTITLEWRAP;
    }
    private static final int SPI_SETICONTITLEWRAP = (int)26L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETICONTITLEWRAP 26
     * }
     */
    public static int SPI_SETICONTITLEWRAP() {
        return SPI_SETICONTITLEWRAP;
    }
    private static final int SPI_GETMENUDROPALIGNMENT = (int)27L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMENUDROPALIGNMENT 27
     * }
     */
    public static int SPI_GETMENUDROPALIGNMENT() {
        return SPI_GETMENUDROPALIGNMENT;
    }
    private static final int SPI_SETMENUDROPALIGNMENT = (int)28L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMENUDROPALIGNMENT 28
     * }
     */
    public static int SPI_SETMENUDROPALIGNMENT() {
        return SPI_SETMENUDROPALIGNMENT;
    }
    private static final int SPI_SETDOUBLECLKWIDTH = (int)29L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETDOUBLECLKWIDTH 29
     * }
     */
    public static int SPI_SETDOUBLECLKWIDTH() {
        return SPI_SETDOUBLECLKWIDTH;
    }
    private static final int SPI_SETDOUBLECLKHEIGHT = (int)30L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETDOUBLECLKHEIGHT 30
     * }
     */
    public static int SPI_SETDOUBLECLKHEIGHT() {
        return SPI_SETDOUBLECLKHEIGHT;
    }
    private static final int SPI_GETICONTITLELOGFONT = (int)31L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETICONTITLELOGFONT 31
     * }
     */
    public static int SPI_GETICONTITLELOGFONT() {
        return SPI_GETICONTITLELOGFONT;
    }
    private static final int SPI_SETDOUBLECLICKTIME = (int)32L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETDOUBLECLICKTIME 32
     * }
     */
    public static int SPI_SETDOUBLECLICKTIME() {
        return SPI_SETDOUBLECLICKTIME;
    }
    private static final int SPI_SETMOUSEBUTTONSWAP = (int)33L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMOUSEBUTTONSWAP 33
     * }
     */
    public static int SPI_SETMOUSEBUTTONSWAP() {
        return SPI_SETMOUSEBUTTONSWAP;
    }
    private static final int SPI_SETICONTITLELOGFONT = (int)34L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETICONTITLELOGFONT 34
     * }
     */
    public static int SPI_SETICONTITLELOGFONT() {
        return SPI_SETICONTITLELOGFONT;
    }
    private static final int SPI_GETFASTTASKSWITCH = (int)35L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETFASTTASKSWITCH 35
     * }
     */
    public static int SPI_GETFASTTASKSWITCH() {
        return SPI_GETFASTTASKSWITCH;
    }
    private static final int SPI_SETFASTTASKSWITCH = (int)36L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETFASTTASKSWITCH 36
     * }
     */
    public static int SPI_SETFASTTASKSWITCH() {
        return SPI_SETFASTTASKSWITCH;
    }
    private static final int SPI_SETDRAGFULLWINDOWS = (int)37L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETDRAGFULLWINDOWS 37
     * }
     */
    public static int SPI_SETDRAGFULLWINDOWS() {
        return SPI_SETDRAGFULLWINDOWS;
    }
    private static final int SPI_GETDRAGFULLWINDOWS = (int)38L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETDRAGFULLWINDOWS 38
     * }
     */
    public static int SPI_GETDRAGFULLWINDOWS() {
        return SPI_GETDRAGFULLWINDOWS;
    }
    private static final int SPI_GETNONCLIENTMETRICS = (int)41L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETNONCLIENTMETRICS 41
     * }
     */
    public static int SPI_GETNONCLIENTMETRICS() {
        return SPI_GETNONCLIENTMETRICS;
    }
    private static final int SPI_SETNONCLIENTMETRICS = (int)42L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETNONCLIENTMETRICS 42
     * }
     */
    public static int SPI_SETNONCLIENTMETRICS() {
        return SPI_SETNONCLIENTMETRICS;
    }
    private static final int SPI_GETMINIMIZEDMETRICS = (int)43L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMINIMIZEDMETRICS 43
     * }
     */
    public static int SPI_GETMINIMIZEDMETRICS() {
        return SPI_GETMINIMIZEDMETRICS;
    }
    private static final int SPI_SETMINIMIZEDMETRICS = (int)44L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMINIMIZEDMETRICS 44
     * }
     */
    public static int SPI_SETMINIMIZEDMETRICS() {
        return SPI_SETMINIMIZEDMETRICS;
    }
    private static final int SPI_GETICONMETRICS = (int)45L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETICONMETRICS 45
     * }
     */
    public static int SPI_GETICONMETRICS() {
        return SPI_GETICONMETRICS;
    }
    private static final int SPI_SETICONMETRICS = (int)46L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETICONMETRICS 46
     * }
     */
    public static int SPI_SETICONMETRICS() {
        return SPI_SETICONMETRICS;
    }
    private static final int SPI_SETWORKAREA = (int)47L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETWORKAREA 47
     * }
     */
    public static int SPI_SETWORKAREA() {
        return SPI_SETWORKAREA;
    }
    private static final int SPI_GETWORKAREA = (int)48L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETWORKAREA 48
     * }
     */
    public static int SPI_GETWORKAREA() {
        return SPI_GETWORKAREA;
    }
    private static final int SPI_SETPENWINDOWS = (int)49L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETPENWINDOWS 49
     * }
     */
    public static int SPI_SETPENWINDOWS() {
        return SPI_SETPENWINDOWS;
    }
    private static final int SPI_GETHIGHCONTRAST = (int)66L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETHIGHCONTRAST 66
     * }
     */
    public static int SPI_GETHIGHCONTRAST() {
        return SPI_GETHIGHCONTRAST;
    }
    private static final int SPI_SETHIGHCONTRAST = (int)67L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETHIGHCONTRAST 67
     * }
     */
    public static int SPI_SETHIGHCONTRAST() {
        return SPI_SETHIGHCONTRAST;
    }
    private static final int SPI_GETKEYBOARDPREF = (int)68L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETKEYBOARDPREF 68
     * }
     */
    public static int SPI_GETKEYBOARDPREF() {
        return SPI_GETKEYBOARDPREF;
    }
    private static final int SPI_SETKEYBOARDPREF = (int)69L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETKEYBOARDPREF 69
     * }
     */
    public static int SPI_SETKEYBOARDPREF() {
        return SPI_SETKEYBOARDPREF;
    }
    private static final int SPI_GETSCREENREADER = (int)70L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETSCREENREADER 70
     * }
     */
    public static int SPI_GETSCREENREADER() {
        return SPI_GETSCREENREADER;
    }
    private static final int SPI_SETSCREENREADER = (int)71L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETSCREENREADER 71
     * }
     */
    public static int SPI_SETSCREENREADER() {
        return SPI_SETSCREENREADER;
    }
    private static final int SPI_GETANIMATION = (int)72L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETANIMATION 72
     * }
     */
    public static int SPI_GETANIMATION() {
        return SPI_GETANIMATION;
    }
    private static final int SPI_SETANIMATION = (int)73L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETANIMATION 73
     * }
     */
    public static int SPI_SETANIMATION() {
        return SPI_SETANIMATION;
    }
    private static final int SPI_GETFONTSMOOTHING = (int)74L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETFONTSMOOTHING 74
     * }
     */
    public static int SPI_GETFONTSMOOTHING() {
        return SPI_GETFONTSMOOTHING;
    }
    private static final int SPI_SETFONTSMOOTHING = (int)75L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETFONTSMOOTHING 75
     * }
     */
    public static int SPI_SETFONTSMOOTHING() {
        return SPI_SETFONTSMOOTHING;
    }
    private static final int SPI_SETDRAGWIDTH = (int)76L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETDRAGWIDTH 76
     * }
     */
    public static int SPI_SETDRAGWIDTH() {
        return SPI_SETDRAGWIDTH;
    }
    private static final int SPI_SETDRAGHEIGHT = (int)77L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETDRAGHEIGHT 77
     * }
     */
    public static int SPI_SETDRAGHEIGHT() {
        return SPI_SETDRAGHEIGHT;
    }
    private static final int SPI_SETHANDHELD = (int)78L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETHANDHELD 78
     * }
     */
    public static int SPI_SETHANDHELD() {
        return SPI_SETHANDHELD;
    }
    private static final int SPI_GETLOWPOWERTIMEOUT = (int)79L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETLOWPOWERTIMEOUT 79
     * }
     */
    public static int SPI_GETLOWPOWERTIMEOUT() {
        return SPI_GETLOWPOWERTIMEOUT;
    }
    private static final int SPI_GETPOWEROFFTIMEOUT = (int)80L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETPOWEROFFTIMEOUT 80
     * }
     */
    public static int SPI_GETPOWEROFFTIMEOUT() {
        return SPI_GETPOWEROFFTIMEOUT;
    }
    private static final int SPI_SETLOWPOWERTIMEOUT = (int)81L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETLOWPOWERTIMEOUT 81
     * }
     */
    public static int SPI_SETLOWPOWERTIMEOUT() {
        return SPI_SETLOWPOWERTIMEOUT;
    }
    private static final int SPI_SETPOWEROFFTIMEOUT = (int)82L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETPOWEROFFTIMEOUT 82
     * }
     */
    public static int SPI_SETPOWEROFFTIMEOUT() {
        return SPI_SETPOWEROFFTIMEOUT;
    }
    private static final int SPI_GETLOWPOWERACTIVE = (int)83L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETLOWPOWERACTIVE 83
     * }
     */
    public static int SPI_GETLOWPOWERACTIVE() {
        return SPI_GETLOWPOWERACTIVE;
    }
    private static final int SPI_GETPOWEROFFACTIVE = (int)84L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETPOWEROFFACTIVE 84
     * }
     */
    public static int SPI_GETPOWEROFFACTIVE() {
        return SPI_GETPOWEROFFACTIVE;
    }
    private static final int SPI_SETLOWPOWERACTIVE = (int)85L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETLOWPOWERACTIVE 85
     * }
     */
    public static int SPI_SETLOWPOWERACTIVE() {
        return SPI_SETLOWPOWERACTIVE;
    }
    private static final int SPI_SETPOWEROFFACTIVE = (int)86L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETPOWEROFFACTIVE 86
     * }
     */
    public static int SPI_SETPOWEROFFACTIVE() {
        return SPI_SETPOWEROFFACTIVE;
    }
    private static final int SPI_SETCURSORS = (int)87L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETCURSORS 87
     * }
     */
    public static int SPI_SETCURSORS() {
        return SPI_SETCURSORS;
    }
    private static final int SPI_SETICONS = (int)88L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETICONS 88
     * }
     */
    public static int SPI_SETICONS() {
        return SPI_SETICONS;
    }
    private static final int SPI_GETDEFAULTINPUTLANG = (int)89L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETDEFAULTINPUTLANG 89
     * }
     */
    public static int SPI_GETDEFAULTINPUTLANG() {
        return SPI_GETDEFAULTINPUTLANG;
    }
    private static final int SPI_SETDEFAULTINPUTLANG = (int)90L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETDEFAULTINPUTLANG 90
     * }
     */
    public static int SPI_SETDEFAULTINPUTLANG() {
        return SPI_SETDEFAULTINPUTLANG;
    }
    private static final int SPI_SETLANGTOGGLE = (int)91L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETLANGTOGGLE 91
     * }
     */
    public static int SPI_SETLANGTOGGLE() {
        return SPI_SETLANGTOGGLE;
    }
    private static final int SPI_GETWINDOWSEXTENSION = (int)92L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETWINDOWSEXTENSION 92
     * }
     */
    public static int SPI_GETWINDOWSEXTENSION() {
        return SPI_GETWINDOWSEXTENSION;
    }
    private static final int SPI_SETMOUSETRAILS = (int)93L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMOUSETRAILS 93
     * }
     */
    public static int SPI_SETMOUSETRAILS() {
        return SPI_SETMOUSETRAILS;
    }
    private static final int SPI_GETMOUSETRAILS = (int)94L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMOUSETRAILS 94
     * }
     */
    public static int SPI_GETMOUSETRAILS() {
        return SPI_GETMOUSETRAILS;
    }
    private static final int SPI_SETSCREENSAVERRUNNING = (int)97L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETSCREENSAVERRUNNING 97
     * }
     */
    public static int SPI_SETSCREENSAVERRUNNING() {
        return SPI_SETSCREENSAVERRUNNING;
    }
    private static final int SPI_GETFILTERKEYS = (int)50L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETFILTERKEYS 50
     * }
     */
    public static int SPI_GETFILTERKEYS() {
        return SPI_GETFILTERKEYS;
    }
    private static final int SPI_SETFILTERKEYS = (int)51L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETFILTERKEYS 51
     * }
     */
    public static int SPI_SETFILTERKEYS() {
        return SPI_SETFILTERKEYS;
    }
    private static final int SPI_GETTOGGLEKEYS = (int)52L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETTOGGLEKEYS 52
     * }
     */
    public static int SPI_GETTOGGLEKEYS() {
        return SPI_GETTOGGLEKEYS;
    }
    private static final int SPI_SETTOGGLEKEYS = (int)53L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETTOGGLEKEYS 53
     * }
     */
    public static int SPI_SETTOGGLEKEYS() {
        return SPI_SETTOGGLEKEYS;
    }
    private static final int SPI_GETMOUSEKEYS = (int)54L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMOUSEKEYS 54
     * }
     */
    public static int SPI_GETMOUSEKEYS() {
        return SPI_GETMOUSEKEYS;
    }
    private static final int SPI_SETMOUSEKEYS = (int)55L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMOUSEKEYS 55
     * }
     */
    public static int SPI_SETMOUSEKEYS() {
        return SPI_SETMOUSEKEYS;
    }
    private static final int SPI_GETSHOWSOUNDS = (int)56L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETSHOWSOUNDS 56
     * }
     */
    public static int SPI_GETSHOWSOUNDS() {
        return SPI_GETSHOWSOUNDS;
    }
    private static final int SPI_SETSHOWSOUNDS = (int)57L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETSHOWSOUNDS 57
     * }
     */
    public static int SPI_SETSHOWSOUNDS() {
        return SPI_SETSHOWSOUNDS;
    }
    private static final int SPI_GETSTICKYKEYS = (int)58L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETSTICKYKEYS 58
     * }
     */
    public static int SPI_GETSTICKYKEYS() {
        return SPI_GETSTICKYKEYS;
    }
    private static final int SPI_SETSTICKYKEYS = (int)59L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETSTICKYKEYS 59
     * }
     */
    public static int SPI_SETSTICKYKEYS() {
        return SPI_SETSTICKYKEYS;
    }
    private static final int SPI_GETACCESSTIMEOUT = (int)60L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETACCESSTIMEOUT 60
     * }
     */
    public static int SPI_GETACCESSTIMEOUT() {
        return SPI_GETACCESSTIMEOUT;
    }
    private static final int SPI_SETACCESSTIMEOUT = (int)61L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETACCESSTIMEOUT 61
     * }
     */
    public static int SPI_SETACCESSTIMEOUT() {
        return SPI_SETACCESSTIMEOUT;
    }
    private static final int SPI_GETSERIALKEYS = (int)62L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETSERIALKEYS 62
     * }
     */
    public static int SPI_GETSERIALKEYS() {
        return SPI_GETSERIALKEYS;
    }
    private static final int SPI_SETSERIALKEYS = (int)63L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETSERIALKEYS 63
     * }
     */
    public static int SPI_SETSERIALKEYS() {
        return SPI_SETSERIALKEYS;
    }
    private static final int SPI_GETSOUNDSENTRY = (int)64L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETSOUNDSENTRY 64
     * }
     */
    public static int SPI_GETSOUNDSENTRY() {
        return SPI_GETSOUNDSENTRY;
    }
    private static final int SPI_SETSOUNDSENTRY = (int)65L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETSOUNDSENTRY 65
     * }
     */
    public static int SPI_SETSOUNDSENTRY() {
        return SPI_SETSOUNDSENTRY;
    }
    private static final int SPI_GETSNAPTODEFBUTTON = (int)95L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETSNAPTODEFBUTTON 95
     * }
     */
    public static int SPI_GETSNAPTODEFBUTTON() {
        return SPI_GETSNAPTODEFBUTTON;
    }
    private static final int SPI_SETSNAPTODEFBUTTON = (int)96L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETSNAPTODEFBUTTON 96
     * }
     */
    public static int SPI_SETSNAPTODEFBUTTON() {
        return SPI_SETSNAPTODEFBUTTON;
    }
    private static final int SPI_GETMOUSEHOVERWIDTH = (int)98L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMOUSEHOVERWIDTH 98
     * }
     */
    public static int SPI_GETMOUSEHOVERWIDTH() {
        return SPI_GETMOUSEHOVERWIDTH;
    }
    private static final int SPI_SETMOUSEHOVERWIDTH = (int)99L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMOUSEHOVERWIDTH 99
     * }
     */
    public static int SPI_SETMOUSEHOVERWIDTH() {
        return SPI_SETMOUSEHOVERWIDTH;
    }
    private static final int SPI_GETMOUSEHOVERHEIGHT = (int)100L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMOUSEHOVERHEIGHT 100
     * }
     */
    public static int SPI_GETMOUSEHOVERHEIGHT() {
        return SPI_GETMOUSEHOVERHEIGHT;
    }
    private static final int SPI_SETMOUSEHOVERHEIGHT = (int)101L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMOUSEHOVERHEIGHT 101
     * }
     */
    public static int SPI_SETMOUSEHOVERHEIGHT() {
        return SPI_SETMOUSEHOVERHEIGHT;
    }
    private static final int SPI_GETMOUSEHOVERTIME = (int)102L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMOUSEHOVERTIME 102
     * }
     */
    public static int SPI_GETMOUSEHOVERTIME() {
        return SPI_GETMOUSEHOVERTIME;
    }
    private static final int SPI_SETMOUSEHOVERTIME = (int)103L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMOUSEHOVERTIME 103
     * }
     */
    public static int SPI_SETMOUSEHOVERTIME() {
        return SPI_SETMOUSEHOVERTIME;
    }
    private static final int SPI_GETWHEELSCROLLLINES = (int)104L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETWHEELSCROLLLINES 104
     * }
     */
    public static int SPI_GETWHEELSCROLLLINES() {
        return SPI_GETWHEELSCROLLLINES;
    }
    private static final int SPI_SETWHEELSCROLLLINES = (int)105L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETWHEELSCROLLLINES 105
     * }
     */
    public static int SPI_SETWHEELSCROLLLINES() {
        return SPI_SETWHEELSCROLLLINES;
    }
    private static final int SPI_GETMENUSHOWDELAY = (int)106L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMENUSHOWDELAY 106
     * }
     */
    public static int SPI_GETMENUSHOWDELAY() {
        return SPI_GETMENUSHOWDELAY;
    }
    private static final int SPI_SETMENUSHOWDELAY = (int)107L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMENUSHOWDELAY 107
     * }
     */
    public static int SPI_SETMENUSHOWDELAY() {
        return SPI_SETMENUSHOWDELAY;
    }
    private static final int SPI_GETWHEELSCROLLCHARS = (int)108L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETWHEELSCROLLCHARS 108
     * }
     */
    public static int SPI_GETWHEELSCROLLCHARS() {
        return SPI_GETWHEELSCROLLCHARS;
    }
    private static final int SPI_SETWHEELSCROLLCHARS = (int)109L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETWHEELSCROLLCHARS 109
     * }
     */
    public static int SPI_SETWHEELSCROLLCHARS() {
        return SPI_SETWHEELSCROLLCHARS;
    }
    private static final int SPI_GETSHOWIMEUI = (int)110L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETSHOWIMEUI 110
     * }
     */
    public static int SPI_GETSHOWIMEUI() {
        return SPI_GETSHOWIMEUI;
    }
    private static final int SPI_SETSHOWIMEUI = (int)111L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETSHOWIMEUI 111
     * }
     */
    public static int SPI_SETSHOWIMEUI() {
        return SPI_SETSHOWIMEUI;
    }
    private static final int SPI_GETMOUSESPEED = (int)112L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMOUSESPEED 112
     * }
     */
    public static int SPI_GETMOUSESPEED() {
        return SPI_GETMOUSESPEED;
    }
    private static final int SPI_SETMOUSESPEED = (int)113L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMOUSESPEED 113
     * }
     */
    public static int SPI_SETMOUSESPEED() {
        return SPI_SETMOUSESPEED;
    }
    private static final int SPI_GETSCREENSAVERRUNNING = (int)114L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETSCREENSAVERRUNNING 114
     * }
     */
    public static int SPI_GETSCREENSAVERRUNNING() {
        return SPI_GETSCREENSAVERRUNNING;
    }
    private static final int SPI_GETDESKWALLPAPER = (int)115L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETDESKWALLPAPER 115
     * }
     */
    public static int SPI_GETDESKWALLPAPER() {
        return SPI_GETDESKWALLPAPER;
    }
    private static final int SPI_GETAUDIODESCRIPTION = (int)116L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETAUDIODESCRIPTION 116
     * }
     */
    public static int SPI_GETAUDIODESCRIPTION() {
        return SPI_GETAUDIODESCRIPTION;
    }
    private static final int SPI_SETAUDIODESCRIPTION = (int)117L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETAUDIODESCRIPTION 117
     * }
     */
    public static int SPI_SETAUDIODESCRIPTION() {
        return SPI_SETAUDIODESCRIPTION;
    }
    private static final int SPI_GETSCREENSAVESECURE = (int)118L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETSCREENSAVESECURE 118
     * }
     */
    public static int SPI_GETSCREENSAVESECURE() {
        return SPI_GETSCREENSAVESECURE;
    }
    private static final int SPI_SETSCREENSAVESECURE = (int)119L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETSCREENSAVESECURE 119
     * }
     */
    public static int SPI_SETSCREENSAVESECURE() {
        return SPI_SETSCREENSAVESECURE;
    }
    private static final int SPI_GETHUNGAPPTIMEOUT = (int)120L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETHUNGAPPTIMEOUT 120
     * }
     */
    public static int SPI_GETHUNGAPPTIMEOUT() {
        return SPI_GETHUNGAPPTIMEOUT;
    }
    private static final int SPI_SETHUNGAPPTIMEOUT = (int)121L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETHUNGAPPTIMEOUT 121
     * }
     */
    public static int SPI_SETHUNGAPPTIMEOUT() {
        return SPI_SETHUNGAPPTIMEOUT;
    }
    private static final int SPI_GETWAITTOKILLTIMEOUT = (int)122L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETWAITTOKILLTIMEOUT 122
     * }
     */
    public static int SPI_GETWAITTOKILLTIMEOUT() {
        return SPI_GETWAITTOKILLTIMEOUT;
    }
    private static final int SPI_SETWAITTOKILLTIMEOUT = (int)123L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETWAITTOKILLTIMEOUT 123
     * }
     */
    public static int SPI_SETWAITTOKILLTIMEOUT() {
        return SPI_SETWAITTOKILLTIMEOUT;
    }
    private static final int SPI_GETWAITTOKILLSERVICETIMEOUT = (int)124L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETWAITTOKILLSERVICETIMEOUT 124
     * }
     */
    public static int SPI_GETWAITTOKILLSERVICETIMEOUT() {
        return SPI_GETWAITTOKILLSERVICETIMEOUT;
    }
    private static final int SPI_SETWAITTOKILLSERVICETIMEOUT = (int)125L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETWAITTOKILLSERVICETIMEOUT 125
     * }
     */
    public static int SPI_SETWAITTOKILLSERVICETIMEOUT() {
        return SPI_SETWAITTOKILLSERVICETIMEOUT;
    }
    private static final int SPI_GETMOUSEDOCKTHRESHOLD = (int)126L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMOUSEDOCKTHRESHOLD 126
     * }
     */
    public static int SPI_GETMOUSEDOCKTHRESHOLD() {
        return SPI_GETMOUSEDOCKTHRESHOLD;
    }
    private static final int SPI_SETMOUSEDOCKTHRESHOLD = (int)127L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMOUSEDOCKTHRESHOLD 127
     * }
     */
    public static int SPI_SETMOUSEDOCKTHRESHOLD() {
        return SPI_SETMOUSEDOCKTHRESHOLD;
    }
    private static final int SPI_GETPENDOCKTHRESHOLD = (int)128L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETPENDOCKTHRESHOLD 128
     * }
     */
    public static int SPI_GETPENDOCKTHRESHOLD() {
        return SPI_GETPENDOCKTHRESHOLD;
    }
    private static final int SPI_SETPENDOCKTHRESHOLD = (int)129L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETPENDOCKTHRESHOLD 129
     * }
     */
    public static int SPI_SETPENDOCKTHRESHOLD() {
        return SPI_SETPENDOCKTHRESHOLD;
    }
    private static final int SPI_GETWINARRANGING = (int)130L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETWINARRANGING 130
     * }
     */
    public static int SPI_GETWINARRANGING() {
        return SPI_GETWINARRANGING;
    }
    private static final int SPI_SETWINARRANGING = (int)131L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETWINARRANGING 131
     * }
     */
    public static int SPI_SETWINARRANGING() {
        return SPI_SETWINARRANGING;
    }
    private static final int SPI_GETMOUSEDRAGOUTTHRESHOLD = (int)132L;
    /**
     * {@snippet lang=c :
     * #define SPI_GETMOUSEDRAGOUTTHRESHOLD 132
     * }
     */
    public static int SPI_GETMOUSEDRAGOUTTHRESHOLD() {
        return SPI_GETMOUSEDRAGOUTTHRESHOLD;
    }
    private static final int SPI_SETMOUSEDRAGOUTTHRESHOLD = (int)133L;
    /**
     * {@snippet lang=c :
     * #define SPI_SETMOUSEDRAGOUTTHRESHOLD 133
     * }
     */
    public static int SPI_SETMOUSEDRAGOUTTHRESHOLD() {
        return SPI_SETMOUSEDRAGOUTTHRESHOLD;
    }
}

