// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _DEVICE_DATA_SET_REPAIR_PARAMETERS {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("NumberOfRepairCopies"),
        Constants$root.C_LONG$LAYOUT.withName("SourceCopy"),
        MemoryLayout.sequenceLayout(1, Constants$root.C_LONG$LAYOUT).withName("RepairCopies")
    ).withName("_DEVICE_DATA_SET_REPAIR_PARAMETERS");
    public static MemoryLayout $LAYOUT() {
        return _DEVICE_DATA_SET_REPAIR_PARAMETERS.$struct$LAYOUT;
    }
    static final VarHandle NumberOfRepairCopies$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("NumberOfRepairCopies"));
    public static VarHandle NumberOfRepairCopies$VH() {
        return _DEVICE_DATA_SET_REPAIR_PARAMETERS.NumberOfRepairCopies$VH;
    }
    public static int NumberOfRepairCopies$get(MemorySegment seg) {
        return (int)_DEVICE_DATA_SET_REPAIR_PARAMETERS.NumberOfRepairCopies$VH.get(seg);
    }
    public static void NumberOfRepairCopies$set( MemorySegment seg, int x) {
        _DEVICE_DATA_SET_REPAIR_PARAMETERS.NumberOfRepairCopies$VH.set(seg, x);
    }
    public static int NumberOfRepairCopies$get(MemorySegment seg, long index) {
        return (int)_DEVICE_DATA_SET_REPAIR_PARAMETERS.NumberOfRepairCopies$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void NumberOfRepairCopies$set(MemorySegment seg, long index, int x) {
        _DEVICE_DATA_SET_REPAIR_PARAMETERS.NumberOfRepairCopies$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle SourceCopy$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("SourceCopy"));
    public static VarHandle SourceCopy$VH() {
        return _DEVICE_DATA_SET_REPAIR_PARAMETERS.SourceCopy$VH;
    }
    public static int SourceCopy$get(MemorySegment seg) {
        return (int)_DEVICE_DATA_SET_REPAIR_PARAMETERS.SourceCopy$VH.get(seg);
    }
    public static void SourceCopy$set( MemorySegment seg, int x) {
        _DEVICE_DATA_SET_REPAIR_PARAMETERS.SourceCopy$VH.set(seg, x);
    }
    public static int SourceCopy$get(MemorySegment seg, long index) {
        return (int)_DEVICE_DATA_SET_REPAIR_PARAMETERS.SourceCopy$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void SourceCopy$set(MemorySegment seg, long index, int x) {
        _DEVICE_DATA_SET_REPAIR_PARAMETERS.SourceCopy$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment RepairCopies$slice(MemorySegment seg) {
        return seg.asSlice(8, 4);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


