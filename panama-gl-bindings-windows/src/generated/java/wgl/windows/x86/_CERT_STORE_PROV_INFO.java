// Generated by jextract

package wgl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _CERT_STORE_PROV_INFO {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        Constants$root.C_LONG$LAYOUT.withName("cStoreProvFunc"),
        Constants$root.C_POINTER$LAYOUT.withName("rgpvStoreProvFunc"),
        Constants$root.C_POINTER$LAYOUT.withName("hStoreProv"),
        Constants$root.C_LONG$LAYOUT.withName("dwStoreProvFlags"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("hStoreProvFuncAddr2")
    ).withName("_CERT_STORE_PROV_INFO");
    public static MemoryLayout $LAYOUT() {
        return _CERT_STORE_PROV_INFO.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return _CERT_STORE_PROV_INFO.cbSize$VH;
    }
    public static int cbSize$get(MemorySegment seg) {
        return (int)_CERT_STORE_PROV_INFO.cbSize$VH.get(seg);
    }
    public static void cbSize$set( MemorySegment seg, int x) {
        _CERT_STORE_PROV_INFO.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)_CERT_STORE_PROV_INFO.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        _CERT_STORE_PROV_INFO.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cStoreProvFunc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cStoreProvFunc"));
    public static VarHandle cStoreProvFunc$VH() {
        return _CERT_STORE_PROV_INFO.cStoreProvFunc$VH;
    }
    public static int cStoreProvFunc$get(MemorySegment seg) {
        return (int)_CERT_STORE_PROV_INFO.cStoreProvFunc$VH.get(seg);
    }
    public static void cStoreProvFunc$set( MemorySegment seg, int x) {
        _CERT_STORE_PROV_INFO.cStoreProvFunc$VH.set(seg, x);
    }
    public static int cStoreProvFunc$get(MemorySegment seg, long index) {
        return (int)_CERT_STORE_PROV_INFO.cStoreProvFunc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cStoreProvFunc$set(MemorySegment seg, long index, int x) {
        _CERT_STORE_PROV_INFO.cStoreProvFunc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rgpvStoreProvFunc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rgpvStoreProvFunc"));
    public static VarHandle rgpvStoreProvFunc$VH() {
        return _CERT_STORE_PROV_INFO.rgpvStoreProvFunc$VH;
    }
    public static MemoryAddress rgpvStoreProvFunc$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CERT_STORE_PROV_INFO.rgpvStoreProvFunc$VH.get(seg);
    }
    public static void rgpvStoreProvFunc$set( MemorySegment seg, MemoryAddress x) {
        _CERT_STORE_PROV_INFO.rgpvStoreProvFunc$VH.set(seg, x);
    }
    public static MemoryAddress rgpvStoreProvFunc$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CERT_STORE_PROV_INFO.rgpvStoreProvFunc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rgpvStoreProvFunc$set(MemorySegment seg, long index, MemoryAddress x) {
        _CERT_STORE_PROV_INFO.rgpvStoreProvFunc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hStoreProv$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hStoreProv"));
    public static VarHandle hStoreProv$VH() {
        return _CERT_STORE_PROV_INFO.hStoreProv$VH;
    }
    public static MemoryAddress hStoreProv$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CERT_STORE_PROV_INFO.hStoreProv$VH.get(seg);
    }
    public static void hStoreProv$set( MemorySegment seg, MemoryAddress x) {
        _CERT_STORE_PROV_INFO.hStoreProv$VH.set(seg, x);
    }
    public static MemoryAddress hStoreProv$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CERT_STORE_PROV_INFO.hStoreProv$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hStoreProv$set(MemorySegment seg, long index, MemoryAddress x) {
        _CERT_STORE_PROV_INFO.hStoreProv$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwStoreProvFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwStoreProvFlags"));
    public static VarHandle dwStoreProvFlags$VH() {
        return _CERT_STORE_PROV_INFO.dwStoreProvFlags$VH;
    }
    public static int dwStoreProvFlags$get(MemorySegment seg) {
        return (int)_CERT_STORE_PROV_INFO.dwStoreProvFlags$VH.get(seg);
    }
    public static void dwStoreProvFlags$set( MemorySegment seg, int x) {
        _CERT_STORE_PROV_INFO.dwStoreProvFlags$VH.set(seg, x);
    }
    public static int dwStoreProvFlags$get(MemorySegment seg, long index) {
        return (int)_CERT_STORE_PROV_INFO.dwStoreProvFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwStoreProvFlags$set(MemorySegment seg, long index, int x) {
        _CERT_STORE_PROV_INFO.dwStoreProvFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hStoreProvFuncAddr2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hStoreProvFuncAddr2"));
    public static VarHandle hStoreProvFuncAddr2$VH() {
        return _CERT_STORE_PROV_INFO.hStoreProvFuncAddr2$VH;
    }
    public static MemoryAddress hStoreProvFuncAddr2$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CERT_STORE_PROV_INFO.hStoreProvFuncAddr2$VH.get(seg);
    }
    public static void hStoreProvFuncAddr2$set( MemorySegment seg, MemoryAddress x) {
        _CERT_STORE_PROV_INFO.hStoreProvFuncAddr2$VH.set(seg, x);
    }
    public static MemoryAddress hStoreProvFuncAddr2$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CERT_STORE_PROV_INFO.hStoreProvFuncAddr2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hStoreProvFuncAddr2$set(MemorySegment seg, long index, MemoryAddress x) {
        _CERT_STORE_PROV_INFO.hStoreProvFuncAddr2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


