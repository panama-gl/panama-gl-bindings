// Generated by jextract

package opengl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _ARM64EC_NT_CONTEXT {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_P1Home"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_P2Home"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_P3Home"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_P4Home"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_P5Home"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_P6Home"),
                Constants$root.C_LONG$LAYOUT.withName("ContextFlags"),
                Constants$root.C_LONG$LAYOUT.withName("AMD64_MxCsr_copy"),
                Constants$root.C_SHORT$LAYOUT.withName("AMD64_SegCs"),
                Constants$root.C_SHORT$LAYOUT.withName("AMD64_SegDs"),
                Constants$root.C_SHORT$LAYOUT.withName("AMD64_SegEs"),
                Constants$root.C_SHORT$LAYOUT.withName("AMD64_SegFs"),
                Constants$root.C_SHORT$LAYOUT.withName("AMD64_SegGs"),
                Constants$root.C_SHORT$LAYOUT.withName("AMD64_SegSs"),
                Constants$root.C_LONG$LAYOUT.withName("AMD64_EFlags"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_Dr0"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_Dr1"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_Dr2"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_Dr3"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_Dr6"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_Dr7"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X8"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X0"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X1"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X27"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("Sp"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("Fp"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X25"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X26"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X2"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X3"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X4"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X5"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X19"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X20"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X21"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X22"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("Pc"),
                MemoryLayout.structLayout(
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_ControlWord"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_StatusWord"),
                    Constants$root.C_CHAR$LAYOUT.withName("AMD64_TagWord"),
                    Constants$root.C_CHAR$LAYOUT.withName("AMD64_Reserved1"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_ErrorOpcode"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_ErrorOffset"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_ErrorSelector"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_Reserved2"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_DataOffset"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_DataSelector"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_Reserved3"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_MxCsr"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_MxCsr_Mask"),
                    Constants$root.C_LONG_LONG$LAYOUT.withName("Lr"),
                    Constants$root.C_SHORT$LAYOUT.withName("X16_0"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_St0_Reserved1"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_St0_Reserved2"),
                    Constants$root.C_LONG_LONG$LAYOUT.withName("X6"),
                    Constants$root.C_SHORT$LAYOUT.withName("X16_1"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_St1_Reserved1"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_St1_Reserved2"),
                    Constants$root.C_LONG_LONG$LAYOUT.withName("X7"),
                    Constants$root.C_SHORT$LAYOUT.withName("X16_2"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_St2_Reserved1"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_St2_Reserved2"),
                    Constants$root.C_LONG_LONG$LAYOUT.withName("X9"),
                    Constants$root.C_SHORT$LAYOUT.withName("X16_3"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_St3_Reserved1"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_St3_Reserved2"),
                    Constants$root.C_LONG_LONG$LAYOUT.withName("X10"),
                    Constants$root.C_SHORT$LAYOUT.withName("X17_0"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_St4_Reserved1"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_St4_Reserved2"),
                    Constants$root.C_LONG_LONG$LAYOUT.withName("X11"),
                    Constants$root.C_SHORT$LAYOUT.withName("X17_1"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_St5_Reserved1"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_St5_Reserved2"),
                    Constants$root.C_LONG_LONG$LAYOUT.withName("X12"),
                    Constants$root.C_SHORT$LAYOUT.withName("X17_2"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_St6_Reserved1"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_St6_Reserved2"),
                    Constants$root.C_LONG_LONG$LAYOUT.withName("X15"),
                    Constants$root.C_SHORT$LAYOUT.withName("X17_3"),
                    Constants$root.C_SHORT$LAYOUT.withName("AMD64_St7_Reserved1"),
                    Constants$root.C_LONG$LAYOUT.withName("AMD64_St7_Reserved2"),
                    MemoryLayout.sequenceLayout(16, MemoryLayout.unionLayout(
                        MemoryLayout.structLayout(
                            Constants$root.C_LONG_LONG$LAYOUT.withName("Low"),
                            Constants$root.C_LONG_LONG$LAYOUT.withName("High")
                        ).withName("$anon$0"),
                        MemoryLayout.sequenceLayout(2, Constants$root.C_DOUBLE$LAYOUT).withName("D"),
                        MemoryLayout.sequenceLayout(4, Constants$root.C_FLOAT$LAYOUT).withName("S"),
                        MemoryLayout.sequenceLayout(8, Constants$root.C_SHORT$LAYOUT).withName("H"),
                        MemoryLayout.sequenceLayout(16, Constants$root.C_CHAR$LAYOUT).withName("B")
                    ).withName("_ARM64_NT_NEON128")).withName("V"),
                    MemoryLayout.sequenceLayout(96, Constants$root.C_CHAR$LAYOUT).withName("AMD64_XSAVE_FORMAT_Reserved4")
                ).withName("$anon$0"),
                MemoryLayout.sequenceLayout(26, MemoryLayout.unionLayout(
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG_LONG$LAYOUT.withName("Low"),
                        Constants$root.C_LONG_LONG$LAYOUT.withName("High")
                    ).withName("$anon$0"),
                    MemoryLayout.sequenceLayout(2, Constants$root.C_DOUBLE$LAYOUT).withName("D"),
                    MemoryLayout.sequenceLayout(4, Constants$root.C_FLOAT$LAYOUT).withName("S"),
                    MemoryLayout.sequenceLayout(8, Constants$root.C_SHORT$LAYOUT).withName("H"),
                    MemoryLayout.sequenceLayout(16, Constants$root.C_CHAR$LAYOUT).withName("B")
                ).withName("_ARM64_NT_NEON128")).withName("AMD64_VectorRegister"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_VectorControl"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_DebugControl"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_LastBranchToRip"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_LastBranchFromRip"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_LastExceptionToRip"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("AMD64_LastExceptionFromRip")
            ).withName("$anon$0")
        ).withName("$anon$0")
    ).withName("_ARM64EC_NT_CONTEXT");
    public static MemoryLayout $LAYOUT() {
        return _ARM64EC_NT_CONTEXT.$struct$LAYOUT;
    }
    static final VarHandle AMD64_P1Home$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_P1Home"));
    public static VarHandle AMD64_P1Home$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_P1Home$VH;
    }
    public static long AMD64_P1Home$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P1Home$VH.get(seg);
    }
    public static void AMD64_P1Home$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P1Home$VH.set(seg, x);
    }
    public static long AMD64_P1Home$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P1Home$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P1Home$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P1Home$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_P2Home$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_P2Home"));
    public static VarHandle AMD64_P2Home$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_P2Home$VH;
    }
    public static long AMD64_P2Home$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P2Home$VH.get(seg);
    }
    public static void AMD64_P2Home$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P2Home$VH.set(seg, x);
    }
    public static long AMD64_P2Home$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P2Home$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P2Home$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P2Home$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_P3Home$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_P3Home"));
    public static VarHandle AMD64_P3Home$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_P3Home$VH;
    }
    public static long AMD64_P3Home$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P3Home$VH.get(seg);
    }
    public static void AMD64_P3Home$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P3Home$VH.set(seg, x);
    }
    public static long AMD64_P3Home$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P3Home$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P3Home$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P3Home$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_P4Home$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_P4Home"));
    public static VarHandle AMD64_P4Home$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_P4Home$VH;
    }
    public static long AMD64_P4Home$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P4Home$VH.get(seg);
    }
    public static void AMD64_P4Home$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P4Home$VH.set(seg, x);
    }
    public static long AMD64_P4Home$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P4Home$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P4Home$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P4Home$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_P5Home$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_P5Home"));
    public static VarHandle AMD64_P5Home$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_P5Home$VH;
    }
    public static long AMD64_P5Home$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P5Home$VH.get(seg);
    }
    public static void AMD64_P5Home$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P5Home$VH.set(seg, x);
    }
    public static long AMD64_P5Home$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P5Home$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P5Home$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P5Home$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_P6Home$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_P6Home"));
    public static VarHandle AMD64_P6Home$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_P6Home$VH;
    }
    public static long AMD64_P6Home$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P6Home$VH.get(seg);
    }
    public static void AMD64_P6Home$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P6Home$VH.set(seg, x);
    }
    public static long AMD64_P6Home$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_P6Home$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P6Home$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_P6Home$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ContextFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("ContextFlags"));
    public static VarHandle ContextFlags$VH() {
        return _ARM64EC_NT_CONTEXT.ContextFlags$VH;
    }
    public static int ContextFlags$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.ContextFlags$VH.get(seg);
    }
    public static void ContextFlags$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.ContextFlags$VH.set(seg, x);
    }
    public static int ContextFlags$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.ContextFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ContextFlags$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.ContextFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_MxCsr_copy$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_MxCsr_copy"));
    public static VarHandle AMD64_MxCsr_copy$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_MxCsr_copy$VH;
    }
    public static int AMD64_MxCsr_copy$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_MxCsr_copy$VH.get(seg);
    }
    public static void AMD64_MxCsr_copy$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_MxCsr_copy$VH.set(seg, x);
    }
    public static int AMD64_MxCsr_copy$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_MxCsr_copy$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_MxCsr_copy$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_MxCsr_copy$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_SegCs$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_SegCs"));
    public static VarHandle AMD64_SegCs$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_SegCs$VH;
    }
    public static short AMD64_SegCs$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegCs$VH.get(seg);
    }
    public static void AMD64_SegCs$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegCs$VH.set(seg, x);
    }
    public static short AMD64_SegCs$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegCs$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegCs$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegCs$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_SegDs$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_SegDs"));
    public static VarHandle AMD64_SegDs$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_SegDs$VH;
    }
    public static short AMD64_SegDs$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegDs$VH.get(seg);
    }
    public static void AMD64_SegDs$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegDs$VH.set(seg, x);
    }
    public static short AMD64_SegDs$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegDs$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegDs$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegDs$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_SegEs$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_SegEs"));
    public static VarHandle AMD64_SegEs$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_SegEs$VH;
    }
    public static short AMD64_SegEs$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegEs$VH.get(seg);
    }
    public static void AMD64_SegEs$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegEs$VH.set(seg, x);
    }
    public static short AMD64_SegEs$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegEs$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegEs$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegEs$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_SegFs$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_SegFs"));
    public static VarHandle AMD64_SegFs$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_SegFs$VH;
    }
    public static short AMD64_SegFs$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegFs$VH.get(seg);
    }
    public static void AMD64_SegFs$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegFs$VH.set(seg, x);
    }
    public static short AMD64_SegFs$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegFs$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegFs$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegFs$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_SegGs$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_SegGs"));
    public static VarHandle AMD64_SegGs$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_SegGs$VH;
    }
    public static short AMD64_SegGs$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegGs$VH.get(seg);
    }
    public static void AMD64_SegGs$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegGs$VH.set(seg, x);
    }
    public static short AMD64_SegGs$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegGs$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegGs$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegGs$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_SegSs$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_SegSs"));
    public static VarHandle AMD64_SegSs$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_SegSs$VH;
    }
    public static short AMD64_SegSs$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegSs$VH.get(seg);
    }
    public static void AMD64_SegSs$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegSs$VH.set(seg, x);
    }
    public static short AMD64_SegSs$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_SegSs$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegSs$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_SegSs$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_EFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_EFlags"));
    public static VarHandle AMD64_EFlags$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_EFlags$VH;
    }
    public static int AMD64_EFlags$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_EFlags$VH.get(seg);
    }
    public static void AMD64_EFlags$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_EFlags$VH.set(seg, x);
    }
    public static int AMD64_EFlags$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_EFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_EFlags$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_EFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_Dr0$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_Dr0"));
    public static VarHandle AMD64_Dr0$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_Dr0$VH;
    }
    public static long AMD64_Dr0$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr0$VH.get(seg);
    }
    public static void AMD64_Dr0$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr0$VH.set(seg, x);
    }
    public static long AMD64_Dr0$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr0$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr0$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr0$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_Dr1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_Dr1"));
    public static VarHandle AMD64_Dr1$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_Dr1$VH;
    }
    public static long AMD64_Dr1$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr1$VH.get(seg);
    }
    public static void AMD64_Dr1$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr1$VH.set(seg, x);
    }
    public static long AMD64_Dr1$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr1$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_Dr2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_Dr2"));
    public static VarHandle AMD64_Dr2$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_Dr2$VH;
    }
    public static long AMD64_Dr2$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr2$VH.get(seg);
    }
    public static void AMD64_Dr2$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr2$VH.set(seg, x);
    }
    public static long AMD64_Dr2$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr2$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_Dr3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_Dr3"));
    public static VarHandle AMD64_Dr3$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_Dr3$VH;
    }
    public static long AMD64_Dr3$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr3$VH.get(seg);
    }
    public static void AMD64_Dr3$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr3$VH.set(seg, x);
    }
    public static long AMD64_Dr3$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr3$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_Dr6$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_Dr6"));
    public static VarHandle AMD64_Dr6$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_Dr6$VH;
    }
    public static long AMD64_Dr6$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr6$VH.get(seg);
    }
    public static void AMD64_Dr6$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr6$VH.set(seg, x);
    }
    public static long AMD64_Dr6$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr6$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr6$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr6$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_Dr7$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_Dr7"));
    public static VarHandle AMD64_Dr7$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_Dr7$VH;
    }
    public static long AMD64_Dr7$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr7$VH.get(seg);
    }
    public static void AMD64_Dr7$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr7$VH.set(seg, x);
    }
    public static long AMD64_Dr7$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_Dr7$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr7$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_Dr7$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X8$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X8"));
    public static VarHandle X8$VH() {
        return _ARM64EC_NT_CONTEXT.X8$VH;
    }
    public static long X8$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X8$VH.get(seg);
    }
    public static void X8$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X8$VH.set(seg, x);
    }
    public static long X8$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X8$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X8$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X8$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X0$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X0"));
    public static VarHandle X0$VH() {
        return _ARM64EC_NT_CONTEXT.X0$VH;
    }
    public static long X0$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X0$VH.get(seg);
    }
    public static void X0$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X0$VH.set(seg, x);
    }
    public static long X0$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X0$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X0$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X0$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X1"));
    public static VarHandle X1$VH() {
        return _ARM64EC_NT_CONTEXT.X1$VH;
    }
    public static long X1$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X1$VH.get(seg);
    }
    public static void X1$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X1$VH.set(seg, x);
    }
    public static long X1$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X1$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X27$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X27"));
    public static VarHandle X27$VH() {
        return _ARM64EC_NT_CONTEXT.X27$VH;
    }
    public static long X27$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X27$VH.get(seg);
    }
    public static void X27$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X27$VH.set(seg, x);
    }
    public static long X27$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X27$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X27$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X27$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Sp$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("Sp"));
    public static VarHandle Sp$VH() {
        return _ARM64EC_NT_CONTEXT.Sp$VH;
    }
    public static long Sp$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.Sp$VH.get(seg);
    }
    public static void Sp$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.Sp$VH.set(seg, x);
    }
    public static long Sp$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.Sp$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Sp$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.Sp$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Fp$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("Fp"));
    public static VarHandle Fp$VH() {
        return _ARM64EC_NT_CONTEXT.Fp$VH;
    }
    public static long Fp$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.Fp$VH.get(seg);
    }
    public static void Fp$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.Fp$VH.set(seg, x);
    }
    public static long Fp$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.Fp$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Fp$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.Fp$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X25$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X25"));
    public static VarHandle X25$VH() {
        return _ARM64EC_NT_CONTEXT.X25$VH;
    }
    public static long X25$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X25$VH.get(seg);
    }
    public static void X25$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X25$VH.set(seg, x);
    }
    public static long X25$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X25$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X25$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X25$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X26$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X26"));
    public static VarHandle X26$VH() {
        return _ARM64EC_NT_CONTEXT.X26$VH;
    }
    public static long X26$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X26$VH.get(seg);
    }
    public static void X26$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X26$VH.set(seg, x);
    }
    public static long X26$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X26$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X26$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X26$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X2"));
    public static VarHandle X2$VH() {
        return _ARM64EC_NT_CONTEXT.X2$VH;
    }
    public static long X2$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X2$VH.get(seg);
    }
    public static void X2$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X2$VH.set(seg, x);
    }
    public static long X2$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X2$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X3"));
    public static VarHandle X3$VH() {
        return _ARM64EC_NT_CONTEXT.X3$VH;
    }
    public static long X3$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X3$VH.get(seg);
    }
    public static void X3$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X3$VH.set(seg, x);
    }
    public static long X3$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X3$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X4$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X4"));
    public static VarHandle X4$VH() {
        return _ARM64EC_NT_CONTEXT.X4$VH;
    }
    public static long X4$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X4$VH.get(seg);
    }
    public static void X4$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X4$VH.set(seg, x);
    }
    public static long X4$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X4$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X4$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X4$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X5$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X5"));
    public static VarHandle X5$VH() {
        return _ARM64EC_NT_CONTEXT.X5$VH;
    }
    public static long X5$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X5$VH.get(seg);
    }
    public static void X5$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X5$VH.set(seg, x);
    }
    public static long X5$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X5$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X5$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X5$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X19$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X19"));
    public static VarHandle X19$VH() {
        return _ARM64EC_NT_CONTEXT.X19$VH;
    }
    public static long X19$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X19$VH.get(seg);
    }
    public static void X19$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X19$VH.set(seg, x);
    }
    public static long X19$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X19$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X19$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X19$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X20$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X20"));
    public static VarHandle X20$VH() {
        return _ARM64EC_NT_CONTEXT.X20$VH;
    }
    public static long X20$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X20$VH.get(seg);
    }
    public static void X20$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X20$VH.set(seg, x);
    }
    public static long X20$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X20$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X20$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X20$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X21$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X21"));
    public static VarHandle X21$VH() {
        return _ARM64EC_NT_CONTEXT.X21$VH;
    }
    public static long X21$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X21$VH.get(seg);
    }
    public static void X21$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X21$VH.set(seg, x);
    }
    public static long X21$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X21$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X21$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X21$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X22$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X22"));
    public static VarHandle X22$VH() {
        return _ARM64EC_NT_CONTEXT.X22$VH;
    }
    public static long X22$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X22$VH.get(seg);
    }
    public static void X22$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X22$VH.set(seg, x);
    }
    public static long X22$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X22$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X22$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X22$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Pc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("Pc"));
    public static VarHandle Pc$VH() {
        return _ARM64EC_NT_CONTEXT.Pc$VH;
    }
    public static long Pc$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.Pc$VH.get(seg);
    }
    public static void Pc$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.Pc$VH.set(seg, x);
    }
    public static long Pc$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.Pc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Pc$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.Pc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_ControlWord$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_ControlWord"));
    public static VarHandle AMD64_ControlWord$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_ControlWord$VH;
    }
    public static short AMD64_ControlWord$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_ControlWord$VH.get(seg);
    }
    public static void AMD64_ControlWord$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_ControlWord$VH.set(seg, x);
    }
    public static short AMD64_ControlWord$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_ControlWord$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_ControlWord$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_ControlWord$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_StatusWord$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_StatusWord"));
    public static VarHandle AMD64_StatusWord$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_StatusWord$VH;
    }
    public static short AMD64_StatusWord$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_StatusWord$VH.get(seg);
    }
    public static void AMD64_StatusWord$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_StatusWord$VH.set(seg, x);
    }
    public static short AMD64_StatusWord$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_StatusWord$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_StatusWord$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_StatusWord$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_TagWord$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_TagWord"));
    public static VarHandle AMD64_TagWord$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_TagWord$VH;
    }
    public static byte AMD64_TagWord$get(MemorySegment seg) {
        return (byte)_ARM64EC_NT_CONTEXT.AMD64_TagWord$VH.get(seg);
    }
    public static void AMD64_TagWord$set( MemorySegment seg, byte x) {
        _ARM64EC_NT_CONTEXT.AMD64_TagWord$VH.set(seg, x);
    }
    public static byte AMD64_TagWord$get(MemorySegment seg, long index) {
        return (byte)_ARM64EC_NT_CONTEXT.AMD64_TagWord$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_TagWord$set(MemorySegment seg, long index, byte x) {
        _ARM64EC_NT_CONTEXT.AMD64_TagWord$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_Reserved1"));
    public static VarHandle AMD64_Reserved1$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_Reserved1$VH;
    }
    public static byte AMD64_Reserved1$get(MemorySegment seg) {
        return (byte)_ARM64EC_NT_CONTEXT.AMD64_Reserved1$VH.get(seg);
    }
    public static void AMD64_Reserved1$set( MemorySegment seg, byte x) {
        _ARM64EC_NT_CONTEXT.AMD64_Reserved1$VH.set(seg, x);
    }
    public static byte AMD64_Reserved1$get(MemorySegment seg, long index) {
        return (byte)_ARM64EC_NT_CONTEXT.AMD64_Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Reserved1$set(MemorySegment seg, long index, byte x) {
        _ARM64EC_NT_CONTEXT.AMD64_Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_ErrorOpcode$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_ErrorOpcode"));
    public static VarHandle AMD64_ErrorOpcode$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_ErrorOpcode$VH;
    }
    public static short AMD64_ErrorOpcode$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_ErrorOpcode$VH.get(seg);
    }
    public static void AMD64_ErrorOpcode$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_ErrorOpcode$VH.set(seg, x);
    }
    public static short AMD64_ErrorOpcode$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_ErrorOpcode$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_ErrorOpcode$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_ErrorOpcode$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_ErrorOffset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_ErrorOffset"));
    public static VarHandle AMD64_ErrorOffset$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_ErrorOffset$VH;
    }
    public static int AMD64_ErrorOffset$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_ErrorOffset$VH.get(seg);
    }
    public static void AMD64_ErrorOffset$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_ErrorOffset$VH.set(seg, x);
    }
    public static int AMD64_ErrorOffset$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_ErrorOffset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_ErrorOffset$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_ErrorOffset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_ErrorSelector$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_ErrorSelector"));
    public static VarHandle AMD64_ErrorSelector$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_ErrorSelector$VH;
    }
    public static short AMD64_ErrorSelector$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_ErrorSelector$VH.get(seg);
    }
    public static void AMD64_ErrorSelector$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_ErrorSelector$VH.set(seg, x);
    }
    public static short AMD64_ErrorSelector$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_ErrorSelector$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_ErrorSelector$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_ErrorSelector$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_Reserved2"));
    public static VarHandle AMD64_Reserved2$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_Reserved2$VH;
    }
    public static short AMD64_Reserved2$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_Reserved2$VH.get(seg);
    }
    public static void AMD64_Reserved2$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_Reserved2$VH.set(seg, x);
    }
    public static short AMD64_Reserved2$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Reserved2$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_DataOffset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_DataOffset"));
    public static VarHandle AMD64_DataOffset$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_DataOffset$VH;
    }
    public static int AMD64_DataOffset$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_DataOffset$VH.get(seg);
    }
    public static void AMD64_DataOffset$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_DataOffset$VH.set(seg, x);
    }
    public static int AMD64_DataOffset$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_DataOffset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_DataOffset$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_DataOffset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_DataSelector$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_DataSelector"));
    public static VarHandle AMD64_DataSelector$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_DataSelector$VH;
    }
    public static short AMD64_DataSelector$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_DataSelector$VH.get(seg);
    }
    public static void AMD64_DataSelector$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_DataSelector$VH.set(seg, x);
    }
    public static short AMD64_DataSelector$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_DataSelector$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_DataSelector$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_DataSelector$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_Reserved3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_Reserved3"));
    public static VarHandle AMD64_Reserved3$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_Reserved3$VH;
    }
    public static short AMD64_Reserved3$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_Reserved3$VH.get(seg);
    }
    public static void AMD64_Reserved3$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_Reserved3$VH.set(seg, x);
    }
    public static short AMD64_Reserved3$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_Reserved3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Reserved3$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_Reserved3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_MxCsr$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_MxCsr"));
    public static VarHandle AMD64_MxCsr$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_MxCsr$VH;
    }
    public static int AMD64_MxCsr$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_MxCsr$VH.get(seg);
    }
    public static void AMD64_MxCsr$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_MxCsr$VH.set(seg, x);
    }
    public static int AMD64_MxCsr$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_MxCsr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_MxCsr$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_MxCsr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_MxCsr_Mask$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_MxCsr_Mask"));
    public static VarHandle AMD64_MxCsr_Mask$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_MxCsr_Mask$VH;
    }
    public static int AMD64_MxCsr_Mask$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_MxCsr_Mask$VH.get(seg);
    }
    public static void AMD64_MxCsr_Mask$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_MxCsr_Mask$VH.set(seg, x);
    }
    public static int AMD64_MxCsr_Mask$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_MxCsr_Mask$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_MxCsr_Mask$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_MxCsr_Mask$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Lr$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("Lr"));
    public static VarHandle Lr$VH() {
        return _ARM64EC_NT_CONTEXT.Lr$VH;
    }
    public static long Lr$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.Lr$VH.get(seg);
    }
    public static void Lr$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.Lr$VH.set(seg, x);
    }
    public static long Lr$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.Lr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Lr$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.Lr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X16_0$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X16_0"));
    public static VarHandle X16_0$VH() {
        return _ARM64EC_NT_CONTEXT.X16_0$VH;
    }
    public static short X16_0$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.X16_0$VH.get(seg);
    }
    public static void X16_0$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.X16_0$VH.set(seg, x);
    }
    public static short X16_0$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.X16_0$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X16_0$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.X16_0$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St0_Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St0_Reserved1"));
    public static VarHandle AMD64_St0_Reserved1$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St0_Reserved1$VH;
    }
    public static short AMD64_St0_Reserved1$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St0_Reserved1$VH.get(seg);
    }
    public static void AMD64_St0_Reserved1$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St0_Reserved1$VH.set(seg, x);
    }
    public static short AMD64_St0_Reserved1$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St0_Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St0_Reserved1$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St0_Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St0_Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St0_Reserved2"));
    public static VarHandle AMD64_St0_Reserved2$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St0_Reserved2$VH;
    }
    public static int AMD64_St0_Reserved2$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St0_Reserved2$VH.get(seg);
    }
    public static void AMD64_St0_Reserved2$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St0_Reserved2$VH.set(seg, x);
    }
    public static int AMD64_St0_Reserved2$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St0_Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St0_Reserved2$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St0_Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X6$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X6"));
    public static VarHandle X6$VH() {
        return _ARM64EC_NT_CONTEXT.X6$VH;
    }
    public static long X6$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X6$VH.get(seg);
    }
    public static void X6$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X6$VH.set(seg, x);
    }
    public static long X6$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X6$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X6$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X6$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X16_1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X16_1"));
    public static VarHandle X16_1$VH() {
        return _ARM64EC_NT_CONTEXT.X16_1$VH;
    }
    public static short X16_1$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.X16_1$VH.get(seg);
    }
    public static void X16_1$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.X16_1$VH.set(seg, x);
    }
    public static short X16_1$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.X16_1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X16_1$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.X16_1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St1_Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St1_Reserved1"));
    public static VarHandle AMD64_St1_Reserved1$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St1_Reserved1$VH;
    }
    public static short AMD64_St1_Reserved1$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St1_Reserved1$VH.get(seg);
    }
    public static void AMD64_St1_Reserved1$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St1_Reserved1$VH.set(seg, x);
    }
    public static short AMD64_St1_Reserved1$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St1_Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St1_Reserved1$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St1_Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St1_Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St1_Reserved2"));
    public static VarHandle AMD64_St1_Reserved2$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St1_Reserved2$VH;
    }
    public static int AMD64_St1_Reserved2$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St1_Reserved2$VH.get(seg);
    }
    public static void AMD64_St1_Reserved2$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St1_Reserved2$VH.set(seg, x);
    }
    public static int AMD64_St1_Reserved2$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St1_Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St1_Reserved2$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St1_Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X7$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X7"));
    public static VarHandle X7$VH() {
        return _ARM64EC_NT_CONTEXT.X7$VH;
    }
    public static long X7$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X7$VH.get(seg);
    }
    public static void X7$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X7$VH.set(seg, x);
    }
    public static long X7$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X7$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X7$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X7$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X16_2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X16_2"));
    public static VarHandle X16_2$VH() {
        return _ARM64EC_NT_CONTEXT.X16_2$VH;
    }
    public static short X16_2$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.X16_2$VH.get(seg);
    }
    public static void X16_2$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.X16_2$VH.set(seg, x);
    }
    public static short X16_2$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.X16_2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X16_2$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.X16_2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St2_Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St2_Reserved1"));
    public static VarHandle AMD64_St2_Reserved1$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St2_Reserved1$VH;
    }
    public static short AMD64_St2_Reserved1$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St2_Reserved1$VH.get(seg);
    }
    public static void AMD64_St2_Reserved1$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St2_Reserved1$VH.set(seg, x);
    }
    public static short AMD64_St2_Reserved1$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St2_Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St2_Reserved1$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St2_Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St2_Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St2_Reserved2"));
    public static VarHandle AMD64_St2_Reserved2$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St2_Reserved2$VH;
    }
    public static int AMD64_St2_Reserved2$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St2_Reserved2$VH.get(seg);
    }
    public static void AMD64_St2_Reserved2$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St2_Reserved2$VH.set(seg, x);
    }
    public static int AMD64_St2_Reserved2$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St2_Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St2_Reserved2$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St2_Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X9$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X9"));
    public static VarHandle X9$VH() {
        return _ARM64EC_NT_CONTEXT.X9$VH;
    }
    public static long X9$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X9$VH.get(seg);
    }
    public static void X9$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X9$VH.set(seg, x);
    }
    public static long X9$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X9$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X9$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X9$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X16_3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X16_3"));
    public static VarHandle X16_3$VH() {
        return _ARM64EC_NT_CONTEXT.X16_3$VH;
    }
    public static short X16_3$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.X16_3$VH.get(seg);
    }
    public static void X16_3$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.X16_3$VH.set(seg, x);
    }
    public static short X16_3$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.X16_3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X16_3$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.X16_3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St3_Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St3_Reserved1"));
    public static VarHandle AMD64_St3_Reserved1$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St3_Reserved1$VH;
    }
    public static short AMD64_St3_Reserved1$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St3_Reserved1$VH.get(seg);
    }
    public static void AMD64_St3_Reserved1$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St3_Reserved1$VH.set(seg, x);
    }
    public static short AMD64_St3_Reserved1$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St3_Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St3_Reserved1$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St3_Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St3_Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St3_Reserved2"));
    public static VarHandle AMD64_St3_Reserved2$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St3_Reserved2$VH;
    }
    public static int AMD64_St3_Reserved2$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St3_Reserved2$VH.get(seg);
    }
    public static void AMD64_St3_Reserved2$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St3_Reserved2$VH.set(seg, x);
    }
    public static int AMD64_St3_Reserved2$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St3_Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St3_Reserved2$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St3_Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X10$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X10"));
    public static VarHandle X10$VH() {
        return _ARM64EC_NT_CONTEXT.X10$VH;
    }
    public static long X10$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X10$VH.get(seg);
    }
    public static void X10$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X10$VH.set(seg, x);
    }
    public static long X10$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X10$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X10$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X10$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X17_0$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X17_0"));
    public static VarHandle X17_0$VH() {
        return _ARM64EC_NT_CONTEXT.X17_0$VH;
    }
    public static short X17_0$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.X17_0$VH.get(seg);
    }
    public static void X17_0$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.X17_0$VH.set(seg, x);
    }
    public static short X17_0$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.X17_0$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X17_0$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.X17_0$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St4_Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St4_Reserved1"));
    public static VarHandle AMD64_St4_Reserved1$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St4_Reserved1$VH;
    }
    public static short AMD64_St4_Reserved1$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St4_Reserved1$VH.get(seg);
    }
    public static void AMD64_St4_Reserved1$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St4_Reserved1$VH.set(seg, x);
    }
    public static short AMD64_St4_Reserved1$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St4_Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St4_Reserved1$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St4_Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St4_Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St4_Reserved2"));
    public static VarHandle AMD64_St4_Reserved2$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St4_Reserved2$VH;
    }
    public static int AMD64_St4_Reserved2$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St4_Reserved2$VH.get(seg);
    }
    public static void AMD64_St4_Reserved2$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St4_Reserved2$VH.set(seg, x);
    }
    public static int AMD64_St4_Reserved2$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St4_Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St4_Reserved2$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St4_Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X11$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X11"));
    public static VarHandle X11$VH() {
        return _ARM64EC_NT_CONTEXT.X11$VH;
    }
    public static long X11$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X11$VH.get(seg);
    }
    public static void X11$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X11$VH.set(seg, x);
    }
    public static long X11$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X11$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X11$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X11$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X17_1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X17_1"));
    public static VarHandle X17_1$VH() {
        return _ARM64EC_NT_CONTEXT.X17_1$VH;
    }
    public static short X17_1$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.X17_1$VH.get(seg);
    }
    public static void X17_1$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.X17_1$VH.set(seg, x);
    }
    public static short X17_1$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.X17_1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X17_1$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.X17_1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St5_Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St5_Reserved1"));
    public static VarHandle AMD64_St5_Reserved1$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St5_Reserved1$VH;
    }
    public static short AMD64_St5_Reserved1$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St5_Reserved1$VH.get(seg);
    }
    public static void AMD64_St5_Reserved1$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St5_Reserved1$VH.set(seg, x);
    }
    public static short AMD64_St5_Reserved1$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St5_Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St5_Reserved1$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St5_Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St5_Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St5_Reserved2"));
    public static VarHandle AMD64_St5_Reserved2$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St5_Reserved2$VH;
    }
    public static int AMD64_St5_Reserved2$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St5_Reserved2$VH.get(seg);
    }
    public static void AMD64_St5_Reserved2$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St5_Reserved2$VH.set(seg, x);
    }
    public static int AMD64_St5_Reserved2$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St5_Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St5_Reserved2$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St5_Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X12$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X12"));
    public static VarHandle X12$VH() {
        return _ARM64EC_NT_CONTEXT.X12$VH;
    }
    public static long X12$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X12$VH.get(seg);
    }
    public static void X12$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X12$VH.set(seg, x);
    }
    public static long X12$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X12$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X12$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X12$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X17_2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X17_2"));
    public static VarHandle X17_2$VH() {
        return _ARM64EC_NT_CONTEXT.X17_2$VH;
    }
    public static short X17_2$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.X17_2$VH.get(seg);
    }
    public static void X17_2$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.X17_2$VH.set(seg, x);
    }
    public static short X17_2$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.X17_2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X17_2$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.X17_2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St6_Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St6_Reserved1"));
    public static VarHandle AMD64_St6_Reserved1$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St6_Reserved1$VH;
    }
    public static short AMD64_St6_Reserved1$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St6_Reserved1$VH.get(seg);
    }
    public static void AMD64_St6_Reserved1$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St6_Reserved1$VH.set(seg, x);
    }
    public static short AMD64_St6_Reserved1$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St6_Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St6_Reserved1$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St6_Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St6_Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St6_Reserved2"));
    public static VarHandle AMD64_St6_Reserved2$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St6_Reserved2$VH;
    }
    public static int AMD64_St6_Reserved2$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St6_Reserved2$VH.get(seg);
    }
    public static void AMD64_St6_Reserved2$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St6_Reserved2$VH.set(seg, x);
    }
    public static int AMD64_St6_Reserved2$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St6_Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St6_Reserved2$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St6_Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X15$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X15"));
    public static VarHandle X15$VH() {
        return _ARM64EC_NT_CONTEXT.X15$VH;
    }
    public static long X15$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.X15$VH.get(seg);
    }
    public static void X15$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.X15$VH.set(seg, x);
    }
    public static long X15$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.X15$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X15$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.X15$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X17_3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X17_3"));
    public static VarHandle X17_3$VH() {
        return _ARM64EC_NT_CONTEXT.X17_3$VH;
    }
    public static short X17_3$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.X17_3$VH.get(seg);
    }
    public static void X17_3$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.X17_3$VH.set(seg, x);
    }
    public static short X17_3$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.X17_3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X17_3$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.X17_3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St7_Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St7_Reserved1"));
    public static VarHandle AMD64_St7_Reserved1$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St7_Reserved1$VH;
    }
    public static short AMD64_St7_Reserved1$get(MemorySegment seg) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St7_Reserved1$VH.get(seg);
    }
    public static void AMD64_St7_Reserved1$set( MemorySegment seg, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St7_Reserved1$VH.set(seg, x);
    }
    public static short AMD64_St7_Reserved1$get(MemorySegment seg, long index) {
        return (short)_ARM64EC_NT_CONTEXT.AMD64_St7_Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St7_Reserved1$set(MemorySegment seg, long index, short x) {
        _ARM64EC_NT_CONTEXT.AMD64_St7_Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_St7_Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_St7_Reserved2"));
    public static VarHandle AMD64_St7_Reserved2$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_St7_Reserved2$VH;
    }
    public static int AMD64_St7_Reserved2$get(MemorySegment seg) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St7_Reserved2$VH.get(seg);
    }
    public static void AMD64_St7_Reserved2$set( MemorySegment seg, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St7_Reserved2$VH.set(seg, x);
    }
    public static int AMD64_St7_Reserved2$get(MemorySegment seg, long index) {
        return (int)_ARM64EC_NT_CONTEXT.AMD64_St7_Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St7_Reserved2$set(MemorySegment seg, long index, int x) {
        _ARM64EC_NT_CONTEXT.AMD64_St7_Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment V$slice(MemorySegment seg) {
        return seg.asSlice(416, 256);
    }
    public static MemorySegment AMD64_XSAVE_FORMAT_Reserved4$slice(MemorySegment seg) {
        return seg.asSlice(672, 96);
    }
    public static MemorySegment AMD64_VectorRegister$slice(MemorySegment seg) {
        return seg.asSlice(768, 416);
    }
    static final VarHandle AMD64_VectorControl$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_VectorControl"));
    public static VarHandle AMD64_VectorControl$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_VectorControl$VH;
    }
    public static long AMD64_VectorControl$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_VectorControl$VH.get(seg);
    }
    public static void AMD64_VectorControl$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_VectorControl$VH.set(seg, x);
    }
    public static long AMD64_VectorControl$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_VectorControl$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_VectorControl$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_VectorControl$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_DebugControl$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_DebugControl"));
    public static VarHandle AMD64_DebugControl$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_DebugControl$VH;
    }
    public static long AMD64_DebugControl$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_DebugControl$VH.get(seg);
    }
    public static void AMD64_DebugControl$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_DebugControl$VH.set(seg, x);
    }
    public static long AMD64_DebugControl$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_DebugControl$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_DebugControl$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_DebugControl$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_LastBranchToRip$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_LastBranchToRip"));
    public static VarHandle AMD64_LastBranchToRip$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_LastBranchToRip$VH;
    }
    public static long AMD64_LastBranchToRip$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_LastBranchToRip$VH.get(seg);
    }
    public static void AMD64_LastBranchToRip$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_LastBranchToRip$VH.set(seg, x);
    }
    public static long AMD64_LastBranchToRip$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_LastBranchToRip$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_LastBranchToRip$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_LastBranchToRip$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_LastBranchFromRip$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_LastBranchFromRip"));
    public static VarHandle AMD64_LastBranchFromRip$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_LastBranchFromRip$VH;
    }
    public static long AMD64_LastBranchFromRip$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_LastBranchFromRip$VH.get(seg);
    }
    public static void AMD64_LastBranchFromRip$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_LastBranchFromRip$VH.set(seg, x);
    }
    public static long AMD64_LastBranchFromRip$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_LastBranchFromRip$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_LastBranchFromRip$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_LastBranchFromRip$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_LastExceptionToRip$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_LastExceptionToRip"));
    public static VarHandle AMD64_LastExceptionToRip$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_LastExceptionToRip$VH;
    }
    public static long AMD64_LastExceptionToRip$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_LastExceptionToRip$VH.get(seg);
    }
    public static void AMD64_LastExceptionToRip$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_LastExceptionToRip$VH.set(seg, x);
    }
    public static long AMD64_LastExceptionToRip$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_LastExceptionToRip$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_LastExceptionToRip$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_LastExceptionToRip$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle AMD64_LastExceptionFromRip$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("AMD64_LastExceptionFromRip"));
    public static VarHandle AMD64_LastExceptionFromRip$VH() {
        return _ARM64EC_NT_CONTEXT.AMD64_LastExceptionFromRip$VH;
    }
    public static long AMD64_LastExceptionFromRip$get(MemorySegment seg) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_LastExceptionFromRip$VH.get(seg);
    }
    public static void AMD64_LastExceptionFromRip$set( MemorySegment seg, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_LastExceptionFromRip$VH.set(seg, x);
    }
    public static long AMD64_LastExceptionFromRip$get(MemorySegment seg, long index) {
        return (long)_ARM64EC_NT_CONTEXT.AMD64_LastExceptionFromRip$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_LastExceptionFromRip$set(MemorySegment seg, long index, long x) {
        _ARM64EC_NT_CONTEXT.AMD64_LastExceptionFromRip$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


