// Generated by jextract

package opengl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$268 {

    static final FunctionDescriptor QueryUmsThreadInformation$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle QueryUmsThreadInformation$MH = RuntimeHelper.downcallHandle(
        "QueryUmsThreadInformation",
        constants$268.QueryUmsThreadInformation$FUNC
    );
    static final FunctionDescriptor SetUmsThreadInformation$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SetUmsThreadInformation$MH = RuntimeHelper.downcallHandle(
        "SetUmsThreadInformation",
        constants$268.SetUmsThreadInformation$FUNC
    );
    static final FunctionDescriptor DeleteUmsThreadContext$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle DeleteUmsThreadContext$MH = RuntimeHelper.downcallHandle(
        "DeleteUmsThreadContext",
        constants$268.DeleteUmsThreadContext$FUNC
    );
    static final FunctionDescriptor CreateUmsThreadContext$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CreateUmsThreadContext$MH = RuntimeHelper.downcallHandle(
        "CreateUmsThreadContext",
        constants$268.CreateUmsThreadContext$FUNC
    );
    static final FunctionDescriptor EnterUmsSchedulingMode$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle EnterUmsSchedulingMode$MH = RuntimeHelper.downcallHandle(
        "EnterUmsSchedulingMode",
        constants$268.EnterUmsSchedulingMode$FUNC
    );
    static final FunctionDescriptor GetUmsSystemThreadInformation$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetUmsSystemThreadInformation$MH = RuntimeHelper.downcallHandle(
        "GetUmsSystemThreadInformation",
        constants$268.GetUmsSystemThreadInformation$FUNC
    );
}


