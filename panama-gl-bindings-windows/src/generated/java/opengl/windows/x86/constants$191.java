// Generated by jextract

package opengl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$191 {

    static final FunctionDescriptor IsProcessorFeaturePresent$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle IsProcessorFeaturePresent$MH = RuntimeHelper.downcallHandle(
        "IsProcessorFeaturePresent",
        constants$191.IsProcessorFeaturePresent$FUNC
    );
    static final FunctionDescriptor GetProcessHandleCount$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetProcessHandleCount$MH = RuntimeHelper.downcallHandle(
        "GetProcessHandleCount",
        constants$191.GetProcessHandleCount$FUNC
    );
    static final FunctionDescriptor GetCurrentProcessorNumber$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle GetCurrentProcessorNumber$MH = RuntimeHelper.downcallHandle(
        "GetCurrentProcessorNumber",
        constants$191.GetCurrentProcessorNumber$FUNC
    );
    static final FunctionDescriptor SetThreadIdealProcessorEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetThreadIdealProcessorEx$MH = RuntimeHelper.downcallHandle(
        "SetThreadIdealProcessorEx",
        constants$191.SetThreadIdealProcessorEx$FUNC
    );
    static final FunctionDescriptor GetThreadIdealProcessorEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetThreadIdealProcessorEx$MH = RuntimeHelper.downcallHandle(
        "GetThreadIdealProcessorEx",
        constants$191.GetThreadIdealProcessorEx$FUNC
    );
    static final FunctionDescriptor GetCurrentProcessorNumberEx$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetCurrentProcessorNumberEx$MH = RuntimeHelper.downcallHandle(
        "GetCurrentProcessorNumberEx",
        constants$191.GetCurrentProcessorNumberEx$FUNC
    );
}


