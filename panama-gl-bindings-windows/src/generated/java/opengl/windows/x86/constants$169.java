// Generated by jextract

package opengl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$169 {

    static final FunctionDescriptor ReleaseSRWLockShared$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReleaseSRWLockShared$MH = RuntimeHelper.downcallHandle(
        "ReleaseSRWLockShared",
        constants$169.ReleaseSRWLockShared$FUNC
    );
    static final FunctionDescriptor AcquireSRWLockExclusive$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle AcquireSRWLockExclusive$MH = RuntimeHelper.downcallHandle(
        "AcquireSRWLockExclusive",
        constants$169.AcquireSRWLockExclusive$FUNC
    );
    static final FunctionDescriptor AcquireSRWLockShared$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle AcquireSRWLockShared$MH = RuntimeHelper.downcallHandle(
        "AcquireSRWLockShared",
        constants$169.AcquireSRWLockShared$FUNC
    );
    static final FunctionDescriptor TryAcquireSRWLockExclusive$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle TryAcquireSRWLockExclusive$MH = RuntimeHelper.downcallHandle(
        "TryAcquireSRWLockExclusive",
        constants$169.TryAcquireSRWLockExclusive$FUNC
    );
    static final FunctionDescriptor TryAcquireSRWLockShared$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle TryAcquireSRWLockShared$MH = RuntimeHelper.downcallHandle(
        "TryAcquireSRWLockShared",
        constants$169.TryAcquireSRWLockShared$FUNC
    );
    static final FunctionDescriptor InitializeCriticalSection$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle InitializeCriticalSection$MH = RuntimeHelper.downcallHandle(
        "InitializeCriticalSection",
        constants$169.InitializeCriticalSection$FUNC
    );
}


