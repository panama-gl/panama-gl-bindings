// Generated by jextract

package opengl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$181 {

    static final FunctionDescriptor GetCurrentProcess$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle GetCurrentProcess$MH = RuntimeHelper.downcallHandle(
        "GetCurrentProcess",
        constants$181.GetCurrentProcess$FUNC
    );
    static final FunctionDescriptor GetCurrentProcessId$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle GetCurrentProcessId$MH = RuntimeHelper.downcallHandle(
        "GetCurrentProcessId",
        constants$181.GetCurrentProcessId$FUNC
    );
    static final FunctionDescriptor ExitProcess$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle ExitProcess$MH = RuntimeHelper.downcallHandle(
        "ExitProcess",
        constants$181.ExitProcess$FUNC
    );
    static final FunctionDescriptor TerminateProcess$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle TerminateProcess$MH = RuntimeHelper.downcallHandle(
        "TerminateProcess",
        constants$181.TerminateProcess$FUNC
    );
    static final FunctionDescriptor GetExitCodeProcess$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetExitCodeProcess$MH = RuntimeHelper.downcallHandle(
        "GetExitCodeProcess",
        constants$181.GetExitCodeProcess$FUNC
    );
    static final FunctionDescriptor SwitchToThread$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle SwitchToThread$MH = RuntimeHelper.downcallHandle(
        "SwitchToThread",
        constants$181.SwitchToThread$FUNC
    );
}


