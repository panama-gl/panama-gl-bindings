// Generated by jextract

package opengl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$182 {

    static final FunctionDescriptor CreateThread$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CreateThread$MH = RuntimeHelper.downcallHandle(
        "CreateThread",
        constants$182.CreateThread$FUNC
    );
    static final FunctionDescriptor CreateRemoteThread$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CreateRemoteThread$MH = RuntimeHelper.downcallHandle(
        "CreateRemoteThread",
        constants$182.CreateRemoteThread$FUNC
    );
    static final FunctionDescriptor GetCurrentThread$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle GetCurrentThread$MH = RuntimeHelper.downcallHandle(
        "GetCurrentThread",
        constants$182.GetCurrentThread$FUNC
    );
    static final FunctionDescriptor GetCurrentThreadId$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle GetCurrentThreadId$MH = RuntimeHelper.downcallHandle(
        "GetCurrentThreadId",
        constants$182.GetCurrentThreadId$FUNC
    );
    static final FunctionDescriptor OpenThread$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle OpenThread$MH = RuntimeHelper.downcallHandle(
        "OpenThread",
        constants$182.OpenThread$FUNC
    );
    static final FunctionDescriptor SetThreadPriority$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SetThreadPriority$MH = RuntimeHelper.downcallHandle(
        "SetThreadPriority",
        constants$182.SetThreadPriority$FUNC
    );
}


