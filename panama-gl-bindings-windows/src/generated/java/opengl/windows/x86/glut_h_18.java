// Generated by jextract

package opengl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class glut_h_18 extends glut_h_17 {

    public static int ERROR_CORRUPT_LOG_OVERFULL() {
        return (int)794L;
    }
    public static int ERROR_CORRUPT_LOG_CORRUPTED() {
        return (int)795L;
    }
    public static int ERROR_CORRUPT_LOG_UNAVAILABLE() {
        return (int)796L;
    }
    public static int ERROR_CORRUPT_LOG_DELETED_FULL() {
        return (int)797L;
    }
    public static int ERROR_CORRUPT_LOG_CLEARED() {
        return (int)798L;
    }
    public static int ERROR_ORPHAN_NAME_EXHAUSTED() {
        return (int)799L;
    }
    public static int ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE() {
        return (int)800L;
    }
    public static int ERROR_CANNOT_GRANT_REQUESTED_OPLOCK() {
        return (int)801L;
    }
    public static int ERROR_CANNOT_BREAK_OPLOCK() {
        return (int)802L;
    }
    public static int ERROR_OPLOCK_HANDLE_CLOSED() {
        return (int)803L;
    }
    public static int ERROR_NO_ACE_CONDITION() {
        return (int)804L;
    }
    public static int ERROR_INVALID_ACE_CONDITION() {
        return (int)805L;
    }
    public static int ERROR_FILE_HANDLE_REVOKED() {
        return (int)806L;
    }
    public static int ERROR_IMAGE_AT_DIFFERENT_BASE() {
        return (int)807L;
    }
    public static int ERROR_ENCRYPTED_IO_NOT_POSSIBLE() {
        return (int)808L;
    }
    public static int ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS() {
        return (int)809L;
    }
    public static int ERROR_QUOTA_ACTIVITY() {
        return (int)810L;
    }
    public static int ERROR_HANDLE_REVOKED() {
        return (int)811L;
    }
    public static int ERROR_CALLBACK_INVOKE_INLINE() {
        return (int)812L;
    }
    public static int ERROR_CPU_SET_INVALID() {
        return (int)813L;
    }
    public static int ERROR_ENCLAVE_NOT_TERMINATED() {
        return (int)814L;
    }
    public static int ERROR_ENCLAVE_VIOLATION() {
        return (int)815L;
    }
    public static int ERROR_SERVER_TRANSPORT_CONFLICT() {
        return (int)816L;
    }
    public static int ERROR_CERTIFICATE_VALIDATION_PREFERENCE_CONFLICT() {
        return (int)817L;
    }
    public static int ERROR_FT_READ_FROM_COPY_FAILURE() {
        return (int)818L;
    }
    public static int ERROR_SECTION_DIRECT_MAP_ONLY() {
        return (int)819L;
    }
    public static int ERROR_EA_ACCESS_DENIED() {
        return (int)994L;
    }
    public static int ERROR_OPERATION_ABORTED() {
        return (int)995L;
    }
    public static int ERROR_IO_INCOMPLETE() {
        return (int)996L;
    }
    public static int ERROR_IO_PENDING() {
        return (int)997L;
    }
    public static int ERROR_NOACCESS() {
        return (int)998L;
    }
    public static int ERROR_SWAPERROR() {
        return (int)999L;
    }
    public static int ERROR_STACK_OVERFLOW() {
        return (int)1001L;
    }
    public static int ERROR_INVALID_MESSAGE() {
        return (int)1002L;
    }
    public static int ERROR_CAN_NOT_COMPLETE() {
        return (int)1003L;
    }
    public static int ERROR_INVALID_FLAGS() {
        return (int)1004L;
    }
    public static int ERROR_UNRECOGNIZED_VOLUME() {
        return (int)1005L;
    }
    public static int ERROR_FILE_INVALID() {
        return (int)1006L;
    }
    public static int ERROR_FULLSCREEN_MODE() {
        return (int)1007L;
    }
    public static int ERROR_NO_TOKEN() {
        return (int)1008L;
    }
    public static int ERROR_BADDB() {
        return (int)1009L;
    }
    public static int ERROR_BADKEY() {
        return (int)1010L;
    }
    public static int ERROR_CANTOPEN() {
        return (int)1011L;
    }
    public static int ERROR_CANTREAD() {
        return (int)1012L;
    }
    public static int ERROR_CANTWRITE() {
        return (int)1013L;
    }
    public static int ERROR_REGISTRY_RECOVERED() {
        return (int)1014L;
    }
    public static int ERROR_REGISTRY_CORRUPT() {
        return (int)1015L;
    }
    public static int ERROR_REGISTRY_IO_FAILED() {
        return (int)1016L;
    }
    public static int ERROR_NOT_REGISTRY_FILE() {
        return (int)1017L;
    }
    public static int ERROR_KEY_DELETED() {
        return (int)1018L;
    }
    public static int ERROR_NO_LOG_SPACE() {
        return (int)1019L;
    }
    public static int ERROR_KEY_HAS_CHILDREN() {
        return (int)1020L;
    }
    public static int ERROR_CHILD_MUST_BE_VOLATILE() {
        return (int)1021L;
    }
    public static int ERROR_NOTIFY_ENUM_DIR() {
        return (int)1022L;
    }
    public static int ERROR_DEPENDENT_SERVICES_RUNNING() {
        return (int)1051L;
    }
    public static int ERROR_INVALID_SERVICE_CONTROL() {
        return (int)1052L;
    }
    public static int ERROR_SERVICE_REQUEST_TIMEOUT() {
        return (int)1053L;
    }
    public static int ERROR_SERVICE_NO_THREAD() {
        return (int)1054L;
    }
    public static int ERROR_SERVICE_DATABASE_LOCKED() {
        return (int)1055L;
    }
    public static int ERROR_SERVICE_ALREADY_RUNNING() {
        return (int)1056L;
    }
    public static int ERROR_INVALID_SERVICE_ACCOUNT() {
        return (int)1057L;
    }
    public static int ERROR_SERVICE_DISABLED() {
        return (int)1058L;
    }
    public static int ERROR_CIRCULAR_DEPENDENCY() {
        return (int)1059L;
    }
    public static int ERROR_SERVICE_DOES_NOT_EXIST() {
        return (int)1060L;
    }
    public static int ERROR_SERVICE_CANNOT_ACCEPT_CTRL() {
        return (int)1061L;
    }
    public static int ERROR_SERVICE_NOT_ACTIVE() {
        return (int)1062L;
    }
    public static int ERROR_FAILED_SERVICE_CONTROLLER_CONNECT() {
        return (int)1063L;
    }
    public static int ERROR_EXCEPTION_IN_SERVICE() {
        return (int)1064L;
    }
    public static int ERROR_DATABASE_DOES_NOT_EXIST() {
        return (int)1065L;
    }
    public static int ERROR_SERVICE_SPECIFIC_ERROR() {
        return (int)1066L;
    }
    public static int ERROR_PROCESS_ABORTED() {
        return (int)1067L;
    }
    public static int ERROR_SERVICE_DEPENDENCY_FAIL() {
        return (int)1068L;
    }
    public static int ERROR_SERVICE_LOGON_FAILED() {
        return (int)1069L;
    }
    public static int ERROR_SERVICE_START_HANG() {
        return (int)1070L;
    }
    public static int ERROR_INVALID_SERVICE_LOCK() {
        return (int)1071L;
    }
    public static int ERROR_SERVICE_MARKED_FOR_DELETE() {
        return (int)1072L;
    }
    public static int ERROR_SERVICE_EXISTS() {
        return (int)1073L;
    }
    public static int ERROR_ALREADY_RUNNING_LKG() {
        return (int)1074L;
    }
    public static int ERROR_SERVICE_DEPENDENCY_DELETED() {
        return (int)1075L;
    }
    public static int ERROR_BOOT_ALREADY_ACCEPTED() {
        return (int)1076L;
    }
    public static int ERROR_SERVICE_NEVER_STARTED() {
        return (int)1077L;
    }
    public static int ERROR_DUPLICATE_SERVICE_NAME() {
        return (int)1078L;
    }
    public static int ERROR_DIFFERENT_SERVICE_ACCOUNT() {
        return (int)1079L;
    }
    public static int ERROR_CANNOT_DETECT_DRIVER_FAILURE() {
        return (int)1080L;
    }
    public static int ERROR_CANNOT_DETECT_PROCESS_ABORT() {
        return (int)1081L;
    }
    public static int ERROR_NO_RECOVERY_PROGRAM() {
        return (int)1082L;
    }
    public static int ERROR_SERVICE_NOT_IN_EXE() {
        return (int)1083L;
    }
    public static int ERROR_NOT_SAFEBOOT_SERVICE() {
        return (int)1084L;
    }
    public static int ERROR_END_OF_MEDIA() {
        return (int)1100L;
    }
    public static int ERROR_FILEMARK_DETECTED() {
        return (int)1101L;
    }
    public static int ERROR_BEGINNING_OF_MEDIA() {
        return (int)1102L;
    }
    public static int ERROR_SETMARK_DETECTED() {
        return (int)1103L;
    }
    public static int ERROR_NO_DATA_DETECTED() {
        return (int)1104L;
    }
    public static int ERROR_PARTITION_FAILURE() {
        return (int)1105L;
    }
    public static int ERROR_INVALID_BLOCK_LENGTH() {
        return (int)1106L;
    }
    public static int ERROR_DEVICE_NOT_PARTITIONED() {
        return (int)1107L;
    }
    public static int ERROR_UNABLE_TO_LOCK_MEDIA() {
        return (int)1108L;
    }
    public static int ERROR_UNABLE_TO_UNLOAD_MEDIA() {
        return (int)1109L;
    }
    public static int ERROR_MEDIA_CHANGED() {
        return (int)1110L;
    }
    public static int ERROR_BUS_RESET() {
        return (int)1111L;
    }
    public static int ERROR_NO_MEDIA_IN_DRIVE() {
        return (int)1112L;
    }
    public static int ERROR_NO_UNICODE_TRANSLATION() {
        return (int)1113L;
    }
    public static int ERROR_DLL_INIT_FAILED() {
        return (int)1114L;
    }
    public static int ERROR_SHUTDOWN_IN_PROGRESS() {
        return (int)1115L;
    }
    public static int ERROR_NO_SHUTDOWN_IN_PROGRESS() {
        return (int)1116L;
    }
    public static int ERROR_IO_DEVICE() {
        return (int)1117L;
    }
    public static int ERROR_SERIAL_NO_DEVICE() {
        return (int)1118L;
    }
    public static int ERROR_IRQ_BUSY() {
        return (int)1119L;
    }
    public static int ERROR_MORE_WRITES() {
        return (int)1120L;
    }
    public static int ERROR_COUNTER_TIMEOUT() {
        return (int)1121L;
    }
    public static int ERROR_FLOPPY_ID_MARK_NOT_FOUND() {
        return (int)1122L;
    }
    public static int ERROR_FLOPPY_WRONG_CYLINDER() {
        return (int)1123L;
    }
    public static int ERROR_FLOPPY_UNKNOWN_ERROR() {
        return (int)1124L;
    }
    public static int ERROR_FLOPPY_BAD_REGISTERS() {
        return (int)1125L;
    }
    public static int ERROR_DISK_RECALIBRATE_FAILED() {
        return (int)1126L;
    }
    public static int ERROR_DISK_OPERATION_FAILED() {
        return (int)1127L;
    }
    public static int ERROR_DISK_RESET_FAILED() {
        return (int)1128L;
    }
    public static int ERROR_EOM_OVERFLOW() {
        return (int)1129L;
    }
    public static int ERROR_NOT_ENOUGH_SERVER_MEMORY() {
        return (int)1130L;
    }
    public static int ERROR_POSSIBLE_DEADLOCK() {
        return (int)1131L;
    }
    public static int ERROR_MAPPED_ALIGNMENT() {
        return (int)1132L;
    }
    public static int ERROR_SET_POWER_STATE_VETOED() {
        return (int)1140L;
    }
    public static int ERROR_SET_POWER_STATE_FAILED() {
        return (int)1141L;
    }
    public static int ERROR_TOO_MANY_LINKS() {
        return (int)1142L;
    }
    public static int ERROR_OLD_WIN_VERSION() {
        return (int)1150L;
    }
    public static int ERROR_APP_WRONG_OS() {
        return (int)1151L;
    }
    public static int ERROR_SINGLE_INSTANCE_APP() {
        return (int)1152L;
    }
    public static int ERROR_RMODE_APP() {
        return (int)1153L;
    }
    public static int ERROR_INVALID_DLL() {
        return (int)1154L;
    }
    public static int ERROR_NO_ASSOCIATION() {
        return (int)1155L;
    }
    public static int ERROR_DDE_FAIL() {
        return (int)1156L;
    }
    public static int ERROR_DLL_NOT_FOUND() {
        return (int)1157L;
    }
    public static int ERROR_NO_MORE_USER_HANDLES() {
        return (int)1158L;
    }
    public static int ERROR_MESSAGE_SYNC_ONLY() {
        return (int)1159L;
    }
    public static int ERROR_SOURCE_ELEMENT_EMPTY() {
        return (int)1160L;
    }
    public static int ERROR_DESTINATION_ELEMENT_FULL() {
        return (int)1161L;
    }
    public static int ERROR_ILLEGAL_ELEMENT_ADDRESS() {
        return (int)1162L;
    }
    public static int ERROR_MAGAZINE_NOT_PRESENT() {
        return (int)1163L;
    }
    public static int ERROR_DEVICE_REINITIALIZATION_NEEDED() {
        return (int)1164L;
    }
    public static int ERROR_DEVICE_REQUIRES_CLEANING() {
        return (int)1165L;
    }
    public static int ERROR_DEVICE_DOOR_OPEN() {
        return (int)1166L;
    }
    public static int ERROR_DEVICE_NOT_CONNECTED() {
        return (int)1167L;
    }
    public static int ERROR_NOT_FOUND() {
        return (int)1168L;
    }
    public static int ERROR_NO_MATCH() {
        return (int)1169L;
    }
    public static int ERROR_SET_NOT_FOUND() {
        return (int)1170L;
    }
    public static int ERROR_POINT_NOT_FOUND() {
        return (int)1171L;
    }
    public static int ERROR_NO_TRACKING_SERVICE() {
        return (int)1172L;
    }
    public static int ERROR_NO_VOLUME_ID() {
        return (int)1173L;
    }
    public static int ERROR_UNABLE_TO_REMOVE_REPLACED() {
        return (int)1175L;
    }
    public static int ERROR_UNABLE_TO_MOVE_REPLACEMENT() {
        return (int)1176L;
    }
    public static int ERROR_UNABLE_TO_MOVE_REPLACEMENT_2() {
        return (int)1177L;
    }
    public static int ERROR_JOURNAL_DELETE_IN_PROGRESS() {
        return (int)1178L;
    }
    public static int ERROR_JOURNAL_NOT_ACTIVE() {
        return (int)1179L;
    }
    public static int ERROR_POTENTIAL_FILE_FOUND() {
        return (int)1180L;
    }
    public static int ERROR_JOURNAL_ENTRY_DELETED() {
        return (int)1181L;
    }
    public static int ERROR_PARTITION_TERMINATING() {
        return (int)1184L;
    }
    public static int ERROR_SHUTDOWN_IS_SCHEDULED() {
        return (int)1190L;
    }
    public static int ERROR_SHUTDOWN_USERS_LOGGED_ON() {
        return (int)1191L;
    }
    public static int ERROR_SHUTDOWN_DISKS_NOT_IN_MAINTENANCE_MODE() {
        return (int)1192L;
    }
    public static int ERROR_BAD_DEVICE() {
        return (int)1200L;
    }
    public static int ERROR_CONNECTION_UNAVAIL() {
        return (int)1201L;
    }
    public static int ERROR_DEVICE_ALREADY_REMEMBERED() {
        return (int)1202L;
    }
    public static int ERROR_NO_NET_OR_BAD_PATH() {
        return (int)1203L;
    }
    public static int ERROR_BAD_PROVIDER() {
        return (int)1204L;
    }
    public static int ERROR_CANNOT_OPEN_PROFILE() {
        return (int)1205L;
    }
    public static int ERROR_BAD_PROFILE() {
        return (int)1206L;
    }
    public static int ERROR_NOT_CONTAINER() {
        return (int)1207L;
    }
    public static int ERROR_EXTENDED_ERROR() {
        return (int)1208L;
    }
    public static int ERROR_INVALID_GROUPNAME() {
        return (int)1209L;
    }
    public static int ERROR_INVALID_COMPUTERNAME() {
        return (int)1210L;
    }
    public static int ERROR_INVALID_EVENTNAME() {
        return (int)1211L;
    }
    public static int ERROR_INVALID_DOMAINNAME() {
        return (int)1212L;
    }
    public static int ERROR_INVALID_SERVICENAME() {
        return (int)1213L;
    }
    public static int ERROR_INVALID_NETNAME() {
        return (int)1214L;
    }
    public static int ERROR_INVALID_SHARENAME() {
        return (int)1215L;
    }
    public static int ERROR_INVALID_PASSWORDNAME() {
        return (int)1216L;
    }
    public static int ERROR_INVALID_MESSAGENAME() {
        return (int)1217L;
    }
    public static int ERROR_INVALID_MESSAGEDEST() {
        return (int)1218L;
    }
    public static int ERROR_SESSION_CREDENTIAL_CONFLICT() {
        return (int)1219L;
    }
    public static int ERROR_REMOTE_SESSION_LIMIT_EXCEEDED() {
        return (int)1220L;
    }
    public static int ERROR_DUP_DOMAINNAME() {
        return (int)1221L;
    }
    public static int ERROR_NO_NETWORK() {
        return (int)1222L;
    }
    public static int ERROR_CANCELLED() {
        return (int)1223L;
    }
    public static int ERROR_USER_MAPPED_FILE() {
        return (int)1224L;
    }
    public static int ERROR_CONNECTION_REFUSED() {
        return (int)1225L;
    }
    public static int ERROR_GRACEFUL_DISCONNECT() {
        return (int)1226L;
    }
    public static int ERROR_ADDRESS_ALREADY_ASSOCIATED() {
        return (int)1227L;
    }
    public static int ERROR_ADDRESS_NOT_ASSOCIATED() {
        return (int)1228L;
    }
    public static int ERROR_CONNECTION_INVALID() {
        return (int)1229L;
    }
    public static int ERROR_CONNECTION_ACTIVE() {
        return (int)1230L;
    }
    public static int ERROR_NETWORK_UNREACHABLE() {
        return (int)1231L;
    }
    public static int ERROR_HOST_UNREACHABLE() {
        return (int)1232L;
    }
    public static int ERROR_PROTOCOL_UNREACHABLE() {
        return (int)1233L;
    }
    public static int ERROR_PORT_UNREACHABLE() {
        return (int)1234L;
    }
    public static int ERROR_REQUEST_ABORTED() {
        return (int)1235L;
    }
    public static int ERROR_CONNECTION_ABORTED() {
        return (int)1236L;
    }
    public static int ERROR_RETRY() {
        return (int)1237L;
    }
    public static int ERROR_CONNECTION_COUNT_LIMIT() {
        return (int)1238L;
    }
    public static int ERROR_LOGIN_TIME_RESTRICTION() {
        return (int)1239L;
    }
    public static int ERROR_LOGIN_WKSTA_RESTRICTION() {
        return (int)1240L;
    }
    public static int ERROR_INCORRECT_ADDRESS() {
        return (int)1241L;
    }
    public static int ERROR_ALREADY_REGISTERED() {
        return (int)1242L;
    }
    public static int ERROR_SERVICE_NOT_FOUND() {
        return (int)1243L;
    }
    public static int ERROR_NOT_AUTHENTICATED() {
        return (int)1244L;
    }
    public static int ERROR_NOT_LOGGED_ON() {
        return (int)1245L;
    }
    public static int ERROR_CONTINUE() {
        return (int)1246L;
    }
    public static int ERROR_ALREADY_INITIALIZED() {
        return (int)1247L;
    }
    public static int ERROR_NO_MORE_DEVICES() {
        return (int)1248L;
    }
    public static int ERROR_NO_SUCH_SITE() {
        return (int)1249L;
    }
    public static int ERROR_DOMAIN_CONTROLLER_EXISTS() {
        return (int)1250L;
    }
    public static int ERROR_ONLY_IF_CONNECTED() {
        return (int)1251L;
    }
    public static int ERROR_OVERRIDE_NOCHANGES() {
        return (int)1252L;
    }
    public static int ERROR_BAD_USER_PROFILE() {
        return (int)1253L;
    }
    public static int ERROR_NOT_SUPPORTED_ON_SBS() {
        return (int)1254L;
    }
    public static int ERROR_SERVER_SHUTDOWN_IN_PROGRESS() {
        return (int)1255L;
    }
    public static int ERROR_HOST_DOWN() {
        return (int)1256L;
    }
    public static int ERROR_NON_ACCOUNT_SID() {
        return (int)1257L;
    }
    public static int ERROR_NON_DOMAIN_SID() {
        return (int)1258L;
    }
    public static int ERROR_APPHELP_BLOCK() {
        return (int)1259L;
    }
    public static int ERROR_ACCESS_DISABLED_BY_POLICY() {
        return (int)1260L;
    }
    public static int ERROR_REG_NAT_CONSUMPTION() {
        return (int)1261L;
    }
    public static int ERROR_CSCSHARE_OFFLINE() {
        return (int)1262L;
    }
    public static int ERROR_PKINIT_FAILURE() {
        return (int)1263L;
    }
    public static int ERROR_SMARTCARD_SUBSYSTEM_FAILURE() {
        return (int)1264L;
    }
    public static int ERROR_DOWNGRADE_DETECTED() {
        return (int)1265L;
    }
    public static int ERROR_MACHINE_LOCKED() {
        return (int)1271L;
    }
    public static int ERROR_SMB_GUEST_LOGON_BLOCKED() {
        return (int)1272L;
    }
    public static int ERROR_CALLBACK_SUPPLIED_INVALID_DATA() {
        return (int)1273L;
    }
    public static int ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED() {
        return (int)1274L;
    }
    public static int ERROR_DRIVER_BLOCKED() {
        return (int)1275L;
    }
    public static int ERROR_INVALID_IMPORT_OF_NON_DLL() {
        return (int)1276L;
    }
    public static int ERROR_ACCESS_DISABLED_WEBBLADE() {
        return (int)1277L;
    }
    public static int ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER() {
        return (int)1278L;
    }
    public static int ERROR_RECOVERY_FAILURE() {
        return (int)1279L;
    }
    public static int ERROR_ALREADY_FIBER() {
        return (int)1280L;
    }
    public static int ERROR_ALREADY_THREAD() {
        return (int)1281L;
    }
    public static int ERROR_STACK_BUFFER_OVERRUN() {
        return (int)1282L;
    }
    public static int ERROR_PARAMETER_QUOTA_EXCEEDED() {
        return (int)1283L;
    }
    public static int ERROR_DEBUGGER_INACTIVE() {
        return (int)1284L;
    }
    public static int ERROR_DELAY_LOAD_FAILED() {
        return (int)1285L;
    }
    public static int ERROR_VDM_DISALLOWED() {
        return (int)1286L;
    }
    public static int ERROR_UNIDENTIFIED_ERROR() {
        return (int)1287L;
    }
    public static int ERROR_INVALID_CRUNTIME_PARAMETER() {
        return (int)1288L;
    }
    public static int ERROR_BEYOND_VDL() {
        return (int)1289L;
    }
    public static int ERROR_INCOMPATIBLE_SERVICE_SID_TYPE() {
        return (int)1290L;
    }
    public static int ERROR_DRIVER_PROCESS_TERMINATED() {
        return (int)1291L;
    }
    public static int ERROR_IMPLEMENTATION_LIMIT() {
        return (int)1292L;
    }
    public static int ERROR_PROCESS_IS_PROTECTED() {
        return (int)1293L;
    }
    public static int ERROR_SERVICE_NOTIFY_CLIENT_LAGGING() {
        return (int)1294L;
    }
    public static int ERROR_DISK_QUOTA_EXCEEDED() {
        return (int)1295L;
    }
    public static int ERROR_CONTENT_BLOCKED() {
        return (int)1296L;
    }
    public static int ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE() {
        return (int)1297L;
    }
    public static int ERROR_APP_HANG() {
        return (int)1298L;
    }
    public static int ERROR_INVALID_LABEL() {
        return (int)1299L;
    }
    public static int ERROR_NOT_ALL_ASSIGNED() {
        return (int)1300L;
    }
    public static int ERROR_SOME_NOT_MAPPED() {
        return (int)1301L;
    }
    public static int ERROR_NO_QUOTAS_FOR_ACCOUNT() {
        return (int)1302L;
    }
    public static int ERROR_LOCAL_USER_SESSION_KEY() {
        return (int)1303L;
    }
    public static int ERROR_NULL_LM_PASSWORD() {
        return (int)1304L;
    }
    public static int ERROR_UNKNOWN_REVISION() {
        return (int)1305L;
    }
    public static int ERROR_REVISION_MISMATCH() {
        return (int)1306L;
    }
    public static int ERROR_INVALID_OWNER() {
        return (int)1307L;
    }
    public static int ERROR_INVALID_PRIMARY_GROUP() {
        return (int)1308L;
    }
    public static int ERROR_NO_IMPERSONATION_TOKEN() {
        return (int)1309L;
    }
    public static int ERROR_CANT_DISABLE_MANDATORY() {
        return (int)1310L;
    }
    public static int ERROR_NO_LOGON_SERVERS() {
        return (int)1311L;
    }
    public static int ERROR_NO_SUCH_LOGON_SESSION() {
        return (int)1312L;
    }
    public static int ERROR_NO_SUCH_PRIVILEGE() {
        return (int)1313L;
    }
    public static int ERROR_PRIVILEGE_NOT_HELD() {
        return (int)1314L;
    }
    public static int ERROR_INVALID_ACCOUNT_NAME() {
        return (int)1315L;
    }
    public static int ERROR_USER_EXISTS() {
        return (int)1316L;
    }
    public static int ERROR_NO_SUCH_USER() {
        return (int)1317L;
    }
    public static int ERROR_GROUP_EXISTS() {
        return (int)1318L;
    }
    public static int ERROR_NO_SUCH_GROUP() {
        return (int)1319L;
    }
    public static int ERROR_MEMBER_IN_GROUP() {
        return (int)1320L;
    }
    public static int ERROR_MEMBER_NOT_IN_GROUP() {
        return (int)1321L;
    }
    public static int ERROR_LAST_ADMIN() {
        return (int)1322L;
    }
    public static int ERROR_WRONG_PASSWORD() {
        return (int)1323L;
    }
    public static int ERROR_ILL_FORMED_PASSWORD() {
        return (int)1324L;
    }
    public static int ERROR_PASSWORD_RESTRICTION() {
        return (int)1325L;
    }
    public static int ERROR_LOGON_FAILURE() {
        return (int)1326L;
    }
    public static int ERROR_ACCOUNT_RESTRICTION() {
        return (int)1327L;
    }
    public static int ERROR_INVALID_LOGON_HOURS() {
        return (int)1328L;
    }
    public static int ERROR_INVALID_WORKSTATION() {
        return (int)1329L;
    }
    public static int ERROR_PASSWORD_EXPIRED() {
        return (int)1330L;
    }
    public static int ERROR_ACCOUNT_DISABLED() {
        return (int)1331L;
    }
    public static int ERROR_NONE_MAPPED() {
        return (int)1332L;
    }
    public static int ERROR_TOO_MANY_LUIDS_REQUESTED() {
        return (int)1333L;
    }
    public static int ERROR_LUIDS_EXHAUSTED() {
        return (int)1334L;
    }
    public static int ERROR_INVALID_SUB_AUTHORITY() {
        return (int)1335L;
    }
    public static int ERROR_INVALID_ACL() {
        return (int)1336L;
    }
    public static int ERROR_INVALID_SID() {
        return (int)1337L;
    }
    public static int ERROR_INVALID_SECURITY_DESCR() {
        return (int)1338L;
    }
    public static int ERROR_BAD_INHERITANCE_ACL() {
        return (int)1340L;
    }
    public static int ERROR_SERVER_DISABLED() {
        return (int)1341L;
    }
    public static int ERROR_SERVER_NOT_DISABLED() {
        return (int)1342L;
    }
    public static int ERROR_INVALID_ID_AUTHORITY() {
        return (int)1343L;
    }
    public static int ERROR_ALLOTTED_SPACE_EXCEEDED() {
        return (int)1344L;
    }
    public static int ERROR_INVALID_GROUP_ATTRIBUTES() {
        return (int)1345L;
    }
    public static int ERROR_BAD_IMPERSONATION_LEVEL() {
        return (int)1346L;
    }
    public static int ERROR_CANT_OPEN_ANONYMOUS() {
        return (int)1347L;
    }
    public static int ERROR_BAD_VALIDATION_CLASS() {
        return (int)1348L;
    }
    public static int ERROR_BAD_TOKEN_TYPE() {
        return (int)1349L;
    }
    public static int ERROR_NO_SECURITY_ON_OBJECT() {
        return (int)1350L;
    }
    public static int ERROR_CANT_ACCESS_DOMAIN_INFO() {
        return (int)1351L;
    }
    public static int ERROR_INVALID_SERVER_STATE() {
        return (int)1352L;
    }
    public static int ERROR_INVALID_DOMAIN_STATE() {
        return (int)1353L;
    }
    public static int ERROR_INVALID_DOMAIN_ROLE() {
        return (int)1354L;
    }
    public static int ERROR_NO_SUCH_DOMAIN() {
        return (int)1355L;
    }
    public static int ERROR_DOMAIN_EXISTS() {
        return (int)1356L;
    }
    public static int ERROR_DOMAIN_LIMIT_EXCEEDED() {
        return (int)1357L;
    }
    public static int ERROR_INTERNAL_DB_CORRUPTION() {
        return (int)1358L;
    }
    public static int ERROR_INTERNAL_ERROR() {
        return (int)1359L;
    }
    public static int ERROR_GENERIC_NOT_MAPPED() {
        return (int)1360L;
    }
    public static int ERROR_BAD_DESCRIPTOR_FORMAT() {
        return (int)1361L;
    }
    public static int ERROR_NOT_LOGON_PROCESS() {
        return (int)1362L;
    }
    public static int ERROR_LOGON_SESSION_EXISTS() {
        return (int)1363L;
    }
    public static int ERROR_NO_SUCH_PACKAGE() {
        return (int)1364L;
    }
    public static int ERROR_BAD_LOGON_SESSION_STATE() {
        return (int)1365L;
    }
    public static int ERROR_LOGON_SESSION_COLLISION() {
        return (int)1366L;
    }
    public static int ERROR_INVALID_LOGON_TYPE() {
        return (int)1367L;
    }
    public static int ERROR_CANNOT_IMPERSONATE() {
        return (int)1368L;
    }
    public static int ERROR_RXACT_INVALID_STATE() {
        return (int)1369L;
    }
    public static int ERROR_RXACT_COMMIT_FAILURE() {
        return (int)1370L;
    }
    public static int ERROR_SPECIAL_ACCOUNT() {
        return (int)1371L;
    }
    public static int ERROR_SPECIAL_GROUP() {
        return (int)1372L;
    }
    public static int ERROR_SPECIAL_USER() {
        return (int)1373L;
    }
    public static int ERROR_MEMBERS_PRIMARY_GROUP() {
        return (int)1374L;
    }
    public static int ERROR_TOKEN_ALREADY_IN_USE() {
        return (int)1375L;
    }
    public static int ERROR_NO_SUCH_ALIAS() {
        return (int)1376L;
    }
    public static int ERROR_MEMBER_NOT_IN_ALIAS() {
        return (int)1377L;
    }
    public static int ERROR_MEMBER_IN_ALIAS() {
        return (int)1378L;
    }
    public static int ERROR_ALIAS_EXISTS() {
        return (int)1379L;
    }
    public static int ERROR_LOGON_NOT_GRANTED() {
        return (int)1380L;
    }
    public static int ERROR_TOO_MANY_SECRETS() {
        return (int)1381L;
    }
    public static int ERROR_SECRET_TOO_LONG() {
        return (int)1382L;
    }
    public static int ERROR_INTERNAL_DB_ERROR() {
        return (int)1383L;
    }
    public static int ERROR_TOO_MANY_CONTEXT_IDS() {
        return (int)1384L;
    }
    public static int ERROR_LOGON_TYPE_NOT_GRANTED() {
        return (int)1385L;
    }
    public static int ERROR_NT_CROSS_ENCRYPTION_REQUIRED() {
        return (int)1386L;
    }
    public static int ERROR_NO_SUCH_MEMBER() {
        return (int)1387L;
    }
    public static int ERROR_INVALID_MEMBER() {
        return (int)1388L;
    }
    public static int ERROR_TOO_MANY_SIDS() {
        return (int)1389L;
    }
    public static int ERROR_LM_CROSS_ENCRYPTION_REQUIRED() {
        return (int)1390L;
    }
    public static int ERROR_NO_INHERITANCE() {
        return (int)1391L;
    }
    public static int ERROR_FILE_CORRUPT() {
        return (int)1392L;
    }
    public static int ERROR_DISK_CORRUPT() {
        return (int)1393L;
    }
    public static int ERROR_NO_USER_SESSION_KEY() {
        return (int)1394L;
    }
    public static int ERROR_LICENSE_QUOTA_EXCEEDED() {
        return (int)1395L;
    }
    public static int ERROR_WRONG_TARGET_NAME() {
        return (int)1396L;
    }
    public static int ERROR_MUTUAL_AUTH_FAILED() {
        return (int)1397L;
    }
    public static int ERROR_TIME_SKEW() {
        return (int)1398L;
    }
    public static int ERROR_CURRENT_DOMAIN_NOT_ALLOWED() {
        return (int)1399L;
    }
    public static int ERROR_INVALID_WINDOW_HANDLE() {
        return (int)1400L;
    }
    public static int ERROR_INVALID_MENU_HANDLE() {
        return (int)1401L;
    }
    public static int ERROR_INVALID_CURSOR_HANDLE() {
        return (int)1402L;
    }
    public static int ERROR_INVALID_ACCEL_HANDLE() {
        return (int)1403L;
    }
    public static int ERROR_INVALID_HOOK_HANDLE() {
        return (int)1404L;
    }
    public static int ERROR_INVALID_DWP_HANDLE() {
        return (int)1405L;
    }
    public static int ERROR_TLW_WITH_WSCHILD() {
        return (int)1406L;
    }
    public static int ERROR_CANNOT_FIND_WND_CLASS() {
        return (int)1407L;
    }
    public static int ERROR_WINDOW_OF_OTHER_THREAD() {
        return (int)1408L;
    }
    public static int ERROR_HOTKEY_ALREADY_REGISTERED() {
        return (int)1409L;
    }
    public static int ERROR_CLASS_ALREADY_EXISTS() {
        return (int)1410L;
    }
    public static int ERROR_CLASS_DOES_NOT_EXIST() {
        return (int)1411L;
    }
    public static int ERROR_CLASS_HAS_WINDOWS() {
        return (int)1412L;
    }
    public static int ERROR_INVALID_INDEX() {
        return (int)1413L;
    }
    public static int ERROR_INVALID_ICON_HANDLE() {
        return (int)1414L;
    }
    public static int ERROR_PRIVATE_DIALOG_INDEX() {
        return (int)1415L;
    }
    public static int ERROR_LISTBOX_ID_NOT_FOUND() {
        return (int)1416L;
    }
    public static int ERROR_NO_WILDCARD_CHARACTERS() {
        return (int)1417L;
    }
    public static int ERROR_CLIPBOARD_NOT_OPEN() {
        return (int)1418L;
    }
    public static int ERROR_HOTKEY_NOT_REGISTERED() {
        return (int)1419L;
    }
    public static int ERROR_WINDOW_NOT_DIALOG() {
        return (int)1420L;
    }
    public static int ERROR_CONTROL_ID_NOT_FOUND() {
        return (int)1421L;
    }
    public static int ERROR_INVALID_COMBOBOX_MESSAGE() {
        return (int)1422L;
    }
    public static int ERROR_WINDOW_NOT_COMBOBOX() {
        return (int)1423L;
    }
    public static int ERROR_INVALID_EDIT_HEIGHT() {
        return (int)1424L;
    }
    public static int ERROR_DC_NOT_FOUND() {
        return (int)1425L;
    }
    public static int ERROR_INVALID_HOOK_FILTER() {
        return (int)1426L;
    }
    public static int ERROR_INVALID_FILTER_PROC() {
        return (int)1427L;
    }
    public static int ERROR_HOOK_NEEDS_HMOD() {
        return (int)1428L;
    }
    public static int ERROR_GLOBAL_ONLY_HOOK() {
        return (int)1429L;
    }
    public static int ERROR_JOURNAL_HOOK_SET() {
        return (int)1430L;
    }
    public static int ERROR_HOOK_NOT_INSTALLED() {
        return (int)1431L;
    }
    public static int ERROR_INVALID_LB_MESSAGE() {
        return (int)1432L;
    }
    public static int ERROR_SETCOUNT_ON_BAD_LB() {
        return (int)1433L;
    }
    public static int ERROR_LB_WITHOUT_TABSTOPS() {
        return (int)1434L;
    }
    public static int ERROR_DESTROY_OBJECT_OF_OTHER_THREAD() {
        return (int)1435L;
    }
    public static int ERROR_CHILD_WINDOW_MENU() {
        return (int)1436L;
    }
    public static int ERROR_NO_SYSTEM_MENU() {
        return (int)1437L;
    }
    public static int ERROR_INVALID_MSGBOX_STYLE() {
        return (int)1438L;
    }
    public static int ERROR_INVALID_SPI_VALUE() {
        return (int)1439L;
    }
    public static int ERROR_SCREEN_ALREADY_LOCKED() {
        return (int)1440L;
    }
    public static int ERROR_HWNDS_HAVE_DIFF_PARENT() {
        return (int)1441L;
    }
    public static int ERROR_NOT_CHILD_WINDOW() {
        return (int)1442L;
    }
    public static int ERROR_INVALID_GW_COMMAND() {
        return (int)1443L;
    }
    public static int ERROR_INVALID_THREAD_ID() {
        return (int)1444L;
    }
    public static int ERROR_NON_MDICHILD_WINDOW() {
        return (int)1445L;
    }
    public static int ERROR_POPUP_ALREADY_ACTIVE() {
        return (int)1446L;
    }
    public static int ERROR_NO_SCROLLBARS() {
        return (int)1447L;
    }
    public static int ERROR_INVALID_SCROLLBAR_RANGE() {
        return (int)1448L;
    }
    public static int ERROR_INVALID_SHOWWIN_COMMAND() {
        return (int)1449L;
    }
    public static int ERROR_NO_SYSTEM_RESOURCES() {
        return (int)1450L;
    }
    public static int ERROR_NONPAGED_SYSTEM_RESOURCES() {
        return (int)1451L;
    }
    public static int ERROR_PAGED_SYSTEM_RESOURCES() {
        return (int)1452L;
    }
    public static int ERROR_WORKING_SET_QUOTA() {
        return (int)1453L;
    }
    public static int ERROR_PAGEFILE_QUOTA() {
        return (int)1454L;
    }
    public static int ERROR_COMMITMENT_LIMIT() {
        return (int)1455L;
    }
    public static int ERROR_MENU_ITEM_NOT_FOUND() {
        return (int)1456L;
    }
    public static int ERROR_INVALID_KEYBOARD_HANDLE() {
        return (int)1457L;
    }
    public static int ERROR_HOOK_TYPE_NOT_ALLOWED() {
        return (int)1458L;
    }
    public static int ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION() {
        return (int)1459L;
    }
    public static int ERROR_TIMEOUT() {
        return (int)1460L;
    }
    public static int ERROR_INVALID_MONITOR_HANDLE() {
        return (int)1461L;
    }
    public static int ERROR_INCORRECT_SIZE() {
        return (int)1462L;
    }
    public static int ERROR_SYMLINK_CLASS_DISABLED() {
        return (int)1463L;
    }
    public static int ERROR_SYMLINK_NOT_SUPPORTED() {
        return (int)1464L;
    }
    public static int ERROR_XML_PARSE_ERROR() {
        return (int)1465L;
    }
    public static int ERROR_XMLDSIG_ERROR() {
        return (int)1466L;
    }
    public static int ERROR_RESTART_APPLICATION() {
        return (int)1467L;
    }
    public static int ERROR_WRONG_COMPARTMENT() {
        return (int)1468L;
    }
    public static int ERROR_AUTHIP_FAILURE() {
        return (int)1469L;
    }
    public static int ERROR_NO_NVRAM_RESOURCES() {
        return (int)1470L;
    }
    public static int ERROR_NOT_GUI_PROCESS() {
        return (int)1471L;
    }
    public static int ERROR_EVENTLOG_FILE_CORRUPT() {
        return (int)1500L;
    }
    public static int ERROR_EVENTLOG_CANT_START() {
        return (int)1501L;
    }
    public static int ERROR_LOG_FILE_FULL() {
        return (int)1502L;
    }
    public static int ERROR_EVENTLOG_FILE_CHANGED() {
        return (int)1503L;
    }
    public static int ERROR_CONTAINER_ASSIGNED() {
        return (int)1504L;
    }
    public static int ERROR_JOB_NO_CONTAINER() {
        return (int)1505L;
    }
    public static int ERROR_INVALID_TASK_NAME() {
        return (int)1550L;
    }
    public static int ERROR_INVALID_TASK_INDEX() {
        return (int)1551L;
    }
    public static int ERROR_THREAD_ALREADY_IN_TASK() {
        return (int)1552L;
    }
    public static int ERROR_INSTALL_SERVICE_FAILURE() {
        return (int)1601L;
    }
    public static int ERROR_INSTALL_USEREXIT() {
        return (int)1602L;
    }
    public static int ERROR_INSTALL_FAILURE() {
        return (int)1603L;
    }
    public static int ERROR_INSTALL_SUSPEND() {
        return (int)1604L;
    }
    public static int ERROR_UNKNOWN_PRODUCT() {
        return (int)1605L;
    }
    public static int ERROR_UNKNOWN_FEATURE() {
        return (int)1606L;
    }
    public static int ERROR_UNKNOWN_COMPONENT() {
        return (int)1607L;
    }
    public static int ERROR_UNKNOWN_PROPERTY() {
        return (int)1608L;
    }
    public static int ERROR_INVALID_HANDLE_STATE() {
        return (int)1609L;
    }
    public static int ERROR_BAD_CONFIGURATION() {
        return (int)1610L;
    }
    public static int ERROR_INDEX_ABSENT() {
        return (int)1611L;
    }
    public static int ERROR_INSTALL_SOURCE_ABSENT() {
        return (int)1612L;
    }
    public static int ERROR_INSTALL_PACKAGE_VERSION() {
        return (int)1613L;
    }
    public static int ERROR_PRODUCT_UNINSTALLED() {
        return (int)1614L;
    }
    public static int ERROR_BAD_QUERY_SYNTAX() {
        return (int)1615L;
    }
    public static int ERROR_INVALID_FIELD() {
        return (int)1616L;
    }
    public static int ERROR_DEVICE_REMOVED() {
        return (int)1617L;
    }
    public static int ERROR_INSTALL_ALREADY_RUNNING() {
        return (int)1618L;
    }
    public static int ERROR_INSTALL_PACKAGE_OPEN_FAILED() {
        return (int)1619L;
    }
    public static int ERROR_INSTALL_PACKAGE_INVALID() {
        return (int)1620L;
    }
    public static int ERROR_INSTALL_UI_FAILURE() {
        return (int)1621L;
    }
    public static int ERROR_INSTALL_LOG_FAILURE() {
        return (int)1622L;
    }
    public static int ERROR_INSTALL_LANGUAGE_UNSUPPORTED() {
        return (int)1623L;
    }
    public static int ERROR_INSTALL_TRANSFORM_FAILURE() {
        return (int)1624L;
    }
    public static int ERROR_INSTALL_PACKAGE_REJECTED() {
        return (int)1625L;
    }
    public static int ERROR_FUNCTION_NOT_CALLED() {
        return (int)1626L;
    }
    public static int ERROR_FUNCTION_FAILED() {
        return (int)1627L;
    }
    public static int ERROR_INVALID_TABLE() {
        return (int)1628L;
    }
    public static int ERROR_DATATYPE_MISMATCH() {
        return (int)1629L;
    }
    public static int ERROR_UNSUPPORTED_TYPE() {
        return (int)1630L;
    }
    public static int ERROR_CREATE_FAILED() {
        return (int)1631L;
    }
    public static int ERROR_INSTALL_TEMP_UNWRITABLE() {
        return (int)1632L;
    }
    public static int ERROR_INSTALL_PLATFORM_UNSUPPORTED() {
        return (int)1633L;
    }
    public static int ERROR_INSTALL_NOTUSED() {
        return (int)1634L;
    }
    public static int ERROR_PATCH_PACKAGE_OPEN_FAILED() {
        return (int)1635L;
    }
    public static int ERROR_PATCH_PACKAGE_INVALID() {
        return (int)1636L;
    }
    public static int ERROR_PATCH_PACKAGE_UNSUPPORTED() {
        return (int)1637L;
    }
    public static int ERROR_PRODUCT_VERSION() {
        return (int)1638L;
    }
    public static int ERROR_INVALID_COMMAND_LINE() {
        return (int)1639L;
    }
    public static int ERROR_INSTALL_REMOTE_DISALLOWED() {
        return (int)1640L;
    }
    public static int ERROR_SUCCESS_REBOOT_INITIATED() {
        return (int)1641L;
    }
    public static int ERROR_PATCH_TARGET_NOT_FOUND() {
        return (int)1642L;
    }
    public static int ERROR_PATCH_PACKAGE_REJECTED() {
        return (int)1643L;
    }
    public static int ERROR_INSTALL_TRANSFORM_REJECTED() {
        return (int)1644L;
    }
    public static int ERROR_INSTALL_REMOTE_PROHIBITED() {
        return (int)1645L;
    }
    public static int ERROR_PATCH_REMOVAL_UNSUPPORTED() {
        return (int)1646L;
    }
    public static int ERROR_UNKNOWN_PATCH() {
        return (int)1647L;
    }
    public static int ERROR_PATCH_NO_SEQUENCE() {
        return (int)1648L;
    }
    public static int ERROR_PATCH_REMOVAL_DISALLOWED() {
        return (int)1649L;
    }
    public static int ERROR_INVALID_PATCH_XML() {
        return (int)1650L;
    }
    public static int ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT() {
        return (int)1651L;
    }
    public static int ERROR_INSTALL_SERVICE_SAFEBOOT() {
        return (int)1652L;
    }
    public static int ERROR_FAIL_FAST_EXCEPTION() {
        return (int)1653L;
    }
    public static int ERROR_INSTALL_REJECTED() {
        return (int)1654L;
    }
    public static int ERROR_DYNAMIC_CODE_BLOCKED() {
        return (int)1655L;
    }
    public static int ERROR_NOT_SAME_OBJECT() {
        return (int)1656L;
    }
    public static int ERROR_STRICT_CFG_VIOLATION() {
        return (int)1657L;
    }
    public static int ERROR_SET_CONTEXT_DENIED() {
        return (int)1660L;
    }
    public static int ERROR_CROSS_PARTITION_VIOLATION() {
        return (int)1661L;
    }
    public static int ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT() {
        return (int)1662L;
    }
    public static int RPC_S_INVALID_STRING_BINDING() {
        return (int)1700L;
    }
    public static int RPC_S_WRONG_KIND_OF_BINDING() {
        return (int)1701L;
    }
    public static int RPC_S_INVALID_BINDING() {
        return (int)1702L;
    }
    public static int RPC_S_PROTSEQ_NOT_SUPPORTED() {
        return (int)1703L;
    }
    public static int RPC_S_INVALID_RPC_PROTSEQ() {
        return (int)1704L;
    }
    public static int RPC_S_INVALID_STRING_UUID() {
        return (int)1705L;
    }
    public static int RPC_S_INVALID_ENDPOINT_FORMAT() {
        return (int)1706L;
    }
    public static int RPC_S_INVALID_NET_ADDR() {
        return (int)1707L;
    }
    public static int RPC_S_NO_ENDPOINT_FOUND() {
        return (int)1708L;
    }
    public static int RPC_S_INVALID_TIMEOUT() {
        return (int)1709L;
    }
    public static int RPC_S_OBJECT_NOT_FOUND() {
        return (int)1710L;
    }
    public static int RPC_S_ALREADY_REGISTERED() {
        return (int)1711L;
    }
    public static int RPC_S_TYPE_ALREADY_REGISTERED() {
        return (int)1712L;
    }
    public static int RPC_S_ALREADY_LISTENING() {
        return (int)1713L;
    }
    public static int RPC_S_NO_PROTSEQS_REGISTERED() {
        return (int)1714L;
    }
    public static int RPC_S_NOT_LISTENING() {
        return (int)1715L;
    }
    public static int RPC_S_UNKNOWN_MGR_TYPE() {
        return (int)1716L;
    }
    public static int RPC_S_UNKNOWN_IF() {
        return (int)1717L;
    }
    public static int RPC_S_NO_BINDINGS() {
        return (int)1718L;
    }
    public static int RPC_S_NO_PROTSEQS() {
        return (int)1719L;
    }
    public static int RPC_S_CANT_CREATE_ENDPOINT() {
        return (int)1720L;
    }
    public static int RPC_S_OUT_OF_RESOURCES() {
        return (int)1721L;
    }
    public static int RPC_S_SERVER_UNAVAILABLE() {
        return (int)1722L;
    }
    public static int RPC_S_SERVER_TOO_BUSY() {
        return (int)1723L;
    }
    public static int RPC_S_INVALID_NETWORK_OPTIONS() {
        return (int)1724L;
    }
    public static int RPC_S_NO_CALL_ACTIVE() {
        return (int)1725L;
    }
    public static int RPC_S_CALL_FAILED() {
        return (int)1726L;
    }
    public static int RPC_S_CALL_FAILED_DNE() {
        return (int)1727L;
    }
    public static int RPC_S_PROTOCOL_ERROR() {
        return (int)1728L;
    }
    public static int RPC_S_PROXY_ACCESS_DENIED() {
        return (int)1729L;
    }
    public static int RPC_S_UNSUPPORTED_TRANS_SYN() {
        return (int)1730L;
    }
    public static int RPC_S_UNSUPPORTED_TYPE() {
        return (int)1732L;
    }
    public static int RPC_S_INVALID_TAG() {
        return (int)1733L;
    }
    public static int RPC_S_INVALID_BOUND() {
        return (int)1734L;
    }
    public static int RPC_S_NO_ENTRY_NAME() {
        return (int)1735L;
    }
    public static int RPC_S_INVALID_NAME_SYNTAX() {
        return (int)1736L;
    }
    public static int RPC_S_UNSUPPORTED_NAME_SYNTAX() {
        return (int)1737L;
    }
    public static int RPC_S_UUID_NO_ADDRESS() {
        return (int)1739L;
    }
    public static int RPC_S_DUPLICATE_ENDPOINT() {
        return (int)1740L;
    }
    public static int RPC_S_UNKNOWN_AUTHN_TYPE() {
        return (int)1741L;
    }
    public static int RPC_S_MAX_CALLS_TOO_SMALL() {
        return (int)1742L;
    }
    public static int RPC_S_STRING_TOO_LONG() {
        return (int)1743L;
    }
    public static int RPC_S_PROTSEQ_NOT_FOUND() {
        return (int)1744L;
    }
    public static int RPC_S_PROCNUM_OUT_OF_RANGE() {
        return (int)1745L;
    }
    public static int RPC_S_BINDING_HAS_NO_AUTH() {
        return (int)1746L;
    }
    public static int RPC_S_UNKNOWN_AUTHN_SERVICE() {
        return (int)1747L;
    }
    public static int RPC_S_UNKNOWN_AUTHN_LEVEL() {
        return (int)1748L;
    }
    public static int RPC_S_INVALID_AUTH_IDENTITY() {
        return (int)1749L;
    }
    public static int RPC_S_UNKNOWN_AUTHZ_SERVICE() {
        return (int)1750L;
    }
    public static int EPT_S_INVALID_ENTRY() {
        return (int)1751L;
    }
    public static int EPT_S_CANT_PERFORM_OP() {
        return (int)1752L;
    }
    public static int EPT_S_NOT_REGISTERED() {
        return (int)1753L;
    }
    public static int RPC_S_NOTHING_TO_EXPORT() {
        return (int)1754L;
    }
    public static int RPC_S_INCOMPLETE_NAME() {
        return (int)1755L;
    }
    public static int RPC_S_INVALID_VERS_OPTION() {
        return (int)1756L;
    }
    public static int RPC_S_NO_MORE_MEMBERS() {
        return (int)1757L;
    }
    public static int RPC_S_NOT_ALL_OBJS_UNEXPORTED() {
        return (int)1758L;
    }
    public static int RPC_S_INTERFACE_NOT_FOUND() {
        return (int)1759L;
    }
    public static int RPC_S_ENTRY_ALREADY_EXISTS() {
        return (int)1760L;
    }
    public static int RPC_S_ENTRY_NOT_FOUND() {
        return (int)1761L;
    }
    public static int RPC_S_NAME_SERVICE_UNAVAILABLE() {
        return (int)1762L;
    }
    public static int RPC_S_INVALID_NAF_ID() {
        return (int)1763L;
    }
    public static int RPC_S_CANNOT_SUPPORT() {
        return (int)1764L;
    }
    public static int RPC_S_NO_CONTEXT_AVAILABLE() {
        return (int)1765L;
    }
    public static int RPC_S_INTERNAL_ERROR() {
        return (int)1766L;
    }
    public static int RPC_S_ZERO_DIVIDE() {
        return (int)1767L;
    }
    public static int RPC_S_ADDRESS_ERROR() {
        return (int)1768L;
    }
    public static int RPC_S_FP_DIV_ZERO() {
        return (int)1769L;
    }
    public static int RPC_S_FP_UNDERFLOW() {
        return (int)1770L;
    }
    public static int RPC_S_FP_OVERFLOW() {
        return (int)1771L;
    }
    public static int RPC_X_NO_MORE_ENTRIES() {
        return (int)1772L;
    }
    public static int RPC_X_SS_CHAR_TRANS_OPEN_FAIL() {
        return (int)1773L;
    }
    public static int RPC_X_SS_CHAR_TRANS_SHORT_FILE() {
        return (int)1774L;
    }
    public static int RPC_X_SS_IN_NULL_CONTEXT() {
        return (int)1775L;
    }
    public static int RPC_X_SS_CONTEXT_DAMAGED() {
        return (int)1777L;
    }
    public static int RPC_X_SS_HANDLES_MISMATCH() {
        return (int)1778L;
    }
    public static int RPC_X_SS_CANNOT_GET_CALL_HANDLE() {
        return (int)1779L;
    }
    public static int RPC_X_NULL_REF_POINTER() {
        return (int)1780L;
    }
    public static int RPC_X_ENUM_VALUE_OUT_OF_RANGE() {
        return (int)1781L;
    }
    public static int RPC_X_BYTE_COUNT_TOO_SMALL() {
        return (int)1782L;
    }
    public static int RPC_X_BAD_STUB_DATA() {
        return (int)1783L;
    }
    public static int ERROR_INVALID_USER_BUFFER() {
        return (int)1784L;
    }
    public static int ERROR_UNRECOGNIZED_MEDIA() {
        return (int)1785L;
    }
    public static int ERROR_NO_TRUST_LSA_SECRET() {
        return (int)1786L;
    }
    public static int ERROR_NO_TRUST_SAM_ACCOUNT() {
        return (int)1787L;
    }
    public static int ERROR_TRUSTED_DOMAIN_FAILURE() {
        return (int)1788L;
    }
    public static int ERROR_TRUSTED_RELATIONSHIP_FAILURE() {
        return (int)1789L;
    }
    public static int ERROR_TRUST_FAILURE() {
        return (int)1790L;
    }
    public static int RPC_S_CALL_IN_PROGRESS() {
        return (int)1791L;
    }
    public static int ERROR_NETLOGON_NOT_STARTED() {
        return (int)1792L;
    }
    public static int ERROR_ACCOUNT_EXPIRED() {
        return (int)1793L;
    }
    public static int ERROR_REDIRECTOR_HAS_OPEN_HANDLES() {
        return (int)1794L;
    }
    public static int ERROR_PRINTER_DRIVER_ALREADY_INSTALLED() {
        return (int)1795L;
    }
    public static int ERROR_UNKNOWN_PORT() {
        return (int)1796L;
    }
    public static int ERROR_UNKNOWN_PRINTER_DRIVER() {
        return (int)1797L;
    }
    public static int ERROR_UNKNOWN_PRINTPROCESSOR() {
        return (int)1798L;
    }
    public static int ERROR_INVALID_SEPARATOR_FILE() {
        return (int)1799L;
    }
    public static int ERROR_INVALID_PRIORITY() {
        return (int)1800L;
    }
    public static int ERROR_INVALID_PRINTER_NAME() {
        return (int)1801L;
    }
    public static int ERROR_PRINTER_ALREADY_EXISTS() {
        return (int)1802L;
    }
    public static int ERROR_INVALID_PRINTER_COMMAND() {
        return (int)1803L;
    }
    public static int ERROR_INVALID_DATATYPE() {
        return (int)1804L;
    }
    public static int ERROR_INVALID_ENVIRONMENT() {
        return (int)1805L;
    }
    public static int RPC_S_NO_MORE_BINDINGS() {
        return (int)1806L;
    }
    public static int ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT() {
        return (int)1807L;
    }
    public static int ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT() {
        return (int)1808L;
    }
    public static int ERROR_NOLOGON_SERVER_TRUST_ACCOUNT() {
        return (int)1809L;
    }
    public static int ERROR_DOMAIN_TRUST_INCONSISTENT() {
        return (int)1810L;
    }
    public static int ERROR_SERVER_HAS_OPEN_HANDLES() {
        return (int)1811L;
    }
    public static int ERROR_RESOURCE_DATA_NOT_FOUND() {
        return (int)1812L;
    }
    public static int ERROR_RESOURCE_TYPE_NOT_FOUND() {
        return (int)1813L;
    }
    public static int ERROR_RESOURCE_NAME_NOT_FOUND() {
        return (int)1814L;
    }
    public static int ERROR_RESOURCE_LANG_NOT_FOUND() {
        return (int)1815L;
    }
    public static int ERROR_NOT_ENOUGH_QUOTA() {
        return (int)1816L;
    }
    public static int RPC_S_NO_INTERFACES() {
        return (int)1817L;
    }
    public static int RPC_S_CALL_CANCELLED() {
        return (int)1818L;
    }
    public static int RPC_S_BINDING_INCOMPLETE() {
        return (int)1819L;
    }
    public static int RPC_S_COMM_FAILURE() {
        return (int)1820L;
    }
    public static int RPC_S_UNSUPPORTED_AUTHN_LEVEL() {
        return (int)1821L;
    }
    public static int RPC_S_NO_PRINC_NAME() {
        return (int)1822L;
    }
    public static int RPC_S_NOT_RPC_ERROR() {
        return (int)1823L;
    }
    public static int RPC_S_UUID_LOCAL_ONLY() {
        return (int)1824L;
    }
    public static int RPC_S_SEC_PKG_ERROR() {
        return (int)1825L;
    }
    public static int RPC_S_NOT_CANCELLED() {
        return (int)1826L;
    }
    public static int RPC_X_INVALID_ES_ACTION() {
        return (int)1827L;
    }
    public static int RPC_X_WRONG_ES_VERSION() {
        return (int)1828L;
    }
    public static int RPC_X_WRONG_STUB_VERSION() {
        return (int)1829L;
    }
    public static int RPC_X_INVALID_PIPE_OBJECT() {
        return (int)1830L;
    }
    public static int RPC_X_WRONG_PIPE_ORDER() {
        return (int)1831L;
    }
    public static int RPC_X_WRONG_PIPE_VERSION() {
        return (int)1832L;
    }
    public static int RPC_S_COOKIE_AUTH_FAILED() {
        return (int)1833L;
    }
    public static int RPC_S_DO_NOT_DISTURB() {
        return (int)1834L;
    }
    public static int RPC_S_SYSTEM_HANDLE_COUNT_EXCEEDED() {
        return (int)1835L;
    }
    public static int RPC_S_SYSTEM_HANDLE_TYPE_MISMATCH() {
        return (int)1836L;
    }
    public static int RPC_S_GROUP_MEMBER_NOT_FOUND() {
        return (int)1898L;
    }
    public static int EPT_S_CANT_CREATE() {
        return (int)1899L;
    }
    public static int RPC_S_INVALID_OBJECT() {
        return (int)1900L;
    }
    public static int ERROR_INVALID_TIME() {
        return (int)1901L;
    }
    public static int ERROR_INVALID_FORM_NAME() {
        return (int)1902L;
    }
    public static int ERROR_INVALID_FORM_SIZE() {
        return (int)1903L;
    }
    public static int ERROR_ALREADY_WAITING() {
        return (int)1904L;
    }
    public static int ERROR_PRINTER_DELETED() {
        return (int)1905L;
    }
    public static int ERROR_INVALID_PRINTER_STATE() {
        return (int)1906L;
    }
    public static int ERROR_PASSWORD_MUST_CHANGE() {
        return (int)1907L;
    }
    public static int ERROR_DOMAIN_CONTROLLER_NOT_FOUND() {
        return (int)1908L;
    }
    public static int ERROR_ACCOUNT_LOCKED_OUT() {
        return (int)1909L;
    }
    public static int OR_INVALID_OXID() {
        return (int)1910L;
    }
    public static int OR_INVALID_OID() {
        return (int)1911L;
    }
    public static int OR_INVALID_SET() {
        return (int)1912L;
    }
    public static int RPC_S_SEND_INCOMPLETE() {
        return (int)1913L;
    }
    public static int RPC_S_INVALID_ASYNC_HANDLE() {
        return (int)1914L;
    }
    public static int RPC_S_INVALID_ASYNC_CALL() {
        return (int)1915L;
    }
    public static int RPC_X_PIPE_CLOSED() {
        return (int)1916L;
    }
    public static int RPC_X_PIPE_DISCIPLINE_ERROR() {
        return (int)1917L;
    }
    public static int RPC_X_PIPE_EMPTY() {
        return (int)1918L;
    }
    public static int ERROR_NO_SITENAME() {
        return (int)1919L;
    }
    public static int ERROR_CANT_ACCESS_FILE() {
        return (int)1920L;
    }
    public static int ERROR_CANT_RESOLVE_FILENAME() {
        return (int)1921L;
    }
    public static int RPC_S_ENTRY_TYPE_MISMATCH() {
        return (int)1922L;
    }
    public static int RPC_S_NOT_ALL_OBJS_EXPORTED() {
        return (int)1923L;
    }
    public static int RPC_S_INTERFACE_NOT_EXPORTED() {
        return (int)1924L;
    }
    public static int RPC_S_PROFILE_NOT_ADDED() {
        return (int)1925L;
    }
    public static int RPC_S_PRF_ELT_NOT_ADDED() {
        return (int)1926L;
    }
    public static int RPC_S_PRF_ELT_NOT_REMOVED() {
        return (int)1927L;
    }
    public static int RPC_S_GRP_ELT_NOT_ADDED() {
        return (int)1928L;
    }
    public static int RPC_S_GRP_ELT_NOT_REMOVED() {
        return (int)1929L;
    }
    public static int ERROR_KM_DRIVER_BLOCKED() {
        return (int)1930L;
    }
    public static int ERROR_CONTEXT_EXPIRED() {
        return (int)1931L;
    }
    public static int ERROR_PER_USER_TRUST_QUOTA_EXCEEDED() {
        return (int)1932L;
    }
    public static int ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED() {
        return (int)1933L;
    }
    public static int ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED() {
        return (int)1934L;
    }
    public static int ERROR_AUTHENTICATION_FIREWALL_FAILED() {
        return (int)1935L;
    }
    public static int ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED() {
        return (int)1936L;
    }
    public static int ERROR_NTLM_BLOCKED() {
        return (int)1937L;
    }
    public static int ERROR_PASSWORD_CHANGE_REQUIRED() {
        return (int)1938L;
    }
    public static int ERROR_LOST_MODE_LOGON_RESTRICTION() {
        return (int)1939L;
    }
    public static int ERROR_INVALID_PIXEL_FORMAT() {
        return (int)2000L;
    }
    public static int ERROR_BAD_DRIVER() {
        return (int)2001L;
    }
    public static int ERROR_INVALID_WINDOW_STYLE() {
        return (int)2002L;
    }
    public static int ERROR_METAFILE_NOT_SUPPORTED() {
        return (int)2003L;
    }
    public static int ERROR_TRANSFORM_NOT_SUPPORTED() {
        return (int)2004L;
    }
    public static int ERROR_CLIPPING_NOT_SUPPORTED() {
        return (int)2005L;
    }
    public static int ERROR_INVALID_CMM() {
        return (int)2010L;
    }
    public static int ERROR_INVALID_PROFILE() {
        return (int)2011L;
    }
    public static int ERROR_TAG_NOT_FOUND() {
        return (int)2012L;
    }
    public static int ERROR_TAG_NOT_PRESENT() {
        return (int)2013L;
    }
    public static int ERROR_DUPLICATE_TAG() {
        return (int)2014L;
    }
    public static int ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE() {
        return (int)2015L;
    }
    public static int ERROR_PROFILE_NOT_FOUND() {
        return (int)2016L;
    }
    public static int ERROR_INVALID_COLORSPACE() {
        return (int)2017L;
    }
    public static int ERROR_ICM_NOT_ENABLED() {
        return (int)2018L;
    }
    public static int ERROR_DELETING_ICM_XFORM() {
        return (int)2019L;
    }
    public static int ERROR_INVALID_TRANSFORM() {
        return (int)2020L;
    }
    public static int ERROR_COLORSPACE_MISMATCH() {
        return (int)2021L;
    }
    public static int ERROR_INVALID_COLORINDEX() {
        return (int)2022L;
    }
    public static int ERROR_PROFILE_DOES_NOT_MATCH_DEVICE() {
        return (int)2023L;
    }
    public static int ERROR_CONNECTED_OTHER_PASSWORD() {
        return (int)2108L;
    }
    public static int ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT() {
        return (int)2109L;
    }
    public static int ERROR_BAD_USERNAME() {
        return (int)2202L;
    }
    public static int ERROR_NOT_CONNECTED() {
        return (int)2250L;
    }
    public static int ERROR_OPEN_FILES() {
        return (int)2401L;
    }
    public static int ERROR_ACTIVE_CONNECTIONS() {
        return (int)2402L;
    }
    public static int ERROR_DEVICE_IN_USE() {
        return (int)2404L;
    }
    public static int ERROR_UNKNOWN_PRINT_MONITOR() {
        return (int)3000L;
    }
    public static int ERROR_PRINTER_DRIVER_IN_USE() {
        return (int)3001L;
    }
    public static int ERROR_SPOOL_FILE_NOT_FOUND() {
        return (int)3002L;
    }
    public static int ERROR_SPL_NO_STARTDOC() {
        return (int)3003L;
    }
    public static int ERROR_SPL_NO_ADDJOB() {
        return (int)3004L;
    }
    public static int ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED() {
        return (int)3005L;
    }
    public static int ERROR_PRINT_MONITOR_ALREADY_INSTALLED() {
        return (int)3006L;
    }
    public static int ERROR_INVALID_PRINT_MONITOR() {
        return (int)3007L;
    }
    public static int ERROR_PRINT_MONITOR_IN_USE() {
        return (int)3008L;
    }
    public static int ERROR_PRINTER_HAS_JOBS_QUEUED() {
        return (int)3009L;
    }
    public static int ERROR_SUCCESS_REBOOT_REQUIRED() {
        return (int)3010L;
    }
    public static int ERROR_SUCCESS_RESTART_REQUIRED() {
        return (int)3011L;
    }
    public static int ERROR_PRINTER_NOT_FOUND() {
        return (int)3012L;
    }
    public static int ERROR_PRINTER_DRIVER_WARNED() {
        return (int)3013L;
    }
    public static int ERROR_PRINTER_DRIVER_BLOCKED() {
        return (int)3014L;
    }
    public static int ERROR_PRINTER_DRIVER_PACKAGE_IN_USE() {
        return (int)3015L;
    }
    public static int ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND() {
        return (int)3016L;
    }
    public static int ERROR_FAIL_REBOOT_REQUIRED() {
        return (int)3017L;
    }
    public static int ERROR_FAIL_REBOOT_INITIATED() {
        return (int)3018L;
    }
    public static int ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED() {
        return (int)3019L;
    }
    public static int ERROR_PRINT_JOB_RESTART_REQUIRED() {
        return (int)3020L;
    }
    public static int ERROR_INVALID_PRINTER_DRIVER_MANIFEST() {
        return (int)3021L;
    }
    public static int ERROR_PRINTER_NOT_SHAREABLE() {
        return (int)3022L;
    }
    public static int ERROR_REQUEST_PAUSED() {
        return (int)3050L;
    }
    public static int ERROR_APPEXEC_CONDITION_NOT_SATISFIED() {
        return (int)3060L;
    }
    public static int ERROR_APPEXEC_HANDLE_INVALIDATED() {
        return (int)3061L;
    }
    public static int ERROR_APPEXEC_INVALID_HOST_GENERATION() {
        return (int)3062L;
    }
    public static int ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION() {
        return (int)3063L;
    }
    public static int ERROR_APPEXEC_INVALID_HOST_STATE() {
        return (int)3064L;
    }
    public static int ERROR_APPEXEC_NO_DONOR() {
        return (int)3065L;
    }
    public static int ERROR_APPEXEC_HOST_ID_MISMATCH() {
        return (int)3066L;
    }
    public static int ERROR_APPEXEC_UNKNOWN_USER() {
        return (int)3067L;
    }
    public static int ERROR_APPEXEC_APP_COMPAT_BLOCK() {
        return (int)3068L;
    }
    public static int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT() {
        return (int)3069L;
    }
    public static int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_TERMINATION() {
        return (int)3070L;
    }
    public static int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_LICENSING() {
        return (int)3071L;
    }
    public static int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_RESOURCES() {
        return (int)3072L;
    }
    public static int ERROR_VRF_VOLATILE_CFG_AND_IO_ENABLED() {
        return (int)3080L;
    }
    public static int ERROR_VRF_VOLATILE_NOT_STOPPABLE() {
        return (int)3081L;
    }
    public static int ERROR_VRF_VOLATILE_SAFE_MODE() {
        return (int)3082L;
    }
    public static int ERROR_VRF_VOLATILE_NOT_RUNNABLE_SYSTEM() {
        return (int)3083L;
    }
    public static int ERROR_VRF_VOLATILE_NOT_SUPPORTED_RULECLASS() {
        return (int)3084L;
    }
    public static int ERROR_VRF_VOLATILE_PROTECTED_DRIVER() {
        return (int)3085L;
    }
    public static int ERROR_VRF_VOLATILE_NMI_REGISTERED() {
        return (int)3086L;
    }
    public static int ERROR_VRF_VOLATILE_SETTINGS_CONFLICT() {
        return (int)3087L;
    }
    public static int ERROR_DIF_IOCALLBACK_NOT_REPLACED() {
        return (int)3190L;
    }
    public static int ERROR_DIF_LIVEDUMP_LIMIT_EXCEEDED() {
        return (int)3191L;
    }
    public static int ERROR_DIF_VOLATILE_SECTION_NOT_LOCKED() {
        return (int)3192L;
    }
    public static int ERROR_DIF_VOLATILE_DRIVER_HOTPATCHED() {
        return (int)3193L;
    }
    public static int ERROR_DIF_VOLATILE_INVALID_INFO() {
        return (int)3194L;
    }
    public static int ERROR_DIF_VOLATILE_DRIVER_IS_NOT_RUNNING() {
        return (int)3195L;
    }
    public static int ERROR_DIF_VOLATILE_PLUGIN_IS_NOT_RUNNING() {
        return (int)3196L;
    }
    public static int ERROR_DIF_VOLATILE_PLUGIN_CHANGE_NOT_ALLOWED() {
        return (int)3197L;
    }
    public static int ERROR_DIF_VOLATILE_NOT_ALLOWED() {
        return (int)3198L;
    }
    public static int ERROR_DIF_BINDING_API_NOT_FOUND() {
        return (int)3199L;
    }
    public static int ERROR_IO_REISSUE_AS_CACHED() {
        return (int)3950L;
    }
    public static int ERROR_WINS_INTERNAL() {
        return (int)4000L;
    }
    public static int ERROR_CAN_NOT_DEL_LOCAL_WINS() {
        return (int)4001L;
    }
    public static int ERROR_STATIC_INIT() {
        return (int)4002L;
    }
    public static int ERROR_INC_BACKUP() {
        return (int)4003L;
    }
    public static int ERROR_FULL_BACKUP() {
        return (int)4004L;
    }
    public static int ERROR_REC_NON_EXISTENT() {
        return (int)4005L;
    }
    public static int ERROR_RPL_NOT_ALLOWED() {
        return (int)4006L;
    }
    public static int PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED() {
        return (int)4050L;
    }
    public static int PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO() {
        return (int)4051L;
    }
    public static int PEERDIST_ERROR_MISSING_DATA() {
        return (int)4052L;
    }
    public static int PEERDIST_ERROR_NO_MORE() {
        return (int)4053L;
    }
    public static int PEERDIST_ERROR_NOT_INITIALIZED() {
        return (int)4054L;
    }
    public static int PEERDIST_ERROR_ALREADY_INITIALIZED() {
        return (int)4055L;
    }
    public static int PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS() {
        return (int)4056L;
    }
    public static int PEERDIST_ERROR_INVALIDATED() {
        return (int)4057L;
    }
    public static int PEERDIST_ERROR_ALREADY_EXISTS() {
        return (int)4058L;
    }
    public static int PEERDIST_ERROR_OPERATION_NOTFOUND() {
        return (int)4059L;
    }
    public static int PEERDIST_ERROR_ALREADY_COMPLETED() {
        return (int)4060L;
    }
    public static int PEERDIST_ERROR_OUT_OF_BOUNDS() {
        return (int)4061L;
    }
    public static int PEERDIST_ERROR_VERSION_UNSUPPORTED() {
        return (int)4062L;
    }
    public static int PEERDIST_ERROR_INVALID_CONFIGURATION() {
        return (int)4063L;
    }
    public static int PEERDIST_ERROR_NOT_LICENSED() {
        return (int)4064L;
    }
    public static int PEERDIST_ERROR_SERVICE_UNAVAILABLE() {
        return (int)4065L;
    }
    public static int PEERDIST_ERROR_TRUST_FAILURE() {
        return (int)4066L;
    }
    public static int ERROR_DHCP_ADDRESS_CONFLICT() {
        return (int)4100L;
    }
    public static int ERROR_WMI_GUID_NOT_FOUND() {
        return (int)4200L;
    }
    public static int ERROR_WMI_INSTANCE_NOT_FOUND() {
        return (int)4201L;
    }
    public static int ERROR_WMI_ITEMID_NOT_FOUND() {
        return (int)4202L;
    }
    public static int ERROR_WMI_TRY_AGAIN() {
        return (int)4203L;
    }
    public static int ERROR_WMI_DP_NOT_FOUND() {
        return (int)4204L;
    }
    public static int ERROR_WMI_UNRESOLVED_INSTANCE_REF() {
        return (int)4205L;
    }
    public static int ERROR_WMI_ALREADY_ENABLED() {
        return (int)4206L;
    }
    public static int ERROR_WMI_GUID_DISCONNECTED() {
        return (int)4207L;
    }
    public static int ERROR_WMI_SERVER_UNAVAILABLE() {
        return (int)4208L;
    }
    public static int ERROR_WMI_DP_FAILED() {
        return (int)4209L;
    }
    public static int ERROR_WMI_INVALID_MOF() {
        return (int)4210L;
    }
    public static int ERROR_WMI_INVALID_REGINFO() {
        return (int)4211L;
    }
    public static int ERROR_WMI_ALREADY_DISABLED() {
        return (int)4212L;
    }
    public static int ERROR_WMI_READ_ONLY() {
        return (int)4213L;
    }
    public static int ERROR_WMI_SET_FAILURE() {
        return (int)4214L;
    }
    public static int ERROR_NOT_APPCONTAINER() {
        return (int)4250L;
    }
    public static int ERROR_APPCONTAINER_REQUIRED() {
        return (int)4251L;
    }
    public static int ERROR_NOT_SUPPORTED_IN_APPCONTAINER() {
        return (int)4252L;
    }
    public static int ERROR_INVALID_PACKAGE_SID_LENGTH() {
        return (int)4253L;
    }
    public static int ERROR_INVALID_MEDIA() {
        return (int)4300L;
    }
    public static int ERROR_INVALID_LIBRARY() {
        return (int)4301L;
    }
    public static int ERROR_INVALID_MEDIA_POOL() {
        return (int)4302L;
    }
    public static int ERROR_DRIVE_MEDIA_MISMATCH() {
        return (int)4303L;
    }
    public static int ERROR_MEDIA_OFFLINE() {
        return (int)4304L;
    }
    public static int ERROR_LIBRARY_OFFLINE() {
        return (int)4305L;
    }
    public static int ERROR_EMPTY() {
        return (int)4306L;
    }
    public static int ERROR_NOT_EMPTY() {
        return (int)4307L;
    }
    public static int ERROR_MEDIA_UNAVAILABLE() {
        return (int)4308L;
    }
    public static int ERROR_RESOURCE_DISABLED() {
        return (int)4309L;
    }
    public static int ERROR_INVALID_CLEANER() {
        return (int)4310L;
    }
    public static int ERROR_UNABLE_TO_CLEAN() {
        return (int)4311L;
    }
    public static int ERROR_OBJECT_NOT_FOUND() {
        return (int)4312L;
    }
    public static int ERROR_DATABASE_FAILURE() {
        return (int)4313L;
    }
    public static int ERROR_DATABASE_FULL() {
        return (int)4314L;
    }
    public static int ERROR_MEDIA_INCOMPATIBLE() {
        return (int)4315L;
    }
    public static int ERROR_RESOURCE_NOT_PRESENT() {
        return (int)4316L;
    }
    public static int ERROR_INVALID_OPERATION() {
        return (int)4317L;
    }
    public static int ERROR_MEDIA_NOT_AVAILABLE() {
        return (int)4318L;
    }
    public static int ERROR_DEVICE_NOT_AVAILABLE() {
        return (int)4319L;
    }
    public static int ERROR_REQUEST_REFUSED() {
        return (int)4320L;
    }
    public static int ERROR_INVALID_DRIVE_OBJECT() {
        return (int)4321L;
    }
    public static int ERROR_LIBRARY_FULL() {
        return (int)4322L;
    }
    public static int ERROR_MEDIUM_NOT_ACCESSIBLE() {
        return (int)4323L;
    }
    public static int ERROR_UNABLE_TO_LOAD_MEDIUM() {
        return (int)4324L;
    }
    public static int ERROR_UNABLE_TO_INVENTORY_DRIVE() {
        return (int)4325L;
    }
    public static int ERROR_UNABLE_TO_INVENTORY_SLOT() {
        return (int)4326L;
    }
    public static int ERROR_UNABLE_TO_INVENTORY_TRANSPORT() {
        return (int)4327L;
    }
    public static int ERROR_TRANSPORT_FULL() {
        return (int)4328L;
    }
    public static int ERROR_CONTROLLING_IEPORT() {
        return (int)4329L;
    }
    public static int ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA() {
        return (int)4330L;
    }
    public static int ERROR_CLEANER_SLOT_SET() {
        return (int)4331L;
    }
    public static int ERROR_CLEANER_SLOT_NOT_SET() {
        return (int)4332L;
    }
    public static int ERROR_CLEANER_CARTRIDGE_SPENT() {
        return (int)4333L;
    }
    public static int ERROR_UNEXPECTED_OMID() {
        return (int)4334L;
    }
    public static int ERROR_CANT_DELETE_LAST_ITEM() {
        return (int)4335L;
    }
    public static int ERROR_MESSAGE_EXCEEDS_MAX_SIZE() {
        return (int)4336L;
    }
    public static int ERROR_VOLUME_CONTAINS_SYS_FILES() {
        return (int)4337L;
    }
    public static int ERROR_INDIGENOUS_TYPE() {
        return (int)4338L;
    }
    public static int ERROR_NO_SUPPORTING_DRIVES() {
        return (int)4339L;
    }
    public static int ERROR_CLEANER_CARTRIDGE_INSTALLED() {
        return (int)4340L;
    }
    public static int ERROR_IEPORT_FULL() {
        return (int)4341L;
    }
    public static int ERROR_FILE_OFFLINE() {
        return (int)4350L;
    }
    public static int ERROR_REMOTE_STORAGE_NOT_ACTIVE() {
        return (int)4351L;
    }
    public static int ERROR_REMOTE_STORAGE_MEDIA_ERROR() {
        return (int)4352L;
    }
    public static int ERROR_NOT_A_REPARSE_POINT() {
        return (int)4390L;
    }
    public static int ERROR_REPARSE_ATTRIBUTE_CONFLICT() {
        return (int)4391L;
    }
    public static int ERROR_INVALID_REPARSE_DATA() {
        return (int)4392L;
    }
    public static int ERROR_REPARSE_TAG_INVALID() {
        return (int)4393L;
    }
    public static int ERROR_REPARSE_TAG_MISMATCH() {
        return (int)4394L;
    }
    public static int ERROR_REPARSE_POINT_ENCOUNTERED() {
        return (int)4395L;
    }
    public static int ERROR_APP_DATA_NOT_FOUND() {
        return (int)4400L;
    }
    public static int ERROR_APP_DATA_EXPIRED() {
        return (int)4401L;
    }
    public static int ERROR_APP_DATA_CORRUPT() {
        return (int)4402L;
    }
    public static int ERROR_APP_DATA_LIMIT_EXCEEDED() {
        return (int)4403L;
    }
    public static int ERROR_APP_DATA_REBOOT_REQUIRED() {
        return (int)4404L;
    }
    public static int ERROR_SECUREBOOT_ROLLBACK_DETECTED() {
        return (int)4420L;
    }
    public static int ERROR_SECUREBOOT_POLICY_VIOLATION() {
        return (int)4421L;
    }
    public static int ERROR_SECUREBOOT_INVALID_POLICY() {
        return (int)4422L;
    }
    public static int ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND() {
        return (int)4423L;
    }
    public static int ERROR_SECUREBOOT_POLICY_NOT_SIGNED() {
        return (int)4424L;
    }
    public static int ERROR_SECUREBOOT_NOT_ENABLED() {
        return (int)4425L;
    }
    public static int ERROR_SECUREBOOT_FILE_REPLACED() {
        return (int)4426L;
    }
    public static int ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED() {
        return (int)4427L;
    }
    public static int ERROR_SECUREBOOT_POLICY_UNKNOWN() {
        return (int)4428L;
    }
    public static int ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION() {
        return (int)4429L;
    }
    public static int ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH() {
        return (int)4430L;
    }
    public static int ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED() {
        return (int)4431L;
    }
    public static int ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH() {
        return (int)4432L;
    }
    public static int ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING() {
        return (int)4433L;
    }
    public static int ERROR_SECUREBOOT_NOT_BASE_POLICY() {
        return (int)4434L;
    }
    public static int ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY() {
        return (int)4435L;
    }
    public static int ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED() {
        return (int)4440L;
    }
    public static int ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED() {
        return (int)4441L;
    }
    public static int ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED() {
        return (int)4442L;
    }
    public static int ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED() {
        return (int)4443L;
    }
    public static int ERROR_ALREADY_HAS_STREAM_ID() {
        return (int)4444L;
    }
    public static int ERROR_SMR_GARBAGE_COLLECTION_REQUIRED() {
        return (int)4445L;
    }
    public static int ERROR_WOF_WIM_HEADER_CORRUPT() {
        return (int)4446L;
    }
    public static int ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT() {
        return (int)4447L;
    }
    public static int ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT() {
        return (int)4448L;
    }
    public static int ERROR_OBJECT_IS_IMMUTABLE() {
        return (int)4449L;
    }
    public static int ERROR_VOLUME_NOT_SIS_ENABLED() {
        return (int)4500L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED() {
        return (int)4550L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION() {
        return (int)4551L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_INVALID_POLICY() {
        return (int)4552L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED() {
        return (int)4553L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES() {
        return (int)4554L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED() {
        return (int)4555L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_REPUTATION_MALICIOUS() {
        return (int)4556L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_REPUTATION_PUA() {
        return (int)4557L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_REPUTATION_DANGEROUS_EXT() {
        return (int)4558L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_REPUTATION_OFFLINE() {
        return (int)4559L;
    }
    public static int ERROR_VSM_NOT_INITIALIZED() {
        return (int)4560L;
    }
    public static int ERROR_VSM_DMA_PROTECTION_NOT_IN_USE() {
        return (int)4561L;
    }
    public static int ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED() {
        return (int)4570L;
    }
    public static int ERROR_PLATFORM_MANIFEST_INVALID() {
        return (int)4571L;
    }
    public static int ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED() {
        return (int)4572L;
    }
    public static int ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED() {
        return (int)4573L;
    }
    public static int ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND() {
        return (int)4574L;
    }
    public static int ERROR_PLATFORM_MANIFEST_NOT_ACTIVE() {
        return (int)4575L;
    }
    public static int ERROR_PLATFORM_MANIFEST_NOT_SIGNED() {
        return (int)4576L;
    }
    public static int ERROR_DEPENDENT_RESOURCE_EXISTS() {
        return (int)5001L;
    }
    public static int ERROR_DEPENDENCY_NOT_FOUND() {
        return (int)5002L;
    }
    public static int ERROR_DEPENDENCY_ALREADY_EXISTS() {
        return (int)5003L;
    }
    public static int ERROR_RESOURCE_NOT_ONLINE() {
        return (int)5004L;
    }
    public static int ERROR_HOST_NODE_NOT_AVAILABLE() {
        return (int)5005L;
    }
    public static int ERROR_RESOURCE_NOT_AVAILABLE() {
        return (int)5006L;
    }
    public static int ERROR_RESOURCE_NOT_FOUND() {
        return (int)5007L;
    }
    public static int ERROR_SHUTDOWN_CLUSTER() {
        return (int)5008L;
    }
    public static int ERROR_CANT_EVICT_ACTIVE_NODE() {
        return (int)5009L;
    }
    public static int ERROR_OBJECT_ALREADY_EXISTS() {
        return (int)5010L;
    }
    public static int ERROR_OBJECT_IN_LIST() {
        return (int)5011L;
    }
    public static int ERROR_GROUP_NOT_AVAILABLE() {
        return (int)5012L;
    }
    public static int ERROR_GROUP_NOT_FOUND() {
        return (int)5013L;
    }
    public static int ERROR_GROUP_NOT_ONLINE() {
        return (int)5014L;
    }
    public static int ERROR_HOST_NODE_NOT_RESOURCE_OWNER() {
        return (int)5015L;
    }
    public static int ERROR_HOST_NODE_NOT_GROUP_OWNER() {
        return (int)5016L;
    }
    public static int ERROR_RESMON_CREATE_FAILED() {
        return (int)5017L;
    }
    public static int ERROR_RESMON_ONLINE_FAILED() {
        return (int)5018L;
    }
    public static int ERROR_RESOURCE_ONLINE() {
        return (int)5019L;
    }
    public static int ERROR_QUORUM_RESOURCE() {
        return (int)5020L;
    }
    public static int ERROR_NOT_QUORUM_CAPABLE() {
        return (int)5021L;
    }
    public static int ERROR_CLUSTER_SHUTTING_DOWN() {
        return (int)5022L;
    }
    public static int ERROR_INVALID_STATE() {
        return (int)5023L;
    }
    public static int ERROR_RESOURCE_PROPERTIES_STORED() {
        return (int)5024L;
    }
    public static int ERROR_NOT_QUORUM_CLASS() {
        return (int)5025L;
    }
    public static int ERROR_CORE_RESOURCE() {
        return (int)5026L;
    }
    public static int ERROR_QUORUM_RESOURCE_ONLINE_FAILED() {
        return (int)5027L;
    }
    public static int ERROR_QUORUMLOG_OPEN_FAILED() {
        return (int)5028L;
    }
    public static int ERROR_CLUSTERLOG_CORRUPT() {
        return (int)5029L;
    }
    public static int ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE() {
        return (int)5030L;
    }
    public static int ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE() {
        return (int)5031L;
    }
    public static int ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND() {
        return (int)5032L;
    }
    public static int ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE() {
        return (int)5033L;
    }
    public static int ERROR_QUORUM_OWNER_ALIVE() {
        return (int)5034L;
    }
    public static int ERROR_NETWORK_NOT_AVAILABLE() {
        return (int)5035L;
    }
    public static int ERROR_NODE_NOT_AVAILABLE() {
        return (int)5036L;
    }
    public static int ERROR_ALL_NODES_NOT_AVAILABLE() {
        return (int)5037L;
    }
    public static int ERROR_RESOURCE_FAILED() {
        return (int)5038L;
    }
    public static int ERROR_CLUSTER_INVALID_NODE() {
        return (int)5039L;
    }
    public static int ERROR_CLUSTER_NODE_EXISTS() {
        return (int)5040L;
    }
    public static int ERROR_CLUSTER_JOIN_IN_PROGRESS() {
        return (int)5041L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_FOUND() {
        return (int)5042L;
    }
    public static int ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND() {
        return (int)5043L;
    }
    public static int ERROR_CLUSTER_NETWORK_EXISTS() {
        return (int)5044L;
    }
    public static int ERROR_CLUSTER_NETWORK_NOT_FOUND() {
        return (int)5045L;
    }
    public static int ERROR_CLUSTER_NETINTERFACE_EXISTS() {
        return (int)5046L;
    }
    public static int ERROR_CLUSTER_NETINTERFACE_NOT_FOUND() {
        return (int)5047L;
    }
    public static int ERROR_CLUSTER_INVALID_REQUEST() {
        return (int)5048L;
    }
    public static int ERROR_CLUSTER_INVALID_NETWORK_PROVIDER() {
        return (int)5049L;
    }
    public static int ERROR_CLUSTER_NODE_DOWN() {
        return (int)5050L;
    }
    public static int ERROR_CLUSTER_NODE_UNREACHABLE() {
        return (int)5051L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_MEMBER() {
        return (int)5052L;
    }
    public static int ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS() {
        return (int)5053L;
    }
    public static int ERROR_CLUSTER_INVALID_NETWORK() {
        return (int)5054L;
    }
    public static int ERROR_CLUSTER_NODE_UP() {
        return (int)5056L;
    }
    public static int ERROR_CLUSTER_IPADDR_IN_USE() {
        return (int)5057L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_PAUSED() {
        return (int)5058L;
    }
    public static int ERROR_CLUSTER_NO_SECURITY_CONTEXT() {
        return (int)5059L;
    }
    public static int ERROR_CLUSTER_NETWORK_NOT_INTERNAL() {
        return (int)5060L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_UP() {
        return (int)5061L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_DOWN() {
        return (int)5062L;
    }
    public static int ERROR_CLUSTER_NETWORK_ALREADY_ONLINE() {
        return (int)5063L;
    }
    public static int ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE() {
        return (int)5064L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_MEMBER() {
        return (int)5065L;
    }
    public static int ERROR_CLUSTER_LAST_INTERNAL_NETWORK() {
        return (int)5066L;
    }
    public static int ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS() {
        return (int)5067L;
    }
    public static int ERROR_INVALID_OPERATION_ON_QUORUM() {
        return (int)5068L;
    }
    public static int ERROR_DEPENDENCY_NOT_ALLOWED() {
        return (int)5069L;
    }
    public static int ERROR_CLUSTER_NODE_PAUSED() {
        return (int)5070L;
    }
    public static int ERROR_NODE_CANT_HOST_RESOURCE() {
        return (int)5071L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_READY() {
        return (int)5072L;
    }
    public static int ERROR_CLUSTER_NODE_SHUTTING_DOWN() {
        return (int)5073L;
    }
    public static int ERROR_CLUSTER_JOIN_ABORTED() {
        return (int)5074L;
    }
    public static int ERROR_CLUSTER_INCOMPATIBLE_VERSIONS() {
        return (int)5075L;
    }
    public static int ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED() {
        return (int)5076L;
    }
    public static int ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED() {
        return (int)5077L;
    }
    public static int ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND() {
        return (int)5078L;
    }
    public static int ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED() {
        return (int)5079L;
    }
    public static int ERROR_CLUSTER_RESNAME_NOT_FOUND() {
        return (int)5080L;
    }
    public static int ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED() {
        return (int)5081L;
    }
    public static int ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST() {
        return (int)5082L;
    }
    public static int ERROR_CLUSTER_DATABASE_SEQMISMATCH() {
        return (int)5083L;
    }
    public static int ERROR_RESMON_INVALID_STATE() {
        return (int)5084L;
    }
    public static int ERROR_CLUSTER_GUM_NOT_LOCKER() {
        return (int)5085L;
    }
    public static int ERROR_QUORUM_DISK_NOT_FOUND() {
        return (int)5086L;
    }
    public static int ERROR_DATABASE_BACKUP_CORRUPT() {
        return (int)5087L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT() {
        return (int)5088L;
    }
    public static int ERROR_RESOURCE_PROPERTY_UNCHANGEABLE() {
        return (int)5089L;
    }
    public static int ERROR_NO_ADMIN_ACCESS_POINT() {
        return (int)5090L;
    }
    public static int ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE() {
        return (int)5890L;
    }
    public static int ERROR_CLUSTER_QUORUMLOG_NOT_FOUND() {
        return (int)5891L;
    }
    public static int ERROR_CLUSTER_MEMBERSHIP_HALT() {
        return (int)5892L;
    }
    public static int ERROR_CLUSTER_INSTANCE_ID_MISMATCH() {
        return (int)5893L;
    }
    public static int ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP() {
        return (int)5894L;
    }
    public static int ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH() {
        return (int)5895L;
    }
    public static int ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP() {
        return (int)5896L;
    }
    public static int ERROR_CLUSTER_PARAMETER_MISMATCH() {
        return (int)5897L;
    }
    public static int ERROR_NODE_CANNOT_BE_CLUSTERED() {
        return (int)5898L;
    }
    public static int ERROR_CLUSTER_WRONG_OS_VERSION() {
        return (int)5899L;
    }
    public static int ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME() {
        return (int)5900L;
    }
    public static int ERROR_CLUSCFG_ALREADY_COMMITTED() {
        return (int)5901L;
    }
}


