// Generated by jextract

package opengl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$161 {

    static final FunctionDescriptor FlsAlloc$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FlsAlloc$MH = RuntimeHelper.downcallHandle(
        "FlsAlloc",
        constants$161.FlsAlloc$FUNC
    );
    static final FunctionDescriptor FlsGetValue$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle FlsGetValue$MH = RuntimeHelper.downcallHandle(
        "FlsGetValue",
        constants$161.FlsGetValue$FUNC
    );
    static final FunctionDescriptor FlsSetValue$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FlsSetValue$MH = RuntimeHelper.downcallHandle(
        "FlsSetValue",
        constants$161.FlsSetValue$FUNC
    );
    static final FunctionDescriptor FlsFree$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle FlsFree$MH = RuntimeHelper.downcallHandle(
        "FlsFree",
        constants$161.FlsFree$FUNC
    );
    static final FunctionDescriptor IsThreadAFiber$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle IsThreadAFiber$MH = RuntimeHelper.downcallHandle(
        "IsThreadAFiber",
        constants$161.IsThreadAFiber$FUNC
    );
    static final FunctionDescriptor CreatePipe$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle CreatePipe$MH = RuntimeHelper.downcallHandle(
        "CreatePipe",
        constants$161.CreatePipe$FUNC
    );
}


