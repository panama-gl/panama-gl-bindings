// Generated by jextract

package opengl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _ARM64_NT_CONTEXT {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("ContextFlags"),
        Constants$root.C_LONG$LAYOUT.withName("Cpsr"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG_LONG$LAYOUT.withName("X0"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X1"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X2"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X3"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X4"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X5"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X6"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X7"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X8"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X9"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X10"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X11"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X12"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X13"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X14"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X15"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X16"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X17"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X18"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X19"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X20"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X21"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X22"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X23"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X24"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X25"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X26"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X27"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("X28"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("Fp"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("Lr")
            ).withName("$anon$0"),
            MemoryLayout.sequenceLayout(31, Constants$root.C_LONG_LONG$LAYOUT).withName("X")
        ).withName("$anon$0"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("Sp"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("Pc"),
        MemoryLayout.sequenceLayout(32, MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG_LONG$LAYOUT.withName("Low"),
                Constants$root.C_LONG_LONG$LAYOUT.withName("High")
            ).withName("$anon$0"),
            MemoryLayout.sequenceLayout(2, Constants$root.C_DOUBLE$LAYOUT).withName("D"),
            MemoryLayout.sequenceLayout(4, Constants$root.C_FLOAT$LAYOUT).withName("S"),
            MemoryLayout.sequenceLayout(8, Constants$root.C_SHORT$LAYOUT).withName("H"),
            MemoryLayout.sequenceLayout(16, Constants$root.C_CHAR$LAYOUT).withName("B")
        ).withName("_ARM64_NT_NEON128")).withName("V"),
        Constants$root.C_LONG$LAYOUT.withName("Fpcr"),
        Constants$root.C_LONG$LAYOUT.withName("Fpsr"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_LONG$LAYOUT).withName("Bcr"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_LONG_LONG$LAYOUT).withName("Bvr"),
        MemoryLayout.sequenceLayout(2, Constants$root.C_LONG$LAYOUT).withName("Wcr"),
        MemoryLayout.sequenceLayout(2, Constants$root.C_LONG_LONG$LAYOUT).withName("Wvr")
    ).withName("_ARM64_NT_CONTEXT");
    public static MemoryLayout $LAYOUT() {
        return _ARM64_NT_CONTEXT.$struct$LAYOUT;
    }
    static final VarHandle ContextFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ContextFlags"));
    public static VarHandle ContextFlags$VH() {
        return _ARM64_NT_CONTEXT.ContextFlags$VH;
    }
    public static int ContextFlags$get(MemorySegment seg) {
        return (int)_ARM64_NT_CONTEXT.ContextFlags$VH.get(seg);
    }
    public static void ContextFlags$set( MemorySegment seg, int x) {
        _ARM64_NT_CONTEXT.ContextFlags$VH.set(seg, x);
    }
    public static int ContextFlags$get(MemorySegment seg, long index) {
        return (int)_ARM64_NT_CONTEXT.ContextFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ContextFlags$set(MemorySegment seg, long index, int x) {
        _ARM64_NT_CONTEXT.ContextFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Cpsr$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Cpsr"));
    public static VarHandle Cpsr$VH() {
        return _ARM64_NT_CONTEXT.Cpsr$VH;
    }
    public static int Cpsr$get(MemorySegment seg) {
        return (int)_ARM64_NT_CONTEXT.Cpsr$VH.get(seg);
    }
    public static void Cpsr$set( MemorySegment seg, int x) {
        _ARM64_NT_CONTEXT.Cpsr$VH.set(seg, x);
    }
    public static int Cpsr$get(MemorySegment seg, long index) {
        return (int)_ARM64_NT_CONTEXT.Cpsr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Cpsr$set(MemorySegment seg, long index, int x) {
        _ARM64_NT_CONTEXT.Cpsr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X0$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X0"));
    public static VarHandle X0$VH() {
        return _ARM64_NT_CONTEXT.X0$VH;
    }
    public static long X0$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X0$VH.get(seg);
    }
    public static void X0$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X0$VH.set(seg, x);
    }
    public static long X0$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X0$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X0$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X0$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X1"));
    public static VarHandle X1$VH() {
        return _ARM64_NT_CONTEXT.X1$VH;
    }
    public static long X1$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X1$VH.get(seg);
    }
    public static void X1$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X1$VH.set(seg, x);
    }
    public static long X1$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X1$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X2"));
    public static VarHandle X2$VH() {
        return _ARM64_NT_CONTEXT.X2$VH;
    }
    public static long X2$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X2$VH.get(seg);
    }
    public static void X2$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X2$VH.set(seg, x);
    }
    public static long X2$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X2$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X3"));
    public static VarHandle X3$VH() {
        return _ARM64_NT_CONTEXT.X3$VH;
    }
    public static long X3$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X3$VH.get(seg);
    }
    public static void X3$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X3$VH.set(seg, x);
    }
    public static long X3$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X3$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X4$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X4"));
    public static VarHandle X4$VH() {
        return _ARM64_NT_CONTEXT.X4$VH;
    }
    public static long X4$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X4$VH.get(seg);
    }
    public static void X4$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X4$VH.set(seg, x);
    }
    public static long X4$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X4$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X4$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X4$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X5$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X5"));
    public static VarHandle X5$VH() {
        return _ARM64_NT_CONTEXT.X5$VH;
    }
    public static long X5$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X5$VH.get(seg);
    }
    public static void X5$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X5$VH.set(seg, x);
    }
    public static long X5$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X5$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X5$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X5$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X6$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X6"));
    public static VarHandle X6$VH() {
        return _ARM64_NT_CONTEXT.X6$VH;
    }
    public static long X6$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X6$VH.get(seg);
    }
    public static void X6$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X6$VH.set(seg, x);
    }
    public static long X6$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X6$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X6$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X6$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X7$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X7"));
    public static VarHandle X7$VH() {
        return _ARM64_NT_CONTEXT.X7$VH;
    }
    public static long X7$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X7$VH.get(seg);
    }
    public static void X7$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X7$VH.set(seg, x);
    }
    public static long X7$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X7$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X7$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X7$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X8$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X8"));
    public static VarHandle X8$VH() {
        return _ARM64_NT_CONTEXT.X8$VH;
    }
    public static long X8$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X8$VH.get(seg);
    }
    public static void X8$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X8$VH.set(seg, x);
    }
    public static long X8$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X8$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X8$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X8$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X9$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X9"));
    public static VarHandle X9$VH() {
        return _ARM64_NT_CONTEXT.X9$VH;
    }
    public static long X9$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X9$VH.get(seg);
    }
    public static void X9$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X9$VH.set(seg, x);
    }
    public static long X9$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X9$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X9$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X9$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X10$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X10"));
    public static VarHandle X10$VH() {
        return _ARM64_NT_CONTEXT.X10$VH;
    }
    public static long X10$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X10$VH.get(seg);
    }
    public static void X10$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X10$VH.set(seg, x);
    }
    public static long X10$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X10$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X10$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X10$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X11$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X11"));
    public static VarHandle X11$VH() {
        return _ARM64_NT_CONTEXT.X11$VH;
    }
    public static long X11$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X11$VH.get(seg);
    }
    public static void X11$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X11$VH.set(seg, x);
    }
    public static long X11$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X11$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X11$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X11$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X12$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X12"));
    public static VarHandle X12$VH() {
        return _ARM64_NT_CONTEXT.X12$VH;
    }
    public static long X12$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X12$VH.get(seg);
    }
    public static void X12$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X12$VH.set(seg, x);
    }
    public static long X12$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X12$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X12$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X12$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X13$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X13"));
    public static VarHandle X13$VH() {
        return _ARM64_NT_CONTEXT.X13$VH;
    }
    public static long X13$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X13$VH.get(seg);
    }
    public static void X13$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X13$VH.set(seg, x);
    }
    public static long X13$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X13$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X13$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X13$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X14$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X14"));
    public static VarHandle X14$VH() {
        return _ARM64_NT_CONTEXT.X14$VH;
    }
    public static long X14$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X14$VH.get(seg);
    }
    public static void X14$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X14$VH.set(seg, x);
    }
    public static long X14$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X14$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X14$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X14$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X15$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X15"));
    public static VarHandle X15$VH() {
        return _ARM64_NT_CONTEXT.X15$VH;
    }
    public static long X15$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X15$VH.get(seg);
    }
    public static void X15$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X15$VH.set(seg, x);
    }
    public static long X15$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X15$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X15$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X15$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X16$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X16"));
    public static VarHandle X16$VH() {
        return _ARM64_NT_CONTEXT.X16$VH;
    }
    public static long X16$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X16$VH.get(seg);
    }
    public static void X16$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X16$VH.set(seg, x);
    }
    public static long X16$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X16$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X16$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X16$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X17$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X17"));
    public static VarHandle X17$VH() {
        return _ARM64_NT_CONTEXT.X17$VH;
    }
    public static long X17$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X17$VH.get(seg);
    }
    public static void X17$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X17$VH.set(seg, x);
    }
    public static long X17$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X17$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X17$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X17$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X18$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X18"));
    public static VarHandle X18$VH() {
        return _ARM64_NT_CONTEXT.X18$VH;
    }
    public static long X18$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X18$VH.get(seg);
    }
    public static void X18$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X18$VH.set(seg, x);
    }
    public static long X18$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X18$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X18$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X18$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X19$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X19"));
    public static VarHandle X19$VH() {
        return _ARM64_NT_CONTEXT.X19$VH;
    }
    public static long X19$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X19$VH.get(seg);
    }
    public static void X19$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X19$VH.set(seg, x);
    }
    public static long X19$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X19$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X19$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X19$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X20$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X20"));
    public static VarHandle X20$VH() {
        return _ARM64_NT_CONTEXT.X20$VH;
    }
    public static long X20$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X20$VH.get(seg);
    }
    public static void X20$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X20$VH.set(seg, x);
    }
    public static long X20$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X20$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X20$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X20$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X21$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X21"));
    public static VarHandle X21$VH() {
        return _ARM64_NT_CONTEXT.X21$VH;
    }
    public static long X21$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X21$VH.get(seg);
    }
    public static void X21$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X21$VH.set(seg, x);
    }
    public static long X21$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X21$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X21$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X21$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X22$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X22"));
    public static VarHandle X22$VH() {
        return _ARM64_NT_CONTEXT.X22$VH;
    }
    public static long X22$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X22$VH.get(seg);
    }
    public static void X22$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X22$VH.set(seg, x);
    }
    public static long X22$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X22$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X22$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X22$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X23$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X23"));
    public static VarHandle X23$VH() {
        return _ARM64_NT_CONTEXT.X23$VH;
    }
    public static long X23$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X23$VH.get(seg);
    }
    public static void X23$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X23$VH.set(seg, x);
    }
    public static long X23$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X23$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X23$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X23$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X24$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X24"));
    public static VarHandle X24$VH() {
        return _ARM64_NT_CONTEXT.X24$VH;
    }
    public static long X24$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X24$VH.get(seg);
    }
    public static void X24$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X24$VH.set(seg, x);
    }
    public static long X24$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X24$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X24$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X24$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X25$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X25"));
    public static VarHandle X25$VH() {
        return _ARM64_NT_CONTEXT.X25$VH;
    }
    public static long X25$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X25$VH.get(seg);
    }
    public static void X25$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X25$VH.set(seg, x);
    }
    public static long X25$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X25$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X25$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X25$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X26$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X26"));
    public static VarHandle X26$VH() {
        return _ARM64_NT_CONTEXT.X26$VH;
    }
    public static long X26$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X26$VH.get(seg);
    }
    public static void X26$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X26$VH.set(seg, x);
    }
    public static long X26$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X26$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X26$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X26$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X27$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X27"));
    public static VarHandle X27$VH() {
        return _ARM64_NT_CONTEXT.X27$VH;
    }
    public static long X27$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X27$VH.get(seg);
    }
    public static void X27$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X27$VH.set(seg, x);
    }
    public static long X27$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X27$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X27$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X27$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle X28$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("X28"));
    public static VarHandle X28$VH() {
        return _ARM64_NT_CONTEXT.X28$VH;
    }
    public static long X28$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.X28$VH.get(seg);
    }
    public static void X28$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.X28$VH.set(seg, x);
    }
    public static long X28$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.X28$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void X28$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.X28$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Fp$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("Fp"));
    public static VarHandle Fp$VH() {
        return _ARM64_NT_CONTEXT.Fp$VH;
    }
    public static long Fp$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.Fp$VH.get(seg);
    }
    public static void Fp$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.Fp$VH.set(seg, x);
    }
    public static long Fp$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.Fp$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Fp$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.Fp$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Lr$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("Lr"));
    public static VarHandle Lr$VH() {
        return _ARM64_NT_CONTEXT.Lr$VH;
    }
    public static long Lr$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.Lr$VH.get(seg);
    }
    public static void Lr$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.Lr$VH.set(seg, x);
    }
    public static long Lr$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.Lr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Lr$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.Lr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment X$slice(MemorySegment seg) {
        return seg.asSlice(8, 248);
    }
    static final VarHandle Sp$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Sp"));
    public static VarHandle Sp$VH() {
        return _ARM64_NT_CONTEXT.Sp$VH;
    }
    public static long Sp$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.Sp$VH.get(seg);
    }
    public static void Sp$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.Sp$VH.set(seg, x);
    }
    public static long Sp$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.Sp$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Sp$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.Sp$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Pc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Pc"));
    public static VarHandle Pc$VH() {
        return _ARM64_NT_CONTEXT.Pc$VH;
    }
    public static long Pc$get(MemorySegment seg) {
        return (long)_ARM64_NT_CONTEXT.Pc$VH.get(seg);
    }
    public static void Pc$set( MemorySegment seg, long x) {
        _ARM64_NT_CONTEXT.Pc$VH.set(seg, x);
    }
    public static long Pc$get(MemorySegment seg, long index) {
        return (long)_ARM64_NT_CONTEXT.Pc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Pc$set(MemorySegment seg, long index, long x) {
        _ARM64_NT_CONTEXT.Pc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment V$slice(MemorySegment seg) {
        return seg.asSlice(272, 512);
    }
    static final VarHandle Fpcr$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Fpcr"));
    public static VarHandle Fpcr$VH() {
        return _ARM64_NT_CONTEXT.Fpcr$VH;
    }
    public static int Fpcr$get(MemorySegment seg) {
        return (int)_ARM64_NT_CONTEXT.Fpcr$VH.get(seg);
    }
    public static void Fpcr$set( MemorySegment seg, int x) {
        _ARM64_NT_CONTEXT.Fpcr$VH.set(seg, x);
    }
    public static int Fpcr$get(MemorySegment seg, long index) {
        return (int)_ARM64_NT_CONTEXT.Fpcr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Fpcr$set(MemorySegment seg, long index, int x) {
        _ARM64_NT_CONTEXT.Fpcr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Fpsr$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Fpsr"));
    public static VarHandle Fpsr$VH() {
        return _ARM64_NT_CONTEXT.Fpsr$VH;
    }
    public static int Fpsr$get(MemorySegment seg) {
        return (int)_ARM64_NT_CONTEXT.Fpsr$VH.get(seg);
    }
    public static void Fpsr$set( MemorySegment seg, int x) {
        _ARM64_NT_CONTEXT.Fpsr$VH.set(seg, x);
    }
    public static int Fpsr$get(MemorySegment seg, long index) {
        return (int)_ARM64_NT_CONTEXT.Fpsr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Fpsr$set(MemorySegment seg, long index, int x) {
        _ARM64_NT_CONTEXT.Fpsr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Bcr$slice(MemorySegment seg) {
        return seg.asSlice(792, 32);
    }
    public static MemorySegment Bvr$slice(MemorySegment seg) {
        return seg.asSlice(824, 64);
    }
    public static MemorySegment Wcr$slice(MemorySegment seg) {
        return seg.asSlice(888, 8);
    }
    public static MemorySegment Wvr$slice(MemorySegment seg) {
        return seg.asSlice(896, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


