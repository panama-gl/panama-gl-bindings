// Generated by jextract

package opengl.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$282 {

    static final FunctionDescriptor OpenEncryptedFileRawW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle OpenEncryptedFileRawW$MH = RuntimeHelper.downcallHandle(
        "OpenEncryptedFileRawW",
        constants$282.OpenEncryptedFileRawW$FUNC
    );
    static final FunctionDescriptor ReadEncryptedFileRaw$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadEncryptedFileRaw$MH = RuntimeHelper.downcallHandle(
        "ReadEncryptedFileRaw",
        constants$282.ReadEncryptedFileRaw$FUNC
    );
    static final FunctionDescriptor WriteEncryptedFileRaw$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WriteEncryptedFileRaw$MH = RuntimeHelper.downcallHandle(
        "WriteEncryptedFileRaw",
        constants$282.WriteEncryptedFileRaw$FUNC
    );
    static final FunctionDescriptor CloseEncryptedFileRaw$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CloseEncryptedFileRaw$MH = RuntimeHelper.downcallHandle(
        "CloseEncryptedFileRaw",
        constants$282.CloseEncryptedFileRaw$FUNC
    );
    static final FunctionDescriptor lstrcmpA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle lstrcmpA$MH = RuntimeHelper.downcallHandle(
        "lstrcmpA",
        constants$282.lstrcmpA$FUNC
    );
    static final FunctionDescriptor lstrcmpW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle lstrcmpW$MH = RuntimeHelper.downcallHandle(
        "lstrcmpW",
        constants$282.lstrcmpW$FUNC
    );
}


