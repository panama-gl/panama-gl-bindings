// Generated by jextract

package opengl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$72 {

    static final FunctionDescriptor ReadInt32Acquire$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadInt32Acquire$MH = RuntimeHelper.downcallHandle(
        "ReadInt32Acquire",
        constants$72.ReadInt32Acquire$FUNC
    );
    static final FunctionDescriptor ReadInt32NoFence$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadInt32NoFence$MH = RuntimeHelper.downcallHandle(
        "ReadInt32NoFence",
        constants$72.ReadInt32NoFence$FUNC
    );
    static final FunctionDescriptor ReadInt32Raw$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadInt32Raw$MH = RuntimeHelper.downcallHandle(
        "ReadInt32Raw",
        constants$72.ReadInt32Raw$FUNC
    );
    static final FunctionDescriptor WriteInt32Release$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WriteInt32Release$MH = RuntimeHelper.downcallHandle(
        "WriteInt32Release",
        constants$72.WriteInt32Release$FUNC
    );
    static final FunctionDescriptor WriteInt32NoFence$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WriteInt32NoFence$MH = RuntimeHelper.downcallHandle(
        "WriteInt32NoFence",
        constants$72.WriteInt32NoFence$FUNC
    );
    static final FunctionDescriptor WriteInt32Raw$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WriteInt32Raw$MH = RuntimeHelper.downcallHandle(
        "WriteInt32Raw",
        constants$72.WriteInt32Raw$FUNC
    );
}


