// Generated by jextract

package opengl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class glut_h_25 extends glut_h_24 {

    public static int DS_MODALFRAME() {
        return (int)128L;
    }
    public static int DS_NOIDLEMSG() {
        return (int)256L;
    }
    public static int DS_SETFOREGROUND() {
        return (int)512L;
    }
    public static int DS_3DLOOK() {
        return (int)4L;
    }
    public static int DS_FIXEDSYS() {
        return (int)8L;
    }
    public static int DS_NOFAILCREATE() {
        return (int)16L;
    }
    public static int DS_CONTROL() {
        return (int)1024L;
    }
    public static int DS_CENTER() {
        return (int)2048L;
    }
    public static int DS_CENTERMOUSE() {
        return (int)4096L;
    }
    public static int DS_CONTEXTHELP() {
        return (int)8192L;
    }
    public static int DS_SHELLFONT() {
        return (int)72L;
    }
    public static int DM_GETDEFID() {
        return (int)1024L;
    }
    public static int DM_SETDEFID() {
        return (int)1025L;
    }
    public static int DM_REPOSITION() {
        return (int)1026L;
    }
    public static int LB_CTLCODE() {
        return (int)0L;
    }
    public static int LB_ERR() {
        return (int)-1L;
    }
    public static int LB_ERRSPACE() {
        return (int)-2L;
    }
    public static int LBN_ERRSPACE() {
        return (int)-2L;
    }
    public static int LBS_NOTIFY() {
        return (int)1L;
    }
    public static int LBS_SORT() {
        return (int)2L;
    }
    public static int LBS_NOREDRAW() {
        return (int)4L;
    }
    public static int LBS_MULTIPLESEL() {
        return (int)8L;
    }
    public static int LBS_OWNERDRAWFIXED() {
        return (int)16L;
    }
    public static int LBS_OWNERDRAWVARIABLE() {
        return (int)32L;
    }
    public static int LBS_HASSTRINGS() {
        return (int)64L;
    }
    public static int LBS_USETABSTOPS() {
        return (int)128L;
    }
    public static int LBS_NOINTEGRALHEIGHT() {
        return (int)256L;
    }
    public static int LBS_MULTICOLUMN() {
        return (int)512L;
    }
    public static int LBS_WANTKEYBOARDINPUT() {
        return (int)1024L;
    }
    public static int LBS_EXTENDEDSEL() {
        return (int)2048L;
    }
    public static int LBS_DISABLENOSCROLL() {
        return (int)4096L;
    }
    public static int LBS_NODATA() {
        return (int)8192L;
    }
    public static int LBS_NOSEL() {
        return (int)16384L;
    }
    public static int LBS_COMBOBOX() {
        return (int)32768L;
    }
    public static int LBS_STANDARD() {
        return (int)10485763L;
    }
    public static int CB_ERR() {
        return (int)-1L;
    }
    public static int CB_ERRSPACE() {
        return (int)-2L;
    }
    public static int CBN_ERRSPACE() {
        return (int)-1L;
    }
    public static int CBS_SIMPLE() {
        return (int)1L;
    }
    public static int CBS_DROPDOWN() {
        return (int)2L;
    }
    public static int CBS_DROPDOWNLIST() {
        return (int)3L;
    }
    public static int CBS_OWNERDRAWFIXED() {
        return (int)16L;
    }
    public static int CBS_OWNERDRAWVARIABLE() {
        return (int)32L;
    }
    public static int CBS_AUTOHSCROLL() {
        return (int)64L;
    }
    public static int CBS_OEMCONVERT() {
        return (int)128L;
    }
    public static int CBS_SORT() {
        return (int)256L;
    }
    public static int CBS_HASSTRINGS() {
        return (int)512L;
    }
    public static int CBS_NOINTEGRALHEIGHT() {
        return (int)1024L;
    }
    public static int CBS_DISABLENOSCROLL() {
        return (int)2048L;
    }
    public static int CBS_UPPERCASE() {
        return (int)8192L;
    }
    public static int CBS_LOWERCASE() {
        return (int)16384L;
    }
    public static int SBS_HORZ() {
        return (int)0L;
    }
    public static int SBS_VERT() {
        return (int)1L;
    }
    public static int SBS_TOPALIGN() {
        return (int)2L;
    }
    public static int SBS_LEFTALIGN() {
        return (int)2L;
    }
    public static int SBS_BOTTOMALIGN() {
        return (int)4L;
    }
    public static int SBS_RIGHTALIGN() {
        return (int)4L;
    }
    public static int SBS_SIZEBOXTOPLEFTALIGN() {
        return (int)2L;
    }
    public static int SBS_SIZEBOXBOTTOMRIGHTALIGN() {
        return (int)4L;
    }
    public static int SBS_SIZEBOX() {
        return (int)8L;
    }
    public static int SBS_SIZEGRIP() {
        return (int)16L;
    }
    public static int SIF_ALL() {
        return (int)23L;
    }
    public static int HELP_CONTEXT() {
        return (int)1L;
    }
    public static int HELP_QUIT() {
        return (int)2L;
    }
    public static int HELP_INDEX() {
        return (int)3L;
    }
    public static int HELP_CONTENTS() {
        return (int)3L;
    }
    public static int HELP_HELPONHELP() {
        return (int)4L;
    }
    public static int HELP_SETINDEX() {
        return (int)5L;
    }
    public static int HELP_SETCONTENTS() {
        return (int)5L;
    }
    public static int HELP_CONTEXTPOPUP() {
        return (int)8L;
    }
    public static int HELP_FORCEFILE() {
        return (int)9L;
    }
    public static int HELP_KEY() {
        return (int)257L;
    }
    public static int HELP_COMMAND() {
        return (int)258L;
    }
    public static int HELP_PARTIALKEY() {
        return (int)261L;
    }
    public static int HELP_MULTIKEY() {
        return (int)513L;
    }
    public static int HELP_SETWINPOS() {
        return (int)515L;
    }
    public static MemoryAddress GR_GLOBAL() {
        return constants$811.GR_GLOBAL$ADDR;
    }
    public static int SPI_SCREENSAVERRUNNING() {
        return (int)97L;
    }
    public static float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_DELTA() {
        return 0.0010000000474974513f;
    }
    public static float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MIN() {
        return 0.8999999761581421f;
    }
    public static float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MAX() {
        return 0.9990000128746033f;
    }
    public static float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_LEARNING_RATE() {
        return 0.0010000000474974513f;
    }
    public static float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_EXPO_SMOOTH_ALPHA() {
        return 0.9900000095367432f;
    }
    public static int MIN_LOGICALDPIOVERRIDE() {
        return (int)-2L;
    }
    public static int SPI_GETMENUUNDERLINES() {
        return (int)4106L;
    }
    public static int SPI_SETMENUUNDERLINES() {
        return (int)4107L;
    }
    public static int SPIF_SENDCHANGE() {
        return (int)2L;
    }
    public static int METRICS_USEDEFAULT() {
        return (int)-1L;
    }
    public static int ARW_BOTTOMLEFT() {
        return (int)0L;
    }
    public static int ARW_BOTTOMRIGHT() {
        return (int)1L;
    }
    public static int ARW_TOPLEFT() {
        return (int)2L;
    }
    public static int ARW_TOPRIGHT() {
        return (int)3L;
    }
    public static int ARW_STARTMASK() {
        return (int)3L;
    }
    public static int ARW_STARTRIGHT() {
        return (int)1L;
    }
    public static int ARW_STARTTOP() {
        return (int)2L;
    }
    public static int ARW_LEFT() {
        return (int)0L;
    }
    public static int ARW_RIGHT() {
        return (int)0L;
    }
    public static int ARW_UP() {
        return (int)4L;
    }
    public static int ARW_DOWN() {
        return (int)4L;
    }
    public static int ARW_HIDE() {
        return (int)8L;
    }
    public static int DISP_CHANGE_FAILED() {
        return (int)-1L;
    }
    public static int DISP_CHANGE_BADMODE() {
        return (int)-2L;
    }
    public static int DISP_CHANGE_NOTUPDATED() {
        return (int)-3L;
    }
    public static int DISP_CHANGE_BADFLAGS() {
        return (int)-4L;
    }
    public static int DISP_CHANGE_BADPARAM() {
        return (int)-5L;
    }
    public static int DISP_CHANGE_BADDUALVIEW() {
        return (int)-6L;
    }
    public static int ENUM_CURRENT_SETTINGS() {
        return (int)4294967295L;
    }
    public static int ENUM_REGISTRY_SETTINGS() {
        return (int)4294967294L;
    }
    public static int SKF_RWINLATCHED() {
        return (int)2147483648L;
    }
    public static int MKF_MOUSEMODE() {
        return (int)2147483648L;
    }
    public static int OBJID_WINDOW() {
        return (int)0L;
    }
    public static int OBJID_SYSMENU() {
        return (int)-1L;
    }
    public static int OBJID_TITLEBAR() {
        return (int)-2L;
    }
    public static int OBJID_MENU() {
        return (int)-3L;
    }
    public static int OBJID_CLIENT() {
        return (int)-4L;
    }
    public static int OBJID_VSCROLL() {
        return (int)-5L;
    }
    public static int OBJID_HSCROLL() {
        return (int)-6L;
    }
    public static int OBJID_SIZEGRIP() {
        return (int)-7L;
    }
    public static int OBJID_CARET() {
        return (int)-8L;
    }
    public static int OBJID_CURSOR() {
        return (int)-9L;
    }
    public static int OBJID_ALERT() {
        return (int)-10L;
    }
    public static int OBJID_SOUND() {
        return (int)-11L;
    }
    public static int OBJID_QUERYCLASSNAMEIDX() {
        return (int)-12L;
    }
    public static int OBJID_NATIVEOM() {
        return (int)-16L;
    }
    public static int STATE_SYSTEM_INDETERMINATE() {
        return (int)32L;
    }
    public static int RI_MOUSE_BUTTON_1_DOWN() {
        return (int)1L;
    }
    public static int RI_MOUSE_BUTTON_1_UP() {
        return (int)2L;
    }
    public static int RI_MOUSE_BUTTON_2_DOWN() {
        return (int)4L;
    }
    public static int RI_MOUSE_BUTTON_2_UP() {
        return (int)8L;
    }
    public static int RI_MOUSE_BUTTON_3_DOWN() {
        return (int)16L;
    }
    public static int RI_MOUSE_BUTTON_3_UP() {
        return (int)32L;
    }
    public static int MSGFLTINFO_NONE() {
        return (int)0L;
    }
    public static int MSGFLTINFO_ALREADYALLOWED_FORWND() {
        return (int)1L;
    }
    public static int MSGFLTINFO_ALREADYDISALLOWED_FORWND() {
        return (int)2L;
    }
    public static int MSGFLTINFO_ALLOWED_HIGHER() {
        return (int)3L;
    }
    public static int MSGFLT_RESET() {
        return (int)0L;
    }
    public static int MSGFLT_ALLOW() {
        return (int)1L;
    }
    public static int MSGFLT_DISALLOW() {
        return (int)2L;
    }
    public static int GID_ROLLOVER() {
        return (int)7L;
    }
    public static int GC_ROLLOVER() {
        return (int)1L;
    }
    public static int LOCALE_NOUSEROVERRIDE() {
        return (int)2147483648L;
    }
    public static int LOCALE_SLANGUAGE() {
        return (int)2L;
    }
    public static int LOCALE_SLANGDISPLAYNAME() {
        return (int)111L;
    }
    public static int LOCALE_SENGLANGUAGE() {
        return (int)4097L;
    }
    public static int LOCALE_SNATIVELANGNAME() {
        return (int)4L;
    }
    public static int LOCALE_SCOUNTRY() {
        return (int)6L;
    }
    public static int LOCALE_SENGCOUNTRY() {
        return (int)4098L;
    }
    public static int LOCALE_SNATIVECTRYNAME() {
        return (int)8L;
    }
    public static int LOCALE_ICOUNTRY() {
        return (int)5L;
    }
    public static int LOCALE_S1159() {
        return (int)40L;
    }
    public static int LOCALE_S2359() {
        return (int)41L;
    }
    public static int CAL_NOUSEROVERRIDE() {
        return (int)2147483648L;
    }
    public static int CAL_USE_CP_ACP() {
        return (int)1073741824L;
    }
    public static int CAL_RETURN_NUMBER() {
        return (int)536870912L;
    }
    public static int CAL_RETURN_GENITIVE_NAMES() {
        return (int)268435456L;
    }
    public static int ENUM_ALL_CALENDARS() {
        return (int)4294967295L;
    }
    public static int MUI_UI_FALLBACK() {
        return (int)48L;
    }
    public static int GEOID_NOT_AVAILABLE() {
        return (int)-1L;
    }
    public static MemoryAddress GEO_NAME_USER_DEFAULT() {
        return constants$812.GEO_NAME_USER_DEFAULT$ADDR;
    }
    public static MemoryAddress LOCALE_NAME_USER_DEFAULT() {
        return constants$812.LOCALE_NAME_USER_DEFAULT$ADDR;
    }
    public static MemorySegment LOCALE_NAME_INVARIANT() {
        return constants$812.LOCALE_NAME_INVARIANT$SEGMENT;
    }
    public static MemorySegment LOCALE_NAME_SYSTEM_DEFAULT() {
        return constants$812.LOCALE_NAME_SYSTEM_DEFAULT$SEGMENT;
    }
    public static int ATTACH_PARENT_PROCESS() {
        return (int)4294967295L;
    }
    public static int PSEUDOCONSOLE_INHERIT_CURSOR() {
        return (int)1L;
    }
    public static MemoryAddress VS_FILE_INFO() {
        return constants$812.VS_FILE_INFO$ADDR;
    }
    public static int VS_FFI_SIGNATURE() {
        return (int)4277077181L;
    }
    public static int VS_FFI_STRUCVERSION() {
        return (int)65536L;
    }
    public static int VS_FFI_FILEFLAGSMASK() {
        return (int)63L;
    }
    public static int VS_FF_DEBUG() {
        return (int)1L;
    }
    public static int VS_FF_PRERELEASE() {
        return (int)2L;
    }
    public static int VS_FF_PATCHED() {
        return (int)4L;
    }
    public static int VS_FF_PRIVATEBUILD() {
        return (int)8L;
    }
    public static int VS_FF_INFOINFERRED() {
        return (int)16L;
    }
    public static int VS_FF_SPECIALBUILD() {
        return (int)32L;
    }
    public static int VOS_UNKNOWN() {
        return (int)0L;
    }
    public static int VOS_DOS() {
        return (int)65536L;
    }
    public static int VOS_OS216() {
        return (int)131072L;
    }
    public static int VOS_OS232() {
        return (int)196608L;
    }
    public static int VOS_NT() {
        return (int)262144L;
    }
    public static int VOS_WINCE() {
        return (int)327680L;
    }
    public static int VOS__BASE() {
        return (int)0L;
    }
    public static int VOS__WINDOWS16() {
        return (int)1L;
    }
    public static int VOS__PM16() {
        return (int)2L;
    }
    public static int VOS__PM32() {
        return (int)3L;
    }
    public static int VOS__WINDOWS32() {
        return (int)4L;
    }
    public static int VOS_DOS_WINDOWS16() {
        return (int)65537L;
    }
    public static int VOS_DOS_WINDOWS32() {
        return (int)65540L;
    }
    public static int VOS_OS216_PM16() {
        return (int)131074L;
    }
    public static int VOS_OS232_PM32() {
        return (int)196611L;
    }
    public static int VOS_NT_WINDOWS32() {
        return (int)262148L;
    }
    public static int VFT_UNKNOWN() {
        return (int)0L;
    }
    public static int VFT_APP() {
        return (int)1L;
    }
    public static int VFT_DLL() {
        return (int)2L;
    }
    public static int VFT_DRV() {
        return (int)3L;
    }
    public static int VFT_FONT() {
        return (int)4L;
    }
    public static int VFT_VXD() {
        return (int)5L;
    }
    public static int VFT_STATIC_LIB() {
        return (int)7L;
    }
    public static int VFT2_UNKNOWN() {
        return (int)0L;
    }
    public static int VFT2_DRV_PRINTER() {
        return (int)1L;
    }
    public static int VFT2_DRV_KEYBOARD() {
        return (int)2L;
    }
    public static int VFT2_DRV_LANGUAGE() {
        return (int)3L;
    }
    public static int VFT2_DRV_DISPLAY() {
        return (int)4L;
    }
    public static int VFT2_DRV_MOUSE() {
        return (int)5L;
    }
    public static int VFT2_DRV_NETWORK() {
        return (int)6L;
    }
    public static int VFT2_DRV_SYSTEM() {
        return (int)7L;
    }
    public static int VFT2_DRV_INSTALLABLE() {
        return (int)8L;
    }
    public static int VFT2_DRV_SOUND() {
        return (int)9L;
    }
    public static int VFT2_DRV_COMM() {
        return (int)10L;
    }
    public static int VFT2_DRV_INPUTMETHOD() {
        return (int)11L;
    }
    public static int VFT2_DRV_VERSIONED_PRINTER() {
        return (int)12L;
    }
    public static int VFT2_FONT_RASTER() {
        return (int)1L;
    }
    public static int VFT2_FONT_VECTOR() {
        return (int)2L;
    }
    public static int VFT2_FONT_TRUETYPE() {
        return (int)3L;
    }
    public static int VIF_TEMPFILE() {
        return (int)1L;
    }
    public static int VIF_MISMATCH() {
        return (int)2L;
    }
    public static int VIF_SRCOLD() {
        return (int)4L;
    }
    public static int VIF_DIFFLANG() {
        return (int)8L;
    }
    public static int VIF_DIFFCODEPG() {
        return (int)16L;
    }
    public static int VIF_DIFFTYPE() {
        return (int)32L;
    }
    public static int VIF_WRITEPROT() {
        return (int)64L;
    }
    public static int VIF_FILEINUSE() {
        return (int)128L;
    }
    public static int VIF_OUTOFSPACE() {
        return (int)256L;
    }
    public static int VIF_ACCESSVIOLATION() {
        return (int)512L;
    }
    public static int VIF_SHARINGVIOLATION() {
        return (int)1024L;
    }
    public static int VIF_CANNOTCREATE() {
        return (int)2048L;
    }
    public static int VIF_CANNOTDELETE() {
        return (int)4096L;
    }
    public static int VIF_CANNOTRENAME() {
        return (int)8192L;
    }
    public static int VIF_CANNOTDELETECUR() {
        return (int)16384L;
    }
    public static int VIF_OUTOFMEMORY() {
        return (int)32768L;
    }
    public static int VIF_CANNOTREADSRC() {
        return (int)65536L;
    }
    public static int VIF_CANNOTREADDST() {
        return (int)131072L;
    }
    public static int VIF_BUFFTOOSMALL() {
        return (int)262144L;
    }
    public static int VIF_CANNOTLOADLZ32() {
        return (int)524288L;
    }
    public static int VIF_CANNOTLOADCABINET() {
        return (int)1048576L;
    }
    public static int RRF_RT_DWORD() {
        return (int)24L;
    }
    public static int RRF_RT_QWORD() {
        return (int)72L;
    }
    public static MemoryAddress HKEY_CLASSES_ROOT() {
        return constants$812.HKEY_CLASSES_ROOT$ADDR;
    }
    public static MemoryAddress HKEY_CURRENT_USER() {
        return constants$813.HKEY_CURRENT_USER$ADDR;
    }
    public static MemoryAddress HKEY_LOCAL_MACHINE() {
        return constants$813.HKEY_LOCAL_MACHINE$ADDR;
    }
    public static MemoryAddress HKEY_USERS() {
        return constants$813.HKEY_USERS$ADDR;
    }
    public static MemoryAddress HKEY_PERFORMANCE_DATA() {
        return constants$813.HKEY_PERFORMANCE_DATA$ADDR;
    }
    public static MemoryAddress HKEY_PERFORMANCE_TEXT() {
        return constants$813.HKEY_PERFORMANCE_TEXT$ADDR;
    }
    public static MemoryAddress HKEY_PERFORMANCE_NLSTEXT() {
        return constants$813.HKEY_PERFORMANCE_NLSTEXT$ADDR;
    }
    public static MemoryAddress HKEY_CURRENT_CONFIG() {
        return constants$814.HKEY_CURRENT_CONFIG$ADDR;
    }
    public static MemoryAddress HKEY_DYN_DATA() {
        return constants$814.HKEY_DYN_DATA$ADDR;
    }
    public static MemoryAddress HKEY_CURRENT_USER_LOCAL_SETTINGS() {
        return constants$814.HKEY_CURRENT_USER_LOCAL_SETTINGS$ADDR;
    }
    public static MemoryAddress WIN31_CLASS() {
        return constants$814.WIN31_CLASS$ADDR;
    }
    public static int SHTDN_REASON_FLAG_PLANNED() {
        return (int)2147483648L;
    }
    public static int SHTDN_REASON_UNKNOWN() {
        return (int)255L;
    }
    public static int SHTDN_REASON_LEGACY_API() {
        return (int)2147942400L;
    }
    public static int SHTDN_REASON_VALID_BIT_MASK() {
        return (int)3238002687L;
    }
    public static int PCLEANUI() {
        return (int)2214592512L;
    }
    public static int UCLEANUI() {
        return (int)67108864L;
    }
    public static int PDIRTYUI() {
        return (int)2281701376L;
    }
    public static int UDIRTYUI() {
        return (int)134217728L;
    }
    public static int REASON_SWINSTALL() {
        return (int)196610L;
    }
    public static int REASON_HWINSTALL() {
        return (int)65538L;
    }
    public static int REASON_SERVICEHANG() {
        return (int)196613L;
    }
    public static int REASON_UNSTABLE() {
        return (int)327686L;
    }
    public static int REASON_SWHWRECONF() {
        return (int)196612L;
    }
    public static int REASON_OTHER() {
        return (int)0L;
    }
    public static int REASON_UNKNOWN() {
        return (int)255L;
    }
    public static int REASON_LEGACY_API() {
        return (int)2147942400L;
    }
    public static int REASON_PLANNED_FLAG() {
        return (int)2147483648L;
    }
    public static int MAX_SHUTDOWN_TIMEOUT() {
        return (int)315360000L;
    }
    public static int WNNC_CRED_MANAGER() {
        return (int)4294901760L;
    }
    public static int WNNC_NET_LANMAN() {
        return (int)131072L;
    }
    public static int RESOURCETYPE_UNKNOWN() {
        return (int)4294967295L;
    }
    public static int RESOURCEUSAGE_ALL() {
        return (int)19L;
    }
    public static int RESOURCEUSAGE_RESERVED() {
        return (int)2147483648L;
    }
    public static int CONNECT_RESERVED() {
        return (int)4278190080L;
    }
    public static int WN_SUCCESS() {
        return (int)0L;
    }
    public static int WN_NO_ERROR() {
        return (int)0L;
    }
    public static int WN_NOT_SUPPORTED() {
        return (int)50L;
    }
    public static int WN_CANCEL() {
        return (int)1223L;
    }
    public static int WN_RETRY() {
        return (int)1237L;
    }
    public static int WN_NET_ERROR() {
        return (int)59L;
    }
    public static int WN_MORE_DATA() {
        return (int)234L;
    }
    public static int WN_BAD_POINTER() {
        return (int)487L;
    }
    public static int WN_BAD_VALUE() {
        return (int)87L;
    }
    public static int WN_BAD_USER() {
        return (int)2202L;
    }
    public static int WN_BAD_PASSWORD() {
        return (int)86L;
    }
    public static int WN_ACCESS_DENIED() {
        return (int)5L;
    }
    public static int WN_FUNCTION_BUSY() {
        return (int)170L;
    }
    public static int WN_WINDOWS_ERROR() {
        return (int)59L;
    }
    public static int WN_OUT_OF_MEMORY() {
        return (int)8L;
    }
    public static int WN_NO_NETWORK() {
        return (int)1222L;
    }
    public static int WN_EXTENDED_ERROR() {
        return (int)1208L;
    }
    public static int WN_BAD_LEVEL() {
        return (int)124L;
    }
    public static int WN_BAD_HANDLE() {
        return (int)6L;
    }
    public static int WN_NOT_INITIALIZING() {
        return (int)1247L;
    }
    public static int WN_NO_MORE_DEVICES() {
        return (int)1248L;
    }
    public static int WN_NOT_CONNECTED() {
        return (int)2250L;
    }
    public static int WN_OPEN_FILES() {
        return (int)2401L;
    }
    public static int WN_DEVICE_IN_USE() {
        return (int)2404L;
    }
    public static int WN_BAD_NETNAME() {
        return (int)67L;
    }
    public static int WN_BAD_LOCALNAME() {
        return (int)1200L;
    }
    public static int WN_ALREADY_CONNECTED() {
        return (int)85L;
    }
    public static int WN_DEVICE_ERROR() {
        return (int)31L;
    }
    public static int WN_CONNECTION_CLOSED() {
        return (int)1201L;
    }
    public static int WN_NO_NET_OR_BAD_PATH() {
        return (int)1203L;
    }
    public static int WN_BAD_PROVIDER() {
        return (int)1204L;
    }
    public static int WN_CANNOT_OPEN_PROFILE() {
        return (int)1205L;
    }
    public static int WN_BAD_PROFILE() {
        return (int)1206L;
    }
    public static int WN_BAD_DEV_TYPE() {
        return (int)66L;
    }
    public static int WN_DEVICE_ALREADY_REMEMBERED() {
        return (int)1202L;
    }
    public static int WN_CONNECTED_OTHER_PASSWORD() {
        return (int)2108L;
    }
    public static int WN_CONNECTED_OTHER_PASSWORD_DEFAULT() {
        return (int)2109L;
    }
    public static int WN_NO_MORE_ENTRIES() {
        return (int)259L;
    }
    public static int WN_NOT_CONTAINER() {
        return (int)1207L;
    }
    public static int WN_NOT_AUTHENTICATED() {
        return (int)1244L;
    }
    public static int WN_NOT_LOGGED_ON() {
        return (int)1245L;
    }
    public static int WN_NOT_VALIDATED() {
        return (int)1311L;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASEW() {
        return constants$814.SERVICES_ACTIVE_DATABASEW$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASEW() {
        return constants$814.SERVICES_FAILED_DATABASEW$SEGMENT;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASEA() {
        return constants$815.SERVICES_ACTIVE_DATABASEA$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASEA() {
        return constants$815.SERVICES_FAILED_DATABASEA$SEGMENT;
    }
    public static short SC_GROUP_IDENTIFIERW() {
        return (short)43L;
    }
    public static int SC_GROUP_IDENTIFIERA() {
        return (int)43L;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASE() {
        return constants$815.SERVICES_ACTIVE_DATABASE$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASE() {
        return constants$815.SERVICES_FAILED_DATABASE$SEGMENT;
    }
    public static int SC_GROUP_IDENTIFIER() {
        return (int)43L;
    }
    public static int SERVICE_NO_CHANGE() {
        return (int)4294967295L;
    }
    public static int SERVICE_STATE_ALL() {
        return (int)3L;
    }
    public static int SC_MANAGER_ALL_ACCESS() {
        return (int)983103L;
    }
    public static int SERVICE_ALL_ACCESS() {
        return (int)983551L;
    }
    public static int SERVICE_NOTIFY_STATUS_CHANGE() {
        return (int)2L;
    }
    public static int SERVICE_STOP_REASON_FLAG_MAX() {
        return (int)2147483648L;
    }
    public static int SERVICE_SID_TYPE_RESTRICTED() {
        return (int)3L;
    }
    public static MemorySegment SERVICE_TRIGGER_STARTED_ARGUMENT() {
        return constants$815.SERVICE_TRIGGER_STARTED_ARGUMENT$SEGMENT;
    }
    public static MemorySegment SC_AGGREGATE_STORAGE_KEY() {
        return constants$815.SC_AGGREGATE_STORAGE_KEY$SEGMENT;
    }
    public static int MDM_MASK_PROTOCOLINFO() {
        return (int)268369920L;
    }
    public static int MDM_SHIFT_PROTOCOLINFO() {
        return (int)16L;
    }
    public static int MDM_MASK_EXTENDEDINFO() {
        return (int)268431360L;
    }
    public static int MDM_SHIFT_EXTENDEDINFO() {
        return (int)12L;
    }
    public static int MDM_MASK_HDLCPPP_AUTH() {
        return (int)56L;
    }
    public static int MDM_MASK_HDLCPPP_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_64K() {
        return (int)1114112L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_56K() {
        return (int)2162688L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K() {
        return (int)136380416L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_PAP() {
        return (int)153157632L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_CHAP() {
        return (int)161546240L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_MSCHAP() {
        return (int)169934848L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K() {
        return (int)135331840L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_PAP() {
        return (int)152109056L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_CHAP() {
        return (int)160497664L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_MSCHAP() {
        return (int)168886272L;
    }
    public static int MDM_MASK_V120_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_V120_64K() {
        return (int)68485120L;
    }
    public static int MDM_PROTOCOL_V120_56K() {
        return (int)69533696L;
    }
    public static int MDM_PROTOCOL_V120_112K() {
        return (int)136642560L;
    }
    public static int MDM_PROTOCOL_V120_128K() {
        return (int)135593984L;
    }
    public static int MDM_PROTOCOL_X75_64K() {
        return (int)1245184L;
    }
    public static int MDM_PROTOCOL_X75_128K() {
        return (int)2293760L;
    }
    public static int MDM_PROTOCOL_X75_T_70() {
        return (int)3342336L;
    }
    public static int MDM_PROTOCOL_X75_BTX() {
        return (int)4390912L;
    }
    public static int MDM_PROTOCOL_V110_1DOT2K() {
        return (int)1310720L;
    }
    public static int MDM_PROTOCOL_V110_2DOT4K() {
        return (int)2359296L;
    }
    public static int MDM_PROTOCOL_V110_4DOT8K() {
        return (int)3407872L;
    }
    public static int MDM_PROTOCOL_V110_9DOT6K() {
        return (int)4456448L;
    }
    public static int MDM_PROTOCOL_V110_12DOT0K() {
        return (int)5505024L;
    }
    public static int MDM_PROTOCOL_V110_14DOT4K() {
        return (int)6553600L;
    }
    public static int MDM_PROTOCOL_V110_19DOT2K() {
        return (int)7602176L;
    }
    public static int MDM_PROTOCOL_V110_28DOT8K() {
        return (int)8650752L;
    }
    public static int MDM_PROTOCOL_V110_38DOT4K() {
        return (int)9699328L;
    }
    public static int MDM_PROTOCOL_V110_57DOT6K() {
        return (int)10747904L;
    }
    public static int MDM_MASK_AUTO_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_AUTO_1CH() {
        return (int)67502080L;
    }
    public static int MDM_PROTOCOL_AUTO_2CH() {
        return (int)134610944L;
    }
    public static int MDM_PROTOCOL_ANALOG_RLP() {
        return (int)458752L;
    }
    public static int MDM_PROTOCOL_ANALOG_NRLP() {
        return (int)1507328L;
    }
    public static int MDM_PROTOCOL_ANALOG_V34() {
        return (int)2555904L;
    }
    public static int MDM_PROTOCOL_GPRS() {
        return (int)524288L;
    }
    public static int MDM_PROTOCOL_PIAFS_INCOMING() {
        return (int)589824L;
    }
    public static int MDM_PROTOCOL_PIAFS_OUTGOING() {
        return (int)1638400L;
    }
    public static int ISC_SHOWUICOMPOSITIONWINDOW() {
        return (int)2147483648L;
    }
    public static int ISC_SHOWUIALL() {
        return (int)3221225487L;
    }
    public static int IGP_GETIMEVERSION() {
        return (int)4294967292L;
    }
    public static int SCS_SETSTR() {
        return (int)9L;
    }
    public static int SCS_CHANGEATTR() {
        return (int)18L;
    }
    public static int SCS_CHANGECLAUSE() {
        return (int)36L;
    }
    public static int IME_CMODE_CHINESE() {
        return (int)1L;
    }
    public static int IME_CMODE_HANGUL() {
        return (int)1L;
    }
    public static int IME_CMODE_JAPANESE() {
        return (int)1L;
    }
    public static int IME_CMODE_HANGEUL() {
        return (int)1L;
    }
    public static int IME_CMODE_RESERVED() {
        return (int)4026531840L;
    }
    public static int IMM_ERROR_NODATA() {
        return (int)-1L;
    }
    public static int IMM_ERROR_GENERAL() {
        return (int)-2L;
    }
    public static int IME_REGWORD_STYLE_USER_FIRST() {
        return (int)2147483648L;
    }
    public static int IME_REGWORD_STYLE_USER_LAST() {
        return (int)4294967295L;
    }
    public static int IMFS_GRAYED() {
        return (int)3L;
    }
    public static int IMFS_DISABLED() {
        return (int)3L;
    }
    public static int IMFS_CHECKED() {
        return (int)8L;
    }
    public static int IMFS_HILITE() {
        return (int)128L;
    }
    public static int IMFS_ENABLED() {
        return (int)0L;
    }
    public static int IMFS_UNCHECKED() {
        return (int)0L;
    }
    public static int IMFS_UNHILITE() {
        return (int)0L;
    }
    public static int IMFS_DEFAULT() {
        return (int)4096L;
    }
    public static int GL_CLIENT_ALL_ATTRIB_BITS() {
        return (int)4294967295L;
    }
    public static int GL_DOUBLE_EXT() {
        return (int)5130L;
    }
    public static int GL_LOGIC_OP() {
        return (int)3057L;
    }
    public static int GL_TEXTURE_COMPONENTS() {
        return (int)4099L;
    }
    public static int GLU_TRUE() {
        return (int)1L;
    }
    public static int GLU_FALSE() {
        return (int)0L;
    }
    public static double GLU_TESS_MAX_COORD() {
        return 1.0E150d;
    }
    public static int GLU_TESS_MISSING_BEGIN_POLYGON() {
        return (int)100151L;
    }
    public static int GLU_TESS_MISSING_BEGIN_CONTOUR() {
        return (int)100152L;
    }
    public static int GLU_TESS_MISSING_END_POLYGON() {
        return (int)100153L;
    }
    public static int GLU_TESS_MISSING_END_CONTOUR() {
        return (int)100154L;
    }
    public static int GLU_TESS_COORD_TOO_LARGE() {
        return (int)100155L;
    }
    public static int GLU_TESS_NEED_COMBINE_CALLBACK() {
        return (int)100156L;
    }
    public static int GLU_BEGIN() {
        return (int)100100L;
    }
    public static int GLU_VERTEX() {
        return (int)100101L;
    }
    public static int GLU_END() {
        return (int)100102L;
    }
    public static int GLU_ERROR() {
        return (int)100103L;
    }
    public static int GLU_EDGE_FLAG() {
        return (int)100104L;
    }
    public static MemoryAddress GLUT_STROKE_ROMAN() {
        return constants$816.GLUT_STROKE_ROMAN$ADDR;
    }
    public static MemoryAddress GLUT_STROKE_MONO_ROMAN() {
        return constants$816.GLUT_STROKE_MONO_ROMAN$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_9_BY_15() {
        return constants$816.GLUT_BITMAP_9_BY_15$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_8_BY_13() {
        return constants$816.GLUT_BITMAP_8_BY_13$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_TIMES_ROMAN_10() {
        return constants$816.GLUT_BITMAP_TIMES_ROMAN_10$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_TIMES_ROMAN_24() {
        return constants$816.GLUT_BITMAP_TIMES_ROMAN_24$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_HELVETICA_10() {
        return constants$817.GLUT_BITMAP_HELVETICA_10$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_HELVETICA_12() {
        return constants$817.GLUT_BITMAP_HELVETICA_12$ADDR;
    }
    public static MemoryAddress GLUT_BITMAP_HELVETICA_18() {
        return constants$817.GLUT_BITMAP_HELVETICA_18$ADDR;
    }
    public static int _MAX_ITOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    public static int _MAX_ITOSTR_BASE10_COUNT() {
        return (int)12L;
    }
    public static int _MAX_ITOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    public static int _MAX_ITOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    public static int _MAX_LTOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    public static int _MAX_LTOSTR_BASE10_COUNT() {
        return (int)12L;
    }
    public static int _MAX_LTOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    public static int _MAX_LTOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    public static int _MAX_ULTOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    public static int _MAX_ULTOSTR_BASE10_COUNT() {
        return (int)11L;
    }
    public static int _MAX_ULTOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    public static int _MAX_ULTOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    public static int _MAX_I64TOSTR_BASE16_COUNT() {
        return (int)17L;
    }
    public static int _MAX_I64TOSTR_BASE10_COUNT() {
        return (int)21L;
    }
    public static int _MAX_I64TOSTR_BASE8_COUNT() {
        return (int)23L;
    }
    public static int _MAX_I64TOSTR_BASE2_COUNT() {
        return (int)65L;
    }
    public static int _MAX_U64TOSTR_BASE16_COUNT() {
        return (int)17L;
    }
    public static int _MAX_U64TOSTR_BASE10_COUNT() {
        return (int)21L;
    }
    public static int _MAX_U64TOSTR_BASE8_COUNT() {
        return (int)23L;
    }
    public static int _MAX_U64TOSTR_BASE2_COUNT() {
        return (int)65L;
    }
    public static int SCHAR_MIN() {
        return (int)-128L;
    }
    public static int CHAR_MIN() {
        return (int)-128L;
    }
    public static int CHAR_MAX() {
        return (int)127L;
    }
    public static int SHRT_MIN() {
        return (int)-32768L;
    }
    public static int INT_MIN() {
        return (int)-2147483648L;
    }
    public static int UINT_MAX() {
        return (int)4294967295L;
    }
    public static int LONG_MIN() {
        return (int)-2147483648L;
    }
    public static int LONG_MAX() {
        return (int)2147483647L;
    }
    public static int ULONG_MAX() {
        return (int)4294967295L;
    }
    public static long LLONG_MAX() {
        return 9223372036854775807L;
    }
    public static long LLONG_MIN() {
        return -9223372036854775808L;
    }
    public static long ULLONG_MAX() {
        return -1L;
    }
    public static int _I8_MIN() {
        return (int)-128L;
    }
    public static byte _I8_MAX() {
        return (byte)127L;
    }
    public static byte _UI8_MAX() {
        return (byte)255L;
    }
    public static int _I16_MIN() {
        return (int)-32768L;
    }
    public static short _I16_MAX() {
        return (short)32767L;
    }
    public static short _UI16_MAX() {
        return (short)65535L;
    }
    public static int _I32_MIN() {
        return (int)-2147483648L;
    }
    public static int _I32_MAX() {
        return (int)2147483647L;
    }
    public static int _UI32_MAX() {
        return (int)4294967295L;
    }
    public static long _I64_MIN() {
        return -9223372036854775808L;
    }
    public static long _I64_MAX() {
        return 9223372036854775807L;
    }
    public static long _UI64_MAX() {
        return -1L;
    }
    public static long SIZE_MAX() {
        return -1L;
    }
    public static long RSIZE_MAX() {
        return 9223372036854775807L;
    }
    public static long LONG_LONG_MAX() {
        return 9223372036854775807L;
    }
    public static long LONG_LONG_MIN() {
        return -9223372036854775808L;
    }
    public static long ULONG_LONG_MAX() {
        return -1L;
    }
    public static int _CVTBUFSIZE() {
        return (int)349L;
    }
}


