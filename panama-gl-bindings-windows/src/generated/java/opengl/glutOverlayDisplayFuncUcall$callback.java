// Generated by jextract

package opengl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface glutOverlayDisplayFuncUcall$callback {

    void apply(java.lang.foreign.MemoryAddress _x0);
    static MemorySegment allocate(glutOverlayDisplayFuncUcall$callback fi, MemorySession session) {
        return RuntimeHelper.upcallStub(glutOverlayDisplayFuncUcall$callback.class, fi, constants$807.glutOverlayDisplayFuncUcall$callback$FUNC, session);
    }
    static glutOverlayDisplayFuncUcall$callback ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress __x0) -> {
            try {
                constants$808.glutOverlayDisplayFuncUcall$callback$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)__x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


