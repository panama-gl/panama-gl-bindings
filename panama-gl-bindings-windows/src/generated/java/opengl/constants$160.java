// Generated by jextract

package opengl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$160 {

    static final FunctionDescriptor RaiseFailFastException$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle RaiseFailFastException$MH = RuntimeHelper.downcallHandle(
        "RaiseFailFastException",
        constants$160.RaiseFailFastException$FUNC
    );
    static final FunctionDescriptor FatalAppExitA$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FatalAppExitA$MH = RuntimeHelper.downcallHandle(
        "FatalAppExitA",
        constants$160.FatalAppExitA$FUNC
    );
    static final FunctionDescriptor FatalAppExitW$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FatalAppExitW$MH = RuntimeHelper.downcallHandle(
        "FatalAppExitW",
        constants$160.FatalAppExitW$FUNC
    );
    static final FunctionDescriptor GetThreadErrorMode$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle GetThreadErrorMode$MH = RuntimeHelper.downcallHandle(
        "GetThreadErrorMode",
        constants$160.GetThreadErrorMode$FUNC
    );
    static final FunctionDescriptor SetThreadErrorMode$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetThreadErrorMode$MH = RuntimeHelper.downcallHandle(
        "SetThreadErrorMode",
        constants$160.SetThreadErrorMode$FUNC
    );
    static final FunctionDescriptor TerminateProcessOnMemoryExhaustion$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle TerminateProcessOnMemoryExhaustion$MH = RuntimeHelper.downcallHandle(
        "TerminateProcessOnMemoryExhaustion",
        constants$160.TerminateProcessOnMemoryExhaustion$FUNC
    );
}


