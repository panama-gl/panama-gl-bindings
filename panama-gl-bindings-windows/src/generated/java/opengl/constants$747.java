// Generated by jextract

package opengl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$747 {

    static final FunctionDescriptor _aligned_recalloc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle _aligned_recalloc$MH = RuntimeHelper.downcallHandle(
        "_aligned_recalloc",
        constants$747._aligned_recalloc$FUNC
    );
    static final FunctionDescriptor _CoreCrtSecureSearchSortCompareFunction$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _CoreCrtSecureSearchSortCompareFunction$MH = RuntimeHelper.downcallHandle(
        constants$747._CoreCrtSecureSearchSortCompareFunction$FUNC
    );
    static final FunctionDescriptor _CoreCrtNonSecureSearchSortCompareFunction$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _CoreCrtNonSecureSearchSortCompareFunction$MH = RuntimeHelper.downcallHandle(
        constants$747._CoreCrtNonSecureSearchSortCompareFunction$FUNC
    );
    static final FunctionDescriptor bsearch_s$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle bsearch_s$MH = RuntimeHelper.downcallHandle(
        "bsearch_s",
        constants$747.bsearch_s$FUNC
    );
}


