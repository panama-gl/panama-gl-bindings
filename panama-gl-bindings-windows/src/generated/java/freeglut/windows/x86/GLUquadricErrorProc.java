// Generated by jextract

package freeglut.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface GLUquadricErrorProc {

    void apply(int _x0);
    static MemorySegment allocate(GLUquadricErrorProc fi, MemorySession session) {
        return RuntimeHelper.upcallStub(GLUquadricErrorProc.class, fi, constants$710.GLUquadricErrorProc$FUNC, session);
    }
    static GLUquadricErrorProc ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int __x0) -> {
            try {
                constants$710.GLUquadricErrorProc$MH.invokeExact((Addressable)symbol, __x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


