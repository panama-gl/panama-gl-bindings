// Generated by jextract

package freeglut.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$678 {

    static final FunctionDescriptor glRasterPos4fv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glRasterPos4fv$MH = RuntimeHelper.downcallHandle(
        "glRasterPos4fv",
        constants$678.glRasterPos4fv$FUNC
    );
    static final FunctionDescriptor glRasterPos4i$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle glRasterPos4i$MH = RuntimeHelper.downcallHandle(
        "glRasterPos4i",
        constants$678.glRasterPos4i$FUNC
    );
    static final FunctionDescriptor glRasterPos4iv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glRasterPos4iv$MH = RuntimeHelper.downcallHandle(
        "glRasterPos4iv",
        constants$678.glRasterPos4iv$FUNC
    );
    static final FunctionDescriptor glRasterPos4s$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_SHORT$LAYOUT
    );
    static final MethodHandle glRasterPos4s$MH = RuntimeHelper.downcallHandle(
        "glRasterPos4s",
        constants$678.glRasterPos4s$FUNC
    );
    static final FunctionDescriptor glRasterPos4sv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glRasterPos4sv$MH = RuntimeHelper.downcallHandle(
        "glRasterPos4sv",
        constants$678.glRasterPos4sv$FUNC
    );
    static final FunctionDescriptor glReadBuffer$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle glReadBuffer$MH = RuntimeHelper.downcallHandle(
        "glReadBuffer",
        constants$678.glReadBuffer$FUNC
    );
}


