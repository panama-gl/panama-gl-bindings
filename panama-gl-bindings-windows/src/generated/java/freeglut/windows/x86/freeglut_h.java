// Generated by jextract

package freeglut.windows.x86;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class freeglut_h extends freeglut_h_1 {

    freeglut_h() {
        // Should not be called directly
    }
    private static final int SERVICE_STOP_REASON_FLAG_MAX = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define SERVICE_STOP_REASON_FLAG_MAX 2147483648
     * }
     */
    public static int SERVICE_STOP_REASON_FLAG_MAX() {
        return SERVICE_STOP_REASON_FLAG_MAX;
    }
    private static final int SERVICE_SID_TYPE_RESTRICTED = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SERVICE_SID_TYPE_RESTRICTED 3
     * }
     */
    public static int SERVICE_SID_TYPE_RESTRICTED() {
        return SERVICE_SID_TYPE_RESTRICTED;
    }
    /**
     * {@snippet lang=c :
     * #define SERVICE_TRIGGER_STARTED_ARGUMENT "T"
     * }
     */
    public static MemorySegment SERVICE_TRIGGER_STARTED_ARGUMENT() {
        class Holder {
            static final MemorySegment SERVICE_TRIGGER_STARTED_ARGUMENT
                = freeglut_h.LIBRARY_ARENA.allocateFrom("T");
        }
        return Holder.SERVICE_TRIGGER_STARTED_ARGUMENT;
    }
    /**
     * {@snippet lang=c :
     * #define SC_AGGREGATE_STORAGE_KEY "S"
     * }
     */
    public static MemorySegment SC_AGGREGATE_STORAGE_KEY() {
        class Holder {
            static final MemorySegment SC_AGGREGATE_STORAGE_KEY
                = freeglut_h.LIBRARY_ARENA.allocateFrom("S");
        }
        return Holder.SC_AGGREGATE_STORAGE_KEY;
    }
    private static final int MDM_MASK_PROTOCOLINFO = (int)268369920L;
    /**
     * {@snippet lang=c :
     * #define MDM_MASK_PROTOCOLINFO 268369920
     * }
     */
    public static int MDM_MASK_PROTOCOLINFO() {
        return MDM_MASK_PROTOCOLINFO;
    }
    private static final int MDM_SHIFT_PROTOCOLINFO = (int)16L;
    /**
     * {@snippet lang=c :
     * #define MDM_SHIFT_PROTOCOLINFO 16
     * }
     */
    public static int MDM_SHIFT_PROTOCOLINFO() {
        return MDM_SHIFT_PROTOCOLINFO;
    }
    private static final int MDM_MASK_EXTENDEDINFO = (int)268431360L;
    /**
     * {@snippet lang=c :
     * #define MDM_MASK_EXTENDEDINFO 268431360
     * }
     */
    public static int MDM_MASK_EXTENDEDINFO() {
        return MDM_MASK_EXTENDEDINFO;
    }
    private static final int MDM_SHIFT_EXTENDEDINFO = (int)12L;
    /**
     * {@snippet lang=c :
     * #define MDM_SHIFT_EXTENDEDINFO 12
     * }
     */
    public static int MDM_SHIFT_EXTENDEDINFO() {
        return MDM_SHIFT_EXTENDEDINFO;
    }
    private static final int MDM_MASK_HDLCPPP_AUTH = (int)56L;
    /**
     * {@snippet lang=c :
     * #define MDM_MASK_HDLCPPP_AUTH 56
     * }
     */
    public static int MDM_MASK_HDLCPPP_AUTH() {
        return MDM_MASK_HDLCPPP_AUTH;
    }
    private static final int MDM_MASK_HDLCPPP_ML = (int)192L;
    /**
     * {@snippet lang=c :
     * #define MDM_MASK_HDLCPPP_ML 192
     * }
     */
    public static int MDM_MASK_HDLCPPP_ML() {
        return MDM_MASK_HDLCPPP_ML;
    }
    private static final int MDM_PROTOCOL_HDLCPPP_64K = (int)1114112L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_HDLCPPP_64K 1114112
     * }
     */
    public static int MDM_PROTOCOL_HDLCPPP_64K() {
        return MDM_PROTOCOL_HDLCPPP_64K;
    }
    private static final int MDM_PROTOCOL_HDLCPPP_56K = (int)2162688L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_HDLCPPP_56K 2162688
     * }
     */
    public static int MDM_PROTOCOL_HDLCPPP_56K() {
        return MDM_PROTOCOL_HDLCPPP_56K;
    }
    private static final int MDM_PROTOCOL_HDLCPPP_112K = (int)136380416L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_HDLCPPP_112K 136380416
     * }
     */
    public static int MDM_PROTOCOL_HDLCPPP_112K() {
        return MDM_PROTOCOL_HDLCPPP_112K;
    }
    private static final int MDM_PROTOCOL_HDLCPPP_112K_PAP = (int)153157632L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_HDLCPPP_112K_PAP 153157632
     * }
     */
    public static int MDM_PROTOCOL_HDLCPPP_112K_PAP() {
        return MDM_PROTOCOL_HDLCPPP_112K_PAP;
    }
    private static final int MDM_PROTOCOL_HDLCPPP_112K_CHAP = (int)161546240L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_HDLCPPP_112K_CHAP 161546240
     * }
     */
    public static int MDM_PROTOCOL_HDLCPPP_112K_CHAP() {
        return MDM_PROTOCOL_HDLCPPP_112K_CHAP;
    }
    private static final int MDM_PROTOCOL_HDLCPPP_112K_MSCHAP = (int)169934848L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_HDLCPPP_112K_MSCHAP 169934848
     * }
     */
    public static int MDM_PROTOCOL_HDLCPPP_112K_MSCHAP() {
        return MDM_PROTOCOL_HDLCPPP_112K_MSCHAP;
    }
    private static final int MDM_PROTOCOL_HDLCPPP_128K = (int)135331840L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_HDLCPPP_128K 135331840
     * }
     */
    public static int MDM_PROTOCOL_HDLCPPP_128K() {
        return MDM_PROTOCOL_HDLCPPP_128K;
    }
    private static final int MDM_PROTOCOL_HDLCPPP_128K_PAP = (int)152109056L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_HDLCPPP_128K_PAP 152109056
     * }
     */
    public static int MDM_PROTOCOL_HDLCPPP_128K_PAP() {
        return MDM_PROTOCOL_HDLCPPP_128K_PAP;
    }
    private static final int MDM_PROTOCOL_HDLCPPP_128K_CHAP = (int)160497664L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_HDLCPPP_128K_CHAP 160497664
     * }
     */
    public static int MDM_PROTOCOL_HDLCPPP_128K_CHAP() {
        return MDM_PROTOCOL_HDLCPPP_128K_CHAP;
    }
    private static final int MDM_PROTOCOL_HDLCPPP_128K_MSCHAP = (int)168886272L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_HDLCPPP_128K_MSCHAP 168886272
     * }
     */
    public static int MDM_PROTOCOL_HDLCPPP_128K_MSCHAP() {
        return MDM_PROTOCOL_HDLCPPP_128K_MSCHAP;
    }
    private static final int MDM_MASK_V120_ML = (int)192L;
    /**
     * {@snippet lang=c :
     * #define MDM_MASK_V120_ML 192
     * }
     */
    public static int MDM_MASK_V120_ML() {
        return MDM_MASK_V120_ML;
    }
    private static final int MDM_PROTOCOL_V120_64K = (int)68485120L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V120_64K 68485120
     * }
     */
    public static int MDM_PROTOCOL_V120_64K() {
        return MDM_PROTOCOL_V120_64K;
    }
    private static final int MDM_PROTOCOL_V120_56K = (int)69533696L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V120_56K 69533696
     * }
     */
    public static int MDM_PROTOCOL_V120_56K() {
        return MDM_PROTOCOL_V120_56K;
    }
    private static final int MDM_PROTOCOL_V120_112K = (int)136642560L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V120_112K 136642560
     * }
     */
    public static int MDM_PROTOCOL_V120_112K() {
        return MDM_PROTOCOL_V120_112K;
    }
    private static final int MDM_PROTOCOL_V120_128K = (int)135593984L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V120_128K 135593984
     * }
     */
    public static int MDM_PROTOCOL_V120_128K() {
        return MDM_PROTOCOL_V120_128K;
    }
    private static final int MDM_PROTOCOL_X75_64K = (int)1245184L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_X75_64K 1245184
     * }
     */
    public static int MDM_PROTOCOL_X75_64K() {
        return MDM_PROTOCOL_X75_64K;
    }
    private static final int MDM_PROTOCOL_X75_128K = (int)2293760L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_X75_128K 2293760
     * }
     */
    public static int MDM_PROTOCOL_X75_128K() {
        return MDM_PROTOCOL_X75_128K;
    }
    private static final int MDM_PROTOCOL_X75_T_70 = (int)3342336L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_X75_T_70 3342336
     * }
     */
    public static int MDM_PROTOCOL_X75_T_70() {
        return MDM_PROTOCOL_X75_T_70;
    }
    private static final int MDM_PROTOCOL_X75_BTX = (int)4390912L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_X75_BTX 4390912
     * }
     */
    public static int MDM_PROTOCOL_X75_BTX() {
        return MDM_PROTOCOL_X75_BTX;
    }
    private static final int MDM_PROTOCOL_V110_1DOT2K = (int)1310720L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V110_1DOT2K 1310720
     * }
     */
    public static int MDM_PROTOCOL_V110_1DOT2K() {
        return MDM_PROTOCOL_V110_1DOT2K;
    }
    private static final int MDM_PROTOCOL_V110_2DOT4K = (int)2359296L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V110_2DOT4K 2359296
     * }
     */
    public static int MDM_PROTOCOL_V110_2DOT4K() {
        return MDM_PROTOCOL_V110_2DOT4K;
    }
    private static final int MDM_PROTOCOL_V110_4DOT8K = (int)3407872L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V110_4DOT8K 3407872
     * }
     */
    public static int MDM_PROTOCOL_V110_4DOT8K() {
        return MDM_PROTOCOL_V110_4DOT8K;
    }
    private static final int MDM_PROTOCOL_V110_9DOT6K = (int)4456448L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V110_9DOT6K 4456448
     * }
     */
    public static int MDM_PROTOCOL_V110_9DOT6K() {
        return MDM_PROTOCOL_V110_9DOT6K;
    }
    private static final int MDM_PROTOCOL_V110_12DOT0K = (int)5505024L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V110_12DOT0K 5505024
     * }
     */
    public static int MDM_PROTOCOL_V110_12DOT0K() {
        return MDM_PROTOCOL_V110_12DOT0K;
    }
    private static final int MDM_PROTOCOL_V110_14DOT4K = (int)6553600L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V110_14DOT4K 6553600
     * }
     */
    public static int MDM_PROTOCOL_V110_14DOT4K() {
        return MDM_PROTOCOL_V110_14DOT4K;
    }
    private static final int MDM_PROTOCOL_V110_19DOT2K = (int)7602176L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V110_19DOT2K 7602176
     * }
     */
    public static int MDM_PROTOCOL_V110_19DOT2K() {
        return MDM_PROTOCOL_V110_19DOT2K;
    }
    private static final int MDM_PROTOCOL_V110_28DOT8K = (int)8650752L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V110_28DOT8K 8650752
     * }
     */
    public static int MDM_PROTOCOL_V110_28DOT8K() {
        return MDM_PROTOCOL_V110_28DOT8K;
    }
    private static final int MDM_PROTOCOL_V110_38DOT4K = (int)9699328L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V110_38DOT4K 9699328
     * }
     */
    public static int MDM_PROTOCOL_V110_38DOT4K() {
        return MDM_PROTOCOL_V110_38DOT4K;
    }
    private static final int MDM_PROTOCOL_V110_57DOT6K = (int)10747904L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_V110_57DOT6K 10747904
     * }
     */
    public static int MDM_PROTOCOL_V110_57DOT6K() {
        return MDM_PROTOCOL_V110_57DOT6K;
    }
    private static final int MDM_MASK_AUTO_ML = (int)192L;
    /**
     * {@snippet lang=c :
     * #define MDM_MASK_AUTO_ML 192
     * }
     */
    public static int MDM_MASK_AUTO_ML() {
        return MDM_MASK_AUTO_ML;
    }
    private static final int MDM_PROTOCOL_AUTO_1CH = (int)67502080L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_AUTO_1CH 67502080
     * }
     */
    public static int MDM_PROTOCOL_AUTO_1CH() {
        return MDM_PROTOCOL_AUTO_1CH;
    }
    private static final int MDM_PROTOCOL_AUTO_2CH = (int)134610944L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_AUTO_2CH 134610944
     * }
     */
    public static int MDM_PROTOCOL_AUTO_2CH() {
        return MDM_PROTOCOL_AUTO_2CH;
    }
    private static final int MDM_PROTOCOL_ANALOG_RLP = (int)458752L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_ANALOG_RLP 458752
     * }
     */
    public static int MDM_PROTOCOL_ANALOG_RLP() {
        return MDM_PROTOCOL_ANALOG_RLP;
    }
    private static final int MDM_PROTOCOL_ANALOG_NRLP = (int)1507328L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_ANALOG_NRLP 1507328
     * }
     */
    public static int MDM_PROTOCOL_ANALOG_NRLP() {
        return MDM_PROTOCOL_ANALOG_NRLP;
    }
    private static final int MDM_PROTOCOL_ANALOG_V34 = (int)2555904L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_ANALOG_V34 2555904
     * }
     */
    public static int MDM_PROTOCOL_ANALOG_V34() {
        return MDM_PROTOCOL_ANALOG_V34;
    }
    private static final int MDM_PROTOCOL_GPRS = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_GPRS 524288
     * }
     */
    public static int MDM_PROTOCOL_GPRS() {
        return MDM_PROTOCOL_GPRS;
    }
    private static final int MDM_PROTOCOL_PIAFS_INCOMING = (int)589824L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_PIAFS_INCOMING 589824
     * }
     */
    public static int MDM_PROTOCOL_PIAFS_INCOMING() {
        return MDM_PROTOCOL_PIAFS_INCOMING;
    }
    private static final int MDM_PROTOCOL_PIAFS_OUTGOING = (int)1638400L;
    /**
     * {@snippet lang=c :
     * #define MDM_PROTOCOL_PIAFS_OUTGOING 1638400
     * }
     */
    public static int MDM_PROTOCOL_PIAFS_OUTGOING() {
        return MDM_PROTOCOL_PIAFS_OUTGOING;
    }
    private static final int ISC_SHOWUICOMPOSITIONWINDOW = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define ISC_SHOWUICOMPOSITIONWINDOW 2147483648
     * }
     */
    public static int ISC_SHOWUICOMPOSITIONWINDOW() {
        return ISC_SHOWUICOMPOSITIONWINDOW;
    }
    private static final int ISC_SHOWUIALL = (int)3221225487L;
    /**
     * {@snippet lang=c :
     * #define ISC_SHOWUIALL 3221225487
     * }
     */
    public static int ISC_SHOWUIALL() {
        return ISC_SHOWUIALL;
    }
    private static final int IGP_GETIMEVERSION = (int)4294967292L;
    /**
     * {@snippet lang=c :
     * #define IGP_GETIMEVERSION 4294967292
     * }
     */
    public static int IGP_GETIMEVERSION() {
        return IGP_GETIMEVERSION;
    }
    private static final int SCS_SETSTR = (int)9L;
    /**
     * {@snippet lang=c :
     * #define SCS_SETSTR 9
     * }
     */
    public static int SCS_SETSTR() {
        return SCS_SETSTR;
    }
    private static final int SCS_CHANGEATTR = (int)18L;
    /**
     * {@snippet lang=c :
     * #define SCS_CHANGEATTR 18
     * }
     */
    public static int SCS_CHANGEATTR() {
        return SCS_CHANGEATTR;
    }
    private static final int SCS_CHANGECLAUSE = (int)36L;
    /**
     * {@snippet lang=c :
     * #define SCS_CHANGECLAUSE 36
     * }
     */
    public static int SCS_CHANGECLAUSE() {
        return SCS_CHANGECLAUSE;
    }
    private static final int IME_CMODE_CHINESE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define IME_CMODE_CHINESE 1
     * }
     */
    public static int IME_CMODE_CHINESE() {
        return IME_CMODE_CHINESE;
    }
    private static final int IME_CMODE_HANGUL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define IME_CMODE_HANGUL 1
     * }
     */
    public static int IME_CMODE_HANGUL() {
        return IME_CMODE_HANGUL;
    }
    private static final int IME_CMODE_JAPANESE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define IME_CMODE_JAPANESE 1
     * }
     */
    public static int IME_CMODE_JAPANESE() {
        return IME_CMODE_JAPANESE;
    }
    private static final int IME_CMODE_HANGEUL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define IME_CMODE_HANGEUL 1
     * }
     */
    public static int IME_CMODE_HANGEUL() {
        return IME_CMODE_HANGEUL;
    }
    private static final int IME_CMODE_RESERVED = (int)4026531840L;
    /**
     * {@snippet lang=c :
     * #define IME_CMODE_RESERVED 4026531840
     * }
     */
    public static int IME_CMODE_RESERVED() {
        return IME_CMODE_RESERVED;
    }
    private static final int IMM_ERROR_NODATA = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define IMM_ERROR_NODATA -1
     * }
     */
    public static int IMM_ERROR_NODATA() {
        return IMM_ERROR_NODATA;
    }
    private static final int IMM_ERROR_GENERAL = (int)-2L;
    /**
     * {@snippet lang=c :
     * #define IMM_ERROR_GENERAL -2
     * }
     */
    public static int IMM_ERROR_GENERAL() {
        return IMM_ERROR_GENERAL;
    }
    private static final int IME_REGWORD_STYLE_USER_FIRST = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define IME_REGWORD_STYLE_USER_FIRST 2147483648
     * }
     */
    public static int IME_REGWORD_STYLE_USER_FIRST() {
        return IME_REGWORD_STYLE_USER_FIRST;
    }
    private static final int IME_REGWORD_STYLE_USER_LAST = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define IME_REGWORD_STYLE_USER_LAST 4294967295
     * }
     */
    public static int IME_REGWORD_STYLE_USER_LAST() {
        return IME_REGWORD_STYLE_USER_LAST;
    }
    private static final int IMFS_GRAYED = (int)3L;
    /**
     * {@snippet lang=c :
     * #define IMFS_GRAYED 3
     * }
     */
    public static int IMFS_GRAYED() {
        return IMFS_GRAYED;
    }
    private static final int IMFS_DISABLED = (int)3L;
    /**
     * {@snippet lang=c :
     * #define IMFS_DISABLED 3
     * }
     */
    public static int IMFS_DISABLED() {
        return IMFS_DISABLED;
    }
    private static final int IMFS_CHECKED = (int)8L;
    /**
     * {@snippet lang=c :
     * #define IMFS_CHECKED 8
     * }
     */
    public static int IMFS_CHECKED() {
        return IMFS_CHECKED;
    }
    private static final int IMFS_HILITE = (int)128L;
    /**
     * {@snippet lang=c :
     * #define IMFS_HILITE 128
     * }
     */
    public static int IMFS_HILITE() {
        return IMFS_HILITE;
    }
    private static final int IMFS_ENABLED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define IMFS_ENABLED 0
     * }
     */
    public static int IMFS_ENABLED() {
        return IMFS_ENABLED;
    }
    private static final int IMFS_UNCHECKED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define IMFS_UNCHECKED 0
     * }
     */
    public static int IMFS_UNCHECKED() {
        return IMFS_UNCHECKED;
    }
    private static final int IMFS_UNHILITE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define IMFS_UNHILITE 0
     * }
     */
    public static int IMFS_UNHILITE() {
        return IMFS_UNHILITE;
    }
    private static final int IMFS_DEFAULT = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define IMFS_DEFAULT 4096
     * }
     */
    public static int IMFS_DEFAULT() {
        return IMFS_DEFAULT;
    }
    private static final int GL_CLIENT_ALL_ATTRIB_BITS = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define GL_CLIENT_ALL_ATTRIB_BITS 4294967295
     * }
     */
    public static int GL_CLIENT_ALL_ATTRIB_BITS() {
        return GL_CLIENT_ALL_ATTRIB_BITS;
    }
    private static final int GL_DOUBLE_EXT = (int)5130L;
    /**
     * {@snippet lang=c :
     * #define GL_DOUBLE_EXT 5130
     * }
     */
    public static int GL_DOUBLE_EXT() {
        return GL_DOUBLE_EXT;
    }
    private static final int GL_LOGIC_OP = (int)3057L;
    /**
     * {@snippet lang=c :
     * #define GL_LOGIC_OP 3057
     * }
     */
    public static int GL_LOGIC_OP() {
        return GL_LOGIC_OP;
    }
    private static final int GL_TEXTURE_COMPONENTS = (int)4099L;
    /**
     * {@snippet lang=c :
     * #define GL_TEXTURE_COMPONENTS 4099
     * }
     */
    public static int GL_TEXTURE_COMPONENTS() {
        return GL_TEXTURE_COMPONENTS;
    }
    private static final int GLU_TRUE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GLU_TRUE 1
     * }
     */
    public static int GLU_TRUE() {
        return GLU_TRUE;
    }
    private static final int GLU_FALSE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define GLU_FALSE 0
     * }
     */
    public static int GLU_FALSE() {
        return GLU_FALSE;
    }
    private static final double GLU_TESS_MAX_COORD = 1.0E150d;
    /**
     * {@snippet lang=c :
     * #define GLU_TESS_MAX_COORD 1.0E150
     * }
     */
    public static double GLU_TESS_MAX_COORD() {
        return GLU_TESS_MAX_COORD;
    }
    private static final int GLU_TESS_MISSING_BEGIN_POLYGON = (int)100151L;
    /**
     * {@snippet lang=c :
     * #define GLU_TESS_MISSING_BEGIN_POLYGON 100151
     * }
     */
    public static int GLU_TESS_MISSING_BEGIN_POLYGON() {
        return GLU_TESS_MISSING_BEGIN_POLYGON;
    }
    private static final int GLU_TESS_MISSING_BEGIN_CONTOUR = (int)100152L;
    /**
     * {@snippet lang=c :
     * #define GLU_TESS_MISSING_BEGIN_CONTOUR 100152
     * }
     */
    public static int GLU_TESS_MISSING_BEGIN_CONTOUR() {
        return GLU_TESS_MISSING_BEGIN_CONTOUR;
    }
    private static final int GLU_TESS_MISSING_END_POLYGON = (int)100153L;
    /**
     * {@snippet lang=c :
     * #define GLU_TESS_MISSING_END_POLYGON 100153
     * }
     */
    public static int GLU_TESS_MISSING_END_POLYGON() {
        return GLU_TESS_MISSING_END_POLYGON;
    }
    private static final int GLU_TESS_MISSING_END_CONTOUR = (int)100154L;
    /**
     * {@snippet lang=c :
     * #define GLU_TESS_MISSING_END_CONTOUR 100154
     * }
     */
    public static int GLU_TESS_MISSING_END_CONTOUR() {
        return GLU_TESS_MISSING_END_CONTOUR;
    }
    private static final int GLU_TESS_COORD_TOO_LARGE = (int)100155L;
    /**
     * {@snippet lang=c :
     * #define GLU_TESS_COORD_TOO_LARGE 100155
     * }
     */
    public static int GLU_TESS_COORD_TOO_LARGE() {
        return GLU_TESS_COORD_TOO_LARGE;
    }
    private static final int GLU_TESS_NEED_COMBINE_CALLBACK = (int)100156L;
    /**
     * {@snippet lang=c :
     * #define GLU_TESS_NEED_COMBINE_CALLBACK 100156
     * }
     */
    public static int GLU_TESS_NEED_COMBINE_CALLBACK() {
        return GLU_TESS_NEED_COMBINE_CALLBACK;
    }
    private static final int GLU_BEGIN = (int)100100L;
    /**
     * {@snippet lang=c :
     * #define GLU_BEGIN 100100
     * }
     */
    public static int GLU_BEGIN() {
        return GLU_BEGIN;
    }
    private static final int GLU_VERTEX = (int)100101L;
    /**
     * {@snippet lang=c :
     * #define GLU_VERTEX 100101
     * }
     */
    public static int GLU_VERTEX() {
        return GLU_VERTEX;
    }
    private static final int GLU_END = (int)100102L;
    /**
     * {@snippet lang=c :
     * #define GLU_END 100102
     * }
     */
    public static int GLU_END() {
        return GLU_END;
    }
    private static final int GLU_ERROR = (int)100103L;
    /**
     * {@snippet lang=c :
     * #define GLU_ERROR 100103
     * }
     */
    public static int GLU_ERROR() {
        return GLU_ERROR;
    }
    private static final int GLU_EDGE_FLAG = (int)100104L;
    /**
     * {@snippet lang=c :
     * #define GLU_EDGE_FLAG 100104
     * }
     */
    public static int GLU_EDGE_FLAG() {
        return GLU_EDGE_FLAG;
    }
    private static final MemorySegment GLUT_STROKE_ROMAN = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define GLUT_STROKE_ROMAN (void*) 0
     * }
     */
    public static MemorySegment GLUT_STROKE_ROMAN() {
        return GLUT_STROKE_ROMAN;
    }
    private static final MemorySegment GLUT_STROKE_MONO_ROMAN = MemorySegment.ofAddress(1L);
    /**
     * {@snippet lang=c :
     * #define GLUT_STROKE_MONO_ROMAN (void*) 1
     * }
     */
    public static MemorySegment GLUT_STROKE_MONO_ROMAN() {
        return GLUT_STROKE_MONO_ROMAN;
    }
    private static final MemorySegment GLUT_BITMAP_9_BY_15 = MemorySegment.ofAddress(2L);
    /**
     * {@snippet lang=c :
     * #define GLUT_BITMAP_9_BY_15 (void*) 2
     * }
     */
    public static MemorySegment GLUT_BITMAP_9_BY_15() {
        return GLUT_BITMAP_9_BY_15;
    }
    private static final MemorySegment GLUT_BITMAP_8_BY_13 = MemorySegment.ofAddress(3L);
    /**
     * {@snippet lang=c :
     * #define GLUT_BITMAP_8_BY_13 (void*) 3
     * }
     */
    public static MemorySegment GLUT_BITMAP_8_BY_13() {
        return GLUT_BITMAP_8_BY_13;
    }
    private static final MemorySegment GLUT_BITMAP_TIMES_ROMAN_10 = MemorySegment.ofAddress(4L);
    /**
     * {@snippet lang=c :
     * #define GLUT_BITMAP_TIMES_ROMAN_10 (void*) 4
     * }
     */
    public static MemorySegment GLUT_BITMAP_TIMES_ROMAN_10() {
        return GLUT_BITMAP_TIMES_ROMAN_10;
    }
    private static final MemorySegment GLUT_BITMAP_TIMES_ROMAN_24 = MemorySegment.ofAddress(5L);
    /**
     * {@snippet lang=c :
     * #define GLUT_BITMAP_TIMES_ROMAN_24 (void*) 5
     * }
     */
    public static MemorySegment GLUT_BITMAP_TIMES_ROMAN_24() {
        return GLUT_BITMAP_TIMES_ROMAN_24;
    }
    private static final MemorySegment GLUT_BITMAP_HELVETICA_10 = MemorySegment.ofAddress(6L);
    /**
     * {@snippet lang=c :
     * #define GLUT_BITMAP_HELVETICA_10 (void*) 6
     * }
     */
    public static MemorySegment GLUT_BITMAP_HELVETICA_10() {
        return GLUT_BITMAP_HELVETICA_10;
    }
    private static final MemorySegment GLUT_BITMAP_HELVETICA_12 = MemorySegment.ofAddress(7L);
    /**
     * {@snippet lang=c :
     * #define GLUT_BITMAP_HELVETICA_12 (void*) 7
     * }
     */
    public static MemorySegment GLUT_BITMAP_HELVETICA_12() {
        return GLUT_BITMAP_HELVETICA_12;
    }
    private static final MemorySegment GLUT_BITMAP_HELVETICA_18 = MemorySegment.ofAddress(8L);
    /**
     * {@snippet lang=c :
     * #define GLUT_BITMAP_HELVETICA_18 (void*) 8
     * }
     */
    public static MemorySegment GLUT_BITMAP_HELVETICA_18() {
        return GLUT_BITMAP_HELVETICA_18;
    }
    private static final int _MAX_ITOSTR_BASE16_COUNT = (int)9L;
    /**
     * {@snippet lang=c :
     * #define _MAX_ITOSTR_BASE16_COUNT 9
     * }
     */
    public static int _MAX_ITOSTR_BASE16_COUNT() {
        return _MAX_ITOSTR_BASE16_COUNT;
    }
    private static final int _MAX_ITOSTR_BASE10_COUNT = (int)12L;
    /**
     * {@snippet lang=c :
     * #define _MAX_ITOSTR_BASE10_COUNT 12
     * }
     */
    public static int _MAX_ITOSTR_BASE10_COUNT() {
        return _MAX_ITOSTR_BASE10_COUNT;
    }
    private static final int _MAX_ITOSTR_BASE8_COUNT = (int)12L;
    /**
     * {@snippet lang=c :
     * #define _MAX_ITOSTR_BASE8_COUNT 12
     * }
     */
    public static int _MAX_ITOSTR_BASE8_COUNT() {
        return _MAX_ITOSTR_BASE8_COUNT;
    }
    private static final int _MAX_ITOSTR_BASE2_COUNT = (int)33L;
    /**
     * {@snippet lang=c :
     * #define _MAX_ITOSTR_BASE2_COUNT 33
     * }
     */
    public static int _MAX_ITOSTR_BASE2_COUNT() {
        return _MAX_ITOSTR_BASE2_COUNT;
    }
    private static final int _MAX_LTOSTR_BASE16_COUNT = (int)9L;
    /**
     * {@snippet lang=c :
     * #define _MAX_LTOSTR_BASE16_COUNT 9
     * }
     */
    public static int _MAX_LTOSTR_BASE16_COUNT() {
        return _MAX_LTOSTR_BASE16_COUNT;
    }
    private static final int _MAX_LTOSTR_BASE10_COUNT = (int)12L;
    /**
     * {@snippet lang=c :
     * #define _MAX_LTOSTR_BASE10_COUNT 12
     * }
     */
    public static int _MAX_LTOSTR_BASE10_COUNT() {
        return _MAX_LTOSTR_BASE10_COUNT;
    }
    private static final int _MAX_LTOSTR_BASE8_COUNT = (int)12L;
    /**
     * {@snippet lang=c :
     * #define _MAX_LTOSTR_BASE8_COUNT 12
     * }
     */
    public static int _MAX_LTOSTR_BASE8_COUNT() {
        return _MAX_LTOSTR_BASE8_COUNT;
    }
    private static final int _MAX_LTOSTR_BASE2_COUNT = (int)33L;
    /**
     * {@snippet lang=c :
     * #define _MAX_LTOSTR_BASE2_COUNT 33
     * }
     */
    public static int _MAX_LTOSTR_BASE2_COUNT() {
        return _MAX_LTOSTR_BASE2_COUNT;
    }
    private static final int _MAX_ULTOSTR_BASE16_COUNT = (int)9L;
    /**
     * {@snippet lang=c :
     * #define _MAX_ULTOSTR_BASE16_COUNT 9
     * }
     */
    public static int _MAX_ULTOSTR_BASE16_COUNT() {
        return _MAX_ULTOSTR_BASE16_COUNT;
    }
    private static final int _MAX_ULTOSTR_BASE10_COUNT = (int)11L;
    /**
     * {@snippet lang=c :
     * #define _MAX_ULTOSTR_BASE10_COUNT 11
     * }
     */
    public static int _MAX_ULTOSTR_BASE10_COUNT() {
        return _MAX_ULTOSTR_BASE10_COUNT;
    }
    private static final int _MAX_ULTOSTR_BASE8_COUNT = (int)12L;
    /**
     * {@snippet lang=c :
     * #define _MAX_ULTOSTR_BASE8_COUNT 12
     * }
     */
    public static int _MAX_ULTOSTR_BASE8_COUNT() {
        return _MAX_ULTOSTR_BASE8_COUNT;
    }
    private static final int _MAX_ULTOSTR_BASE2_COUNT = (int)33L;
    /**
     * {@snippet lang=c :
     * #define _MAX_ULTOSTR_BASE2_COUNT 33
     * }
     */
    public static int _MAX_ULTOSTR_BASE2_COUNT() {
        return _MAX_ULTOSTR_BASE2_COUNT;
    }
    private static final int _MAX_I64TOSTR_BASE16_COUNT = (int)17L;
    /**
     * {@snippet lang=c :
     * #define _MAX_I64TOSTR_BASE16_COUNT 17
     * }
     */
    public static int _MAX_I64TOSTR_BASE16_COUNT() {
        return _MAX_I64TOSTR_BASE16_COUNT;
    }
    private static final int _MAX_I64TOSTR_BASE10_COUNT = (int)21L;
    /**
     * {@snippet lang=c :
     * #define _MAX_I64TOSTR_BASE10_COUNT 21
     * }
     */
    public static int _MAX_I64TOSTR_BASE10_COUNT() {
        return _MAX_I64TOSTR_BASE10_COUNT;
    }
    private static final int _MAX_I64TOSTR_BASE8_COUNT = (int)23L;
    /**
     * {@snippet lang=c :
     * #define _MAX_I64TOSTR_BASE8_COUNT 23
     * }
     */
    public static int _MAX_I64TOSTR_BASE8_COUNT() {
        return _MAX_I64TOSTR_BASE8_COUNT;
    }
    private static final int _MAX_I64TOSTR_BASE2_COUNT = (int)65L;
    /**
     * {@snippet lang=c :
     * #define _MAX_I64TOSTR_BASE2_COUNT 65
     * }
     */
    public static int _MAX_I64TOSTR_BASE2_COUNT() {
        return _MAX_I64TOSTR_BASE2_COUNT;
    }
    private static final int _MAX_U64TOSTR_BASE16_COUNT = (int)17L;
    /**
     * {@snippet lang=c :
     * #define _MAX_U64TOSTR_BASE16_COUNT 17
     * }
     */
    public static int _MAX_U64TOSTR_BASE16_COUNT() {
        return _MAX_U64TOSTR_BASE16_COUNT;
    }
    private static final int _MAX_U64TOSTR_BASE10_COUNT = (int)21L;
    /**
     * {@snippet lang=c :
     * #define _MAX_U64TOSTR_BASE10_COUNT 21
     * }
     */
    public static int _MAX_U64TOSTR_BASE10_COUNT() {
        return _MAX_U64TOSTR_BASE10_COUNT;
    }
    private static final int _MAX_U64TOSTR_BASE8_COUNT = (int)23L;
    /**
     * {@snippet lang=c :
     * #define _MAX_U64TOSTR_BASE8_COUNT 23
     * }
     */
    public static int _MAX_U64TOSTR_BASE8_COUNT() {
        return _MAX_U64TOSTR_BASE8_COUNT;
    }
    private static final int _MAX_U64TOSTR_BASE2_COUNT = (int)65L;
    /**
     * {@snippet lang=c :
     * #define _MAX_U64TOSTR_BASE2_COUNT 65
     * }
     */
    public static int _MAX_U64TOSTR_BASE2_COUNT() {
        return _MAX_U64TOSTR_BASE2_COUNT;
    }
    private static final int SCHAR_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define SCHAR_MIN -128
     * }
     */
    public static int SCHAR_MIN() {
        return SCHAR_MIN;
    }
    private static final int CHAR_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define CHAR_MIN -128
     * }
     */
    public static int CHAR_MIN() {
        return CHAR_MIN;
    }
    private static final int CHAR_MAX = (int)127L;
    /**
     * {@snippet lang=c :
     * #define CHAR_MAX 127
     * }
     */
    public static int CHAR_MAX() {
        return CHAR_MAX;
    }
    private static final int SHRT_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define SHRT_MIN -32768
     * }
     */
    public static int SHRT_MIN() {
        return SHRT_MIN;
    }
    private static final int INT_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define INT_MIN -2147483648
     * }
     */
    public static int INT_MIN() {
        return INT_MIN;
    }
    private static final int UINT_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define UINT_MAX 4294967295
     * }
     */
    public static int UINT_MAX() {
        return UINT_MAX;
    }
    private static final int LONG_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define LONG_MIN -2147483648
     * }
     */
    public static int LONG_MIN() {
        return LONG_MIN;
    }
    private static final int LONG_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define LONG_MAX 2147483647
     * }
     */
    public static int LONG_MAX() {
        return LONG_MAX;
    }
    private static final int ULONG_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define ULONG_MAX 4294967295
     * }
     */
    public static int ULONG_MAX() {
        return ULONG_MAX;
    }
    private static final long LLONG_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define LLONG_MAX 9223372036854775807
     * }
     */
    public static long LLONG_MAX() {
        return LLONG_MAX;
    }
    private static final long LLONG_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define LLONG_MIN -9223372036854775808
     * }
     */
    public static long LLONG_MIN() {
        return LLONG_MIN;
    }
    private static final long ULLONG_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define ULLONG_MAX -1
     * }
     */
    public static long ULLONG_MAX() {
        return ULLONG_MAX;
    }
    private static final int _I8_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define _I8_MIN -128
     * }
     */
    public static int _I8_MIN() {
        return _I8_MIN;
    }
    private static final byte _I8_MAX = (byte)127L;
    /**
     * {@snippet lang=c :
     * #define _I8_MAX 127
     * }
     */
    public static byte _I8_MAX() {
        return _I8_MAX;
    }
    private static final byte _UI8_MAX = (byte)255L;
    /**
     * {@snippet lang=c :
     * #define _UI8_MAX 255
     * }
     */
    public static byte _UI8_MAX() {
        return _UI8_MAX;
    }
    private static final int _I16_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define _I16_MIN -32768
     * }
     */
    public static int _I16_MIN() {
        return _I16_MIN;
    }
    private static final short _I16_MAX = (short)32767L;
    /**
     * {@snippet lang=c :
     * #define _I16_MAX 32767
     * }
     */
    public static short _I16_MAX() {
        return _I16_MAX;
    }
    private static final short _UI16_MAX = (short)65535L;
    /**
     * {@snippet lang=c :
     * #define _UI16_MAX 65535
     * }
     */
    public static short _UI16_MAX() {
        return _UI16_MAX;
    }
    private static final int _I32_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define _I32_MIN -2147483648
     * }
     */
    public static int _I32_MIN() {
        return _I32_MIN;
    }
    private static final int _I32_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define _I32_MAX 2147483647
     * }
     */
    public static int _I32_MAX() {
        return _I32_MAX;
    }
    private static final int _UI32_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define _UI32_MAX 4294967295
     * }
     */
    public static int _UI32_MAX() {
        return _UI32_MAX;
    }
    private static final long _I64_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define _I64_MIN -9223372036854775808
     * }
     */
    public static long _I64_MIN() {
        return _I64_MIN;
    }
    private static final long _I64_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define _I64_MAX 9223372036854775807
     * }
     */
    public static long _I64_MAX() {
        return _I64_MAX;
    }
    private static final long _UI64_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define _UI64_MAX -1
     * }
     */
    public static long _UI64_MAX() {
        return _UI64_MAX;
    }
    private static final long SIZE_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define SIZE_MAX -1
     * }
     */
    public static long SIZE_MAX() {
        return SIZE_MAX;
    }
    private static final long RSIZE_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define RSIZE_MAX 9223372036854775807
     * }
     */
    public static long RSIZE_MAX() {
        return RSIZE_MAX;
    }
    private static final long LONG_LONG_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define LONG_LONG_MAX 9223372036854775807
     * }
     */
    public static long LONG_LONG_MAX() {
        return LONG_LONG_MAX;
    }
    private static final long LONG_LONG_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define LONG_LONG_MIN -9223372036854775808
     * }
     */
    public static long LONG_LONG_MIN() {
        return LONG_LONG_MIN;
    }
    private static final long ULONG_LONG_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define ULONG_LONG_MAX -1
     * }
     */
    public static long ULONG_LONG_MAX() {
        return ULONG_LONG_MAX;
    }
    private static final int _CVTBUFSIZE = (int)349L;
    /**
     * {@snippet lang=c :
     * #define _CVTBUFSIZE 349
     * }
     */
    public static int _CVTBUFSIZE() {
        return _CVTBUFSIZE;
    }
}

