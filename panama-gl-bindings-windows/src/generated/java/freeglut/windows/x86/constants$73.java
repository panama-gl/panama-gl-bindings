// Generated by jextract

package freeglut.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$73 {

    static final FunctionDescriptor ReadUInt32Acquire$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadUInt32Acquire$MH = RuntimeHelper.downcallHandle(
        "ReadUInt32Acquire",
        constants$73.ReadUInt32Acquire$FUNC
    );
    static final FunctionDescriptor ReadUInt32NoFence$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadUInt32NoFence$MH = RuntimeHelper.downcallHandle(
        "ReadUInt32NoFence",
        constants$73.ReadUInt32NoFence$FUNC
    );
    static final FunctionDescriptor ReadUInt32Raw$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadUInt32Raw$MH = RuntimeHelper.downcallHandle(
        "ReadUInt32Raw",
        constants$73.ReadUInt32Raw$FUNC
    );
    static final FunctionDescriptor WriteUInt32Release$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WriteUInt32Release$MH = RuntimeHelper.downcallHandle(
        "WriteUInt32Release",
        constants$73.WriteUInt32Release$FUNC
    );
    static final FunctionDescriptor WriteUInt32NoFence$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WriteUInt32NoFence$MH = RuntimeHelper.downcallHandle(
        "WriteUInt32NoFence",
        constants$73.WriteUInt32NoFence$FUNC
    );
    static final FunctionDescriptor WriteUInt32Raw$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WriteUInt32Raw$MH = RuntimeHelper.downcallHandle(
        "WriteUInt32Raw",
        constants$73.WriteUInt32Raw$FUNC
    );
}


