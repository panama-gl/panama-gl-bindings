// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface TIMECALLBACK {

    void apply(int uTimerID, int uMsg, long dwUser, long dw1, long dw2);
    static MemorySegment allocate(TIMECALLBACK fi, MemorySession session) {
        return RuntimeHelper.upcallStub(TIMECALLBACK.class, fi, constants$623.TIMECALLBACK$FUNC, session);
    }
    static TIMECALLBACK ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (int _uTimerID, int _uMsg, long _dwUser, long _dw1, long _dw2) -> {
            try {
                constants$623.TIMECALLBACK$MH.invokeExact((Addressable)symbol, _uTimerID, _uMsg, _dwUser, _dw1, _dw2);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


