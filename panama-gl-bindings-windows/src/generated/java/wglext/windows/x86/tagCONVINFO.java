// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class tagCONVINFO {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cb"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_LONG_LONG$LAYOUT.withName("hUser"),
        Constants$root.C_POINTER$LAYOUT.withName("hConvPartner"),
        Constants$root.C_POINTER$LAYOUT.withName("hszSvcPartner"),
        Constants$root.C_POINTER$LAYOUT.withName("hszServiceReq"),
        Constants$root.C_POINTER$LAYOUT.withName("hszTopic"),
        Constants$root.C_POINTER$LAYOUT.withName("hszItem"),
        Constants$root.C_LONG$LAYOUT.withName("wFmt"),
        Constants$root.C_LONG$LAYOUT.withName("wType"),
        Constants$root.C_LONG$LAYOUT.withName("wStatus"),
        Constants$root.C_LONG$LAYOUT.withName("wConvst"),
        Constants$root.C_LONG$LAYOUT.withName("wLastError"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("hConvList"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("cb"),
            Constants$root.C_LONG$LAYOUT.withName("wFlags"),
            Constants$root.C_LONG$LAYOUT.withName("wCountryID"),
            Constants$root.C_LONG$LAYOUT.withName("iCodePage"),
            Constants$root.C_LONG$LAYOUT.withName("dwLangID"),
            Constants$root.C_LONG$LAYOUT.withName("dwSecurity"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("Length"),
                Constants$root.C_LONG$LAYOUT.withName("ImpersonationLevel"),
                Constants$root.C_CHAR$LAYOUT.withName("ContextTrackingMode"),
                Constants$root.C_CHAR$LAYOUT.withName("EffectiveOnly"),
                MemoryLayout.paddingLayout(16)
            ).withName("qos")
        ).withName("ConvCtxt"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("hwnd"),
        Constants$root.C_POINTER$LAYOUT.withName("hwndPartner")
    ).withName("tagCONVINFO");
    public static MemoryLayout $LAYOUT() {
        return tagCONVINFO.$struct$LAYOUT;
    }
    static final VarHandle cb$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cb"));
    public static VarHandle cb$VH() {
        return tagCONVINFO.cb$VH;
    }
    public static int cb$get(MemorySegment seg) {
        return (int)tagCONVINFO.cb$VH.get(seg);
    }
    public static void cb$set( MemorySegment seg, int x) {
        tagCONVINFO.cb$VH.set(seg, x);
    }
    public static int cb$get(MemorySegment seg, long index) {
        return (int)tagCONVINFO.cb$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cb$set(MemorySegment seg, long index, int x) {
        tagCONVINFO.cb$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hUser$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hUser"));
    public static VarHandle hUser$VH() {
        return tagCONVINFO.hUser$VH;
    }
    public static long hUser$get(MemorySegment seg) {
        return (long)tagCONVINFO.hUser$VH.get(seg);
    }
    public static void hUser$set( MemorySegment seg, long x) {
        tagCONVINFO.hUser$VH.set(seg, x);
    }
    public static long hUser$get(MemorySegment seg, long index) {
        return (long)tagCONVINFO.hUser$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hUser$set(MemorySegment seg, long index, long x) {
        tagCONVINFO.hUser$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hConvPartner$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hConvPartner"));
    public static VarHandle hConvPartner$VH() {
        return tagCONVINFO.hConvPartner$VH;
    }
    public static MemoryAddress hConvPartner$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hConvPartner$VH.get(seg);
    }
    public static void hConvPartner$set( MemorySegment seg, MemoryAddress x) {
        tagCONVINFO.hConvPartner$VH.set(seg, x);
    }
    public static MemoryAddress hConvPartner$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hConvPartner$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hConvPartner$set(MemorySegment seg, long index, MemoryAddress x) {
        tagCONVINFO.hConvPartner$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hszSvcPartner$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hszSvcPartner"));
    public static VarHandle hszSvcPartner$VH() {
        return tagCONVINFO.hszSvcPartner$VH;
    }
    public static MemoryAddress hszSvcPartner$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hszSvcPartner$VH.get(seg);
    }
    public static void hszSvcPartner$set( MemorySegment seg, MemoryAddress x) {
        tagCONVINFO.hszSvcPartner$VH.set(seg, x);
    }
    public static MemoryAddress hszSvcPartner$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hszSvcPartner$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hszSvcPartner$set(MemorySegment seg, long index, MemoryAddress x) {
        tagCONVINFO.hszSvcPartner$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hszServiceReq$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hszServiceReq"));
    public static VarHandle hszServiceReq$VH() {
        return tagCONVINFO.hszServiceReq$VH;
    }
    public static MemoryAddress hszServiceReq$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hszServiceReq$VH.get(seg);
    }
    public static void hszServiceReq$set( MemorySegment seg, MemoryAddress x) {
        tagCONVINFO.hszServiceReq$VH.set(seg, x);
    }
    public static MemoryAddress hszServiceReq$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hszServiceReq$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hszServiceReq$set(MemorySegment seg, long index, MemoryAddress x) {
        tagCONVINFO.hszServiceReq$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hszTopic$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hszTopic"));
    public static VarHandle hszTopic$VH() {
        return tagCONVINFO.hszTopic$VH;
    }
    public static MemoryAddress hszTopic$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hszTopic$VH.get(seg);
    }
    public static void hszTopic$set( MemorySegment seg, MemoryAddress x) {
        tagCONVINFO.hszTopic$VH.set(seg, x);
    }
    public static MemoryAddress hszTopic$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hszTopic$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hszTopic$set(MemorySegment seg, long index, MemoryAddress x) {
        tagCONVINFO.hszTopic$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hszItem$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hszItem"));
    public static VarHandle hszItem$VH() {
        return tagCONVINFO.hszItem$VH;
    }
    public static MemoryAddress hszItem$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hszItem$VH.get(seg);
    }
    public static void hszItem$set( MemorySegment seg, MemoryAddress x) {
        tagCONVINFO.hszItem$VH.set(seg, x);
    }
    public static MemoryAddress hszItem$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hszItem$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hszItem$set(MemorySegment seg, long index, MemoryAddress x) {
        tagCONVINFO.hszItem$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wFmt$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("wFmt"));
    public static VarHandle wFmt$VH() {
        return tagCONVINFO.wFmt$VH;
    }
    public static int wFmt$get(MemorySegment seg) {
        return (int)tagCONVINFO.wFmt$VH.get(seg);
    }
    public static void wFmt$set( MemorySegment seg, int x) {
        tagCONVINFO.wFmt$VH.set(seg, x);
    }
    public static int wFmt$get(MemorySegment seg, long index) {
        return (int)tagCONVINFO.wFmt$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wFmt$set(MemorySegment seg, long index, int x) {
        tagCONVINFO.wFmt$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wType$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("wType"));
    public static VarHandle wType$VH() {
        return tagCONVINFO.wType$VH;
    }
    public static int wType$get(MemorySegment seg) {
        return (int)tagCONVINFO.wType$VH.get(seg);
    }
    public static void wType$set( MemorySegment seg, int x) {
        tagCONVINFO.wType$VH.set(seg, x);
    }
    public static int wType$get(MemorySegment seg, long index) {
        return (int)tagCONVINFO.wType$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wType$set(MemorySegment seg, long index, int x) {
        tagCONVINFO.wType$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wStatus$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("wStatus"));
    public static VarHandle wStatus$VH() {
        return tagCONVINFO.wStatus$VH;
    }
    public static int wStatus$get(MemorySegment seg) {
        return (int)tagCONVINFO.wStatus$VH.get(seg);
    }
    public static void wStatus$set( MemorySegment seg, int x) {
        tagCONVINFO.wStatus$VH.set(seg, x);
    }
    public static int wStatus$get(MemorySegment seg, long index) {
        return (int)tagCONVINFO.wStatus$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wStatus$set(MemorySegment seg, long index, int x) {
        tagCONVINFO.wStatus$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wConvst$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("wConvst"));
    public static VarHandle wConvst$VH() {
        return tagCONVINFO.wConvst$VH;
    }
    public static int wConvst$get(MemorySegment seg) {
        return (int)tagCONVINFO.wConvst$VH.get(seg);
    }
    public static void wConvst$set( MemorySegment seg, int x) {
        tagCONVINFO.wConvst$VH.set(seg, x);
    }
    public static int wConvst$get(MemorySegment seg, long index) {
        return (int)tagCONVINFO.wConvst$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wConvst$set(MemorySegment seg, long index, int x) {
        tagCONVINFO.wConvst$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wLastError$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("wLastError"));
    public static VarHandle wLastError$VH() {
        return tagCONVINFO.wLastError$VH;
    }
    public static int wLastError$get(MemorySegment seg) {
        return (int)tagCONVINFO.wLastError$VH.get(seg);
    }
    public static void wLastError$set( MemorySegment seg, int x) {
        tagCONVINFO.wLastError$VH.set(seg, x);
    }
    public static int wLastError$get(MemorySegment seg, long index) {
        return (int)tagCONVINFO.wLastError$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wLastError$set(MemorySegment seg, long index, int x) {
        tagCONVINFO.wLastError$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hConvList$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hConvList"));
    public static VarHandle hConvList$VH() {
        return tagCONVINFO.hConvList$VH;
    }
    public static MemoryAddress hConvList$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hConvList$VH.get(seg);
    }
    public static void hConvList$set( MemorySegment seg, MemoryAddress x) {
        tagCONVINFO.hConvList$VH.set(seg, x);
    }
    public static MemoryAddress hConvList$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hConvList$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hConvList$set(MemorySegment seg, long index, MemoryAddress x) {
        tagCONVINFO.hConvList$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ConvCtxt$slice(MemorySegment seg) {
        return seg.asSlice(88, 36);
    }
    static final VarHandle hwnd$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hwnd"));
    public static VarHandle hwnd$VH() {
        return tagCONVINFO.hwnd$VH;
    }
    public static MemoryAddress hwnd$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hwnd$VH.get(seg);
    }
    public static void hwnd$set( MemorySegment seg, MemoryAddress x) {
        tagCONVINFO.hwnd$VH.set(seg, x);
    }
    public static MemoryAddress hwnd$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hwnd$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hwnd$set(MemorySegment seg, long index, MemoryAddress x) {
        tagCONVINFO.hwnd$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hwndPartner$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hwndPartner"));
    public static VarHandle hwndPartner$VH() {
        return tagCONVINFO.hwndPartner$VH;
    }
    public static MemoryAddress hwndPartner$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hwndPartner$VH.get(seg);
    }
    public static void hwndPartner$set( MemorySegment seg, MemoryAddress x) {
        tagCONVINFO.hwndPartner$VH.set(seg, x);
    }
    public static MemoryAddress hwndPartner$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagCONVINFO.hwndPartner$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hwndPartner$set(MemorySegment seg, long index, MemoryAddress x) {
        tagCONVINFO.hwndPartner$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


