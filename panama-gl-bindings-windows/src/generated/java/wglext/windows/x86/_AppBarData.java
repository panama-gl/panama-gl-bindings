// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _AppBarData {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("hWnd"),
        Constants$root.C_LONG$LAYOUT.withName("uCallbackMessage"),
        Constants$root.C_LONG$LAYOUT.withName("uEdge"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("left"),
            Constants$root.C_LONG$LAYOUT.withName("top"),
            Constants$root.C_LONG$LAYOUT.withName("right"),
            Constants$root.C_LONG$LAYOUT.withName("bottom")
        ).withName("rc"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("lParam")
    ).withName("_AppBarData");
    public static MemoryLayout $LAYOUT() {
        return _AppBarData.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return _AppBarData.cbSize$VH;
    }
    public static int cbSize$get(MemorySegment seg) {
        return (int)_AppBarData.cbSize$VH.get(seg);
    }
    public static void cbSize$set( MemorySegment seg, int x) {
        _AppBarData.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)_AppBarData.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        _AppBarData.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hWnd$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hWnd"));
    public static VarHandle hWnd$VH() {
        return _AppBarData.hWnd$VH;
    }
    public static MemoryAddress hWnd$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_AppBarData.hWnd$VH.get(seg);
    }
    public static void hWnd$set( MemorySegment seg, MemoryAddress x) {
        _AppBarData.hWnd$VH.set(seg, x);
    }
    public static MemoryAddress hWnd$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_AppBarData.hWnd$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hWnd$set(MemorySegment seg, long index, MemoryAddress x) {
        _AppBarData.hWnd$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle uCallbackMessage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("uCallbackMessage"));
    public static VarHandle uCallbackMessage$VH() {
        return _AppBarData.uCallbackMessage$VH;
    }
    public static int uCallbackMessage$get(MemorySegment seg) {
        return (int)_AppBarData.uCallbackMessage$VH.get(seg);
    }
    public static void uCallbackMessage$set( MemorySegment seg, int x) {
        _AppBarData.uCallbackMessage$VH.set(seg, x);
    }
    public static int uCallbackMessage$get(MemorySegment seg, long index) {
        return (int)_AppBarData.uCallbackMessage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void uCallbackMessage$set(MemorySegment seg, long index, int x) {
        _AppBarData.uCallbackMessage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle uEdge$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("uEdge"));
    public static VarHandle uEdge$VH() {
        return _AppBarData.uEdge$VH;
    }
    public static int uEdge$get(MemorySegment seg) {
        return (int)_AppBarData.uEdge$VH.get(seg);
    }
    public static void uEdge$set( MemorySegment seg, int x) {
        _AppBarData.uEdge$VH.set(seg, x);
    }
    public static int uEdge$get(MemorySegment seg, long index) {
        return (int)_AppBarData.uEdge$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void uEdge$set(MemorySegment seg, long index, int x) {
        _AppBarData.uEdge$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment rc$slice(MemorySegment seg) {
        return seg.asSlice(24, 16);
    }
    static final VarHandle lParam$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("lParam"));
    public static VarHandle lParam$VH() {
        return _AppBarData.lParam$VH;
    }
    public static long lParam$get(MemorySegment seg) {
        return (long)_AppBarData.lParam$VH.get(seg);
    }
    public static void lParam$set( MemorySegment seg, long x) {
        _AppBarData.lParam$VH.set(seg, x);
    }
    public static long lParam$get(MemorySegment seg, long index) {
        return (long)_AppBarData.lParam$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void lParam$set(MemorySegment seg, long index, long x) {
        _AppBarData.lParam$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


