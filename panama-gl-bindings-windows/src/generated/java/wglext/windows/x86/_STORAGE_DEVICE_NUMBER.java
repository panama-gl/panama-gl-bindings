// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _STORAGE_DEVICE_NUMBER {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("DeviceType"),
        Constants$root.C_LONG$LAYOUT.withName("DeviceNumber"),
        Constants$root.C_LONG$LAYOUT.withName("PartitionNumber")
    ).withName("_STORAGE_DEVICE_NUMBER");
    public static MemoryLayout $LAYOUT() {
        return _STORAGE_DEVICE_NUMBER.$struct$LAYOUT;
    }
    static final VarHandle DeviceType$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("DeviceType"));
    public static VarHandle DeviceType$VH() {
        return _STORAGE_DEVICE_NUMBER.DeviceType$VH;
    }
    public static int DeviceType$get(MemorySegment seg) {
        return (int)_STORAGE_DEVICE_NUMBER.DeviceType$VH.get(seg);
    }
    public static void DeviceType$set( MemorySegment seg, int x) {
        _STORAGE_DEVICE_NUMBER.DeviceType$VH.set(seg, x);
    }
    public static int DeviceType$get(MemorySegment seg, long index) {
        return (int)_STORAGE_DEVICE_NUMBER.DeviceType$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void DeviceType$set(MemorySegment seg, long index, int x) {
        _STORAGE_DEVICE_NUMBER.DeviceType$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle DeviceNumber$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("DeviceNumber"));
    public static VarHandle DeviceNumber$VH() {
        return _STORAGE_DEVICE_NUMBER.DeviceNumber$VH;
    }
    public static int DeviceNumber$get(MemorySegment seg) {
        return (int)_STORAGE_DEVICE_NUMBER.DeviceNumber$VH.get(seg);
    }
    public static void DeviceNumber$set( MemorySegment seg, int x) {
        _STORAGE_DEVICE_NUMBER.DeviceNumber$VH.set(seg, x);
    }
    public static int DeviceNumber$get(MemorySegment seg, long index) {
        return (int)_STORAGE_DEVICE_NUMBER.DeviceNumber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void DeviceNumber$set(MemorySegment seg, long index, int x) {
        _STORAGE_DEVICE_NUMBER.DeviceNumber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle PartitionNumber$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("PartitionNumber"));
    public static VarHandle PartitionNumber$VH() {
        return _STORAGE_DEVICE_NUMBER.PartitionNumber$VH;
    }
    public static int PartitionNumber$get(MemorySegment seg) {
        return (int)_STORAGE_DEVICE_NUMBER.PartitionNumber$VH.get(seg);
    }
    public static void PartitionNumber$set( MemorySegment seg, int x) {
        _STORAGE_DEVICE_NUMBER.PartitionNumber$VH.set(seg, x);
    }
    public static int PartitionNumber$get(MemorySegment seg, long index) {
        return (int)_STORAGE_DEVICE_NUMBER.PartitionNumber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void PartitionNumber$set(MemorySegment seg, long index, int x) {
        _STORAGE_DEVICE_NUMBER.PartitionNumber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


