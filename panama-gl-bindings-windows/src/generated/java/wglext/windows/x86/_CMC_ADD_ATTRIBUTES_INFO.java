// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _CMC_ADD_ATTRIBUTES_INFO {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("dwCmcDataReference"),
        Constants$root.C_LONG$LAYOUT.withName("cCertReference"),
        Constants$root.C_POINTER$LAYOUT.withName("rgdwCertReference"),
        Constants$root.C_LONG$LAYOUT.withName("cAttribute"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("rgAttribute")
    ).withName("_CMC_ADD_ATTRIBUTES_INFO");
    public static MemoryLayout $LAYOUT() {
        return _CMC_ADD_ATTRIBUTES_INFO.$struct$LAYOUT;
    }
    static final VarHandle dwCmcDataReference$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwCmcDataReference"));
    public static VarHandle dwCmcDataReference$VH() {
        return _CMC_ADD_ATTRIBUTES_INFO.dwCmcDataReference$VH;
    }
    public static int dwCmcDataReference$get(MemorySegment seg) {
        return (int)_CMC_ADD_ATTRIBUTES_INFO.dwCmcDataReference$VH.get(seg);
    }
    public static void dwCmcDataReference$set( MemorySegment seg, int x) {
        _CMC_ADD_ATTRIBUTES_INFO.dwCmcDataReference$VH.set(seg, x);
    }
    public static int dwCmcDataReference$get(MemorySegment seg, long index) {
        return (int)_CMC_ADD_ATTRIBUTES_INFO.dwCmcDataReference$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwCmcDataReference$set(MemorySegment seg, long index, int x) {
        _CMC_ADD_ATTRIBUTES_INFO.dwCmcDataReference$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cCertReference$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cCertReference"));
    public static VarHandle cCertReference$VH() {
        return _CMC_ADD_ATTRIBUTES_INFO.cCertReference$VH;
    }
    public static int cCertReference$get(MemorySegment seg) {
        return (int)_CMC_ADD_ATTRIBUTES_INFO.cCertReference$VH.get(seg);
    }
    public static void cCertReference$set( MemorySegment seg, int x) {
        _CMC_ADD_ATTRIBUTES_INFO.cCertReference$VH.set(seg, x);
    }
    public static int cCertReference$get(MemorySegment seg, long index) {
        return (int)_CMC_ADD_ATTRIBUTES_INFO.cCertReference$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cCertReference$set(MemorySegment seg, long index, int x) {
        _CMC_ADD_ATTRIBUTES_INFO.cCertReference$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rgdwCertReference$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rgdwCertReference"));
    public static VarHandle rgdwCertReference$VH() {
        return _CMC_ADD_ATTRIBUTES_INFO.rgdwCertReference$VH;
    }
    public static MemoryAddress rgdwCertReference$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CMC_ADD_ATTRIBUTES_INFO.rgdwCertReference$VH.get(seg);
    }
    public static void rgdwCertReference$set( MemorySegment seg, MemoryAddress x) {
        _CMC_ADD_ATTRIBUTES_INFO.rgdwCertReference$VH.set(seg, x);
    }
    public static MemoryAddress rgdwCertReference$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CMC_ADD_ATTRIBUTES_INFO.rgdwCertReference$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rgdwCertReference$set(MemorySegment seg, long index, MemoryAddress x) {
        _CMC_ADD_ATTRIBUTES_INFO.rgdwCertReference$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cAttribute$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cAttribute"));
    public static VarHandle cAttribute$VH() {
        return _CMC_ADD_ATTRIBUTES_INFO.cAttribute$VH;
    }
    public static int cAttribute$get(MemorySegment seg) {
        return (int)_CMC_ADD_ATTRIBUTES_INFO.cAttribute$VH.get(seg);
    }
    public static void cAttribute$set( MemorySegment seg, int x) {
        _CMC_ADD_ATTRIBUTES_INFO.cAttribute$VH.set(seg, x);
    }
    public static int cAttribute$get(MemorySegment seg, long index) {
        return (int)_CMC_ADD_ATTRIBUTES_INFO.cAttribute$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cAttribute$set(MemorySegment seg, long index, int x) {
        _CMC_ADD_ATTRIBUTES_INFO.cAttribute$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rgAttribute$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rgAttribute"));
    public static VarHandle rgAttribute$VH() {
        return _CMC_ADD_ATTRIBUTES_INFO.rgAttribute$VH;
    }
    public static MemoryAddress rgAttribute$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CMC_ADD_ATTRIBUTES_INFO.rgAttribute$VH.get(seg);
    }
    public static void rgAttribute$set( MemorySegment seg, MemoryAddress x) {
        _CMC_ADD_ATTRIBUTES_INFO.rgAttribute$VH.set(seg, x);
    }
    public static MemoryAddress rgAttribute$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CMC_ADD_ATTRIBUTES_INFO.rgAttribute$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rgAttribute$set(MemorySegment seg, long index, MemoryAddress x) {
        _CMC_ADD_ATTRIBUTES_INFO.rgAttribute$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


