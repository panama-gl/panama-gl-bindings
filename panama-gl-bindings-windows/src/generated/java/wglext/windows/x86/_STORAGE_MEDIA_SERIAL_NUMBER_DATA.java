// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _STORAGE_MEDIA_SERIAL_NUMBER_DATA {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_SHORT$LAYOUT.withName("Reserved"),
        Constants$root.C_SHORT$LAYOUT.withName("SerialNumberLength"),
        MemoryLayout.sequenceLayout(0, Constants$root.C_CHAR$LAYOUT).withName("SerialNumber")
    ).withName("_STORAGE_MEDIA_SERIAL_NUMBER_DATA");
    public static MemoryLayout $LAYOUT() {
        return _STORAGE_MEDIA_SERIAL_NUMBER_DATA.$struct$LAYOUT;
    }
    static final VarHandle Reserved$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved"));
    public static VarHandle Reserved$VH() {
        return _STORAGE_MEDIA_SERIAL_NUMBER_DATA.Reserved$VH;
    }
    public static short Reserved$get(MemorySegment seg) {
        return (short)_STORAGE_MEDIA_SERIAL_NUMBER_DATA.Reserved$VH.get(seg);
    }
    public static void Reserved$set( MemorySegment seg, short x) {
        _STORAGE_MEDIA_SERIAL_NUMBER_DATA.Reserved$VH.set(seg, x);
    }
    public static short Reserved$get(MemorySegment seg, long index) {
        return (short)_STORAGE_MEDIA_SERIAL_NUMBER_DATA.Reserved$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved$set(MemorySegment seg, long index, short x) {
        _STORAGE_MEDIA_SERIAL_NUMBER_DATA.Reserved$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle SerialNumberLength$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("SerialNumberLength"));
    public static VarHandle SerialNumberLength$VH() {
        return _STORAGE_MEDIA_SERIAL_NUMBER_DATA.SerialNumberLength$VH;
    }
    public static short SerialNumberLength$get(MemorySegment seg) {
        return (short)_STORAGE_MEDIA_SERIAL_NUMBER_DATA.SerialNumberLength$VH.get(seg);
    }
    public static void SerialNumberLength$set( MemorySegment seg, short x) {
        _STORAGE_MEDIA_SERIAL_NUMBER_DATA.SerialNumberLength$VH.set(seg, x);
    }
    public static short SerialNumberLength$get(MemorySegment seg, long index) {
        return (short)_STORAGE_MEDIA_SERIAL_NUMBER_DATA.SerialNumberLength$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void SerialNumberLength$set(MemorySegment seg, long index, short x) {
        _STORAGE_MEDIA_SERIAL_NUMBER_DATA.SerialNumberLength$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


