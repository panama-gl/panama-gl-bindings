// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _CRYPT_DECRYPT_MESSAGE_PARA {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        Constants$root.C_LONG$LAYOUT.withName("dwMsgAndCertEncodingType"),
        Constants$root.C_LONG$LAYOUT.withName("cCertStore"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("rghCertStore")
    ).withName("_CRYPT_DECRYPT_MESSAGE_PARA");
    public static MemoryLayout $LAYOUT() {
        return _CRYPT_DECRYPT_MESSAGE_PARA.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return _CRYPT_DECRYPT_MESSAGE_PARA.cbSize$VH;
    }
    public static int cbSize$get(MemorySegment seg) {
        return (int)_CRYPT_DECRYPT_MESSAGE_PARA.cbSize$VH.get(seg);
    }
    public static void cbSize$set( MemorySegment seg, int x) {
        _CRYPT_DECRYPT_MESSAGE_PARA.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)_CRYPT_DECRYPT_MESSAGE_PARA.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        _CRYPT_DECRYPT_MESSAGE_PARA.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwMsgAndCertEncodingType$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwMsgAndCertEncodingType"));
    public static VarHandle dwMsgAndCertEncodingType$VH() {
        return _CRYPT_DECRYPT_MESSAGE_PARA.dwMsgAndCertEncodingType$VH;
    }
    public static int dwMsgAndCertEncodingType$get(MemorySegment seg) {
        return (int)_CRYPT_DECRYPT_MESSAGE_PARA.dwMsgAndCertEncodingType$VH.get(seg);
    }
    public static void dwMsgAndCertEncodingType$set( MemorySegment seg, int x) {
        _CRYPT_DECRYPT_MESSAGE_PARA.dwMsgAndCertEncodingType$VH.set(seg, x);
    }
    public static int dwMsgAndCertEncodingType$get(MemorySegment seg, long index) {
        return (int)_CRYPT_DECRYPT_MESSAGE_PARA.dwMsgAndCertEncodingType$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMsgAndCertEncodingType$set(MemorySegment seg, long index, int x) {
        _CRYPT_DECRYPT_MESSAGE_PARA.dwMsgAndCertEncodingType$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cCertStore$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cCertStore"));
    public static VarHandle cCertStore$VH() {
        return _CRYPT_DECRYPT_MESSAGE_PARA.cCertStore$VH;
    }
    public static int cCertStore$get(MemorySegment seg) {
        return (int)_CRYPT_DECRYPT_MESSAGE_PARA.cCertStore$VH.get(seg);
    }
    public static void cCertStore$set( MemorySegment seg, int x) {
        _CRYPT_DECRYPT_MESSAGE_PARA.cCertStore$VH.set(seg, x);
    }
    public static int cCertStore$get(MemorySegment seg, long index) {
        return (int)_CRYPT_DECRYPT_MESSAGE_PARA.cCertStore$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cCertStore$set(MemorySegment seg, long index, int x) {
        _CRYPT_DECRYPT_MESSAGE_PARA.cCertStore$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rghCertStore$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rghCertStore"));
    public static VarHandle rghCertStore$VH() {
        return _CRYPT_DECRYPT_MESSAGE_PARA.rghCertStore$VH;
    }
    public static MemoryAddress rghCertStore$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_DECRYPT_MESSAGE_PARA.rghCertStore$VH.get(seg);
    }
    public static void rghCertStore$set( MemorySegment seg, MemoryAddress x) {
        _CRYPT_DECRYPT_MESSAGE_PARA.rghCertStore$VH.set(seg, x);
    }
    public static MemoryAddress rghCertStore$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_DECRYPT_MESSAGE_PARA.rghCertStore$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rghCertStore$set(MemorySegment seg, long index, MemoryAddress x) {
        _CRYPT_DECRYPT_MESSAGE_PARA.rghCertStore$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


