// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _EFS_DECRYPTION_STATUS_INFO {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("dwDecryptionError"),
        Constants$root.C_LONG$LAYOUT.withName("dwHashOffset"),
        Constants$root.C_LONG$LAYOUT.withName("cbHash")
    ).withName("_EFS_DECRYPTION_STATUS_INFO");
    public static MemoryLayout $LAYOUT() {
        return _EFS_DECRYPTION_STATUS_INFO.$struct$LAYOUT;
    }
    static final VarHandle dwDecryptionError$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwDecryptionError"));
    public static VarHandle dwDecryptionError$VH() {
        return _EFS_DECRYPTION_STATUS_INFO.dwDecryptionError$VH;
    }
    public static int dwDecryptionError$get(MemorySegment seg) {
        return (int)_EFS_DECRYPTION_STATUS_INFO.dwDecryptionError$VH.get(seg);
    }
    public static void dwDecryptionError$set( MemorySegment seg, int x) {
        _EFS_DECRYPTION_STATUS_INFO.dwDecryptionError$VH.set(seg, x);
    }
    public static int dwDecryptionError$get(MemorySegment seg, long index) {
        return (int)_EFS_DECRYPTION_STATUS_INFO.dwDecryptionError$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwDecryptionError$set(MemorySegment seg, long index, int x) {
        _EFS_DECRYPTION_STATUS_INFO.dwDecryptionError$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwHashOffset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwHashOffset"));
    public static VarHandle dwHashOffset$VH() {
        return _EFS_DECRYPTION_STATUS_INFO.dwHashOffset$VH;
    }
    public static int dwHashOffset$get(MemorySegment seg) {
        return (int)_EFS_DECRYPTION_STATUS_INFO.dwHashOffset$VH.get(seg);
    }
    public static void dwHashOffset$set( MemorySegment seg, int x) {
        _EFS_DECRYPTION_STATUS_INFO.dwHashOffset$VH.set(seg, x);
    }
    public static int dwHashOffset$get(MemorySegment seg, long index) {
        return (int)_EFS_DECRYPTION_STATUS_INFO.dwHashOffset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwHashOffset$set(MemorySegment seg, long index, int x) {
        _EFS_DECRYPTION_STATUS_INFO.dwHashOffset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cbHash$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbHash"));
    public static VarHandle cbHash$VH() {
        return _EFS_DECRYPTION_STATUS_INFO.cbHash$VH;
    }
    public static int cbHash$get(MemorySegment seg) {
        return (int)_EFS_DECRYPTION_STATUS_INFO.cbHash$VH.get(seg);
    }
    public static void cbHash$set( MemorySegment seg, int x) {
        _EFS_DECRYPTION_STATUS_INFO.cbHash$VH.set(seg, x);
    }
    public static int cbHash$get(MemorySegment seg, long index) {
        return (int)_EFS_DECRYPTION_STATUS_INFO.cbHash$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbHash$set(MemorySegment seg, long index, int x) {
        _EFS_DECRYPTION_STATUS_INFO.cbHash$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


