// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _TXFS_LIST_TRANSACTIONS_ENTRY {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("Data1"),
            Constants$root.C_SHORT$LAYOUT.withName("Data2"),
            Constants$root.C_SHORT$LAYOUT.withName("Data3"),
            MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
        ).withName("TransactionId"),
        Constants$root.C_LONG$LAYOUT.withName("TransactionState"),
        Constants$root.C_LONG$LAYOUT.withName("Reserved1"),
        Constants$root.C_LONG$LAYOUT.withName("Reserved2"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_LONG_LONG$LAYOUT.withName("Reserved3")
    ).withName("_TXFS_LIST_TRANSACTIONS_ENTRY");
    public static MemoryLayout $LAYOUT() {
        return _TXFS_LIST_TRANSACTIONS_ENTRY.$struct$LAYOUT;
    }
    public static MemorySegment TransactionId$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    static final VarHandle TransactionState$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("TransactionState"));
    public static VarHandle TransactionState$VH() {
        return _TXFS_LIST_TRANSACTIONS_ENTRY.TransactionState$VH;
    }
    public static int TransactionState$get(MemorySegment seg) {
        return (int)_TXFS_LIST_TRANSACTIONS_ENTRY.TransactionState$VH.get(seg);
    }
    public static void TransactionState$set( MemorySegment seg, int x) {
        _TXFS_LIST_TRANSACTIONS_ENTRY.TransactionState$VH.set(seg, x);
    }
    public static int TransactionState$get(MemorySegment seg, long index) {
        return (int)_TXFS_LIST_TRANSACTIONS_ENTRY.TransactionState$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void TransactionState$set(MemorySegment seg, long index, int x) {
        _TXFS_LIST_TRANSACTIONS_ENTRY.TransactionState$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved1"));
    public static VarHandle Reserved1$VH() {
        return _TXFS_LIST_TRANSACTIONS_ENTRY.Reserved1$VH;
    }
    public static int Reserved1$get(MemorySegment seg) {
        return (int)_TXFS_LIST_TRANSACTIONS_ENTRY.Reserved1$VH.get(seg);
    }
    public static void Reserved1$set( MemorySegment seg, int x) {
        _TXFS_LIST_TRANSACTIONS_ENTRY.Reserved1$VH.set(seg, x);
    }
    public static int Reserved1$get(MemorySegment seg, long index) {
        return (int)_TXFS_LIST_TRANSACTIONS_ENTRY.Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved1$set(MemorySegment seg, long index, int x) {
        _TXFS_LIST_TRANSACTIONS_ENTRY.Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved2"));
    public static VarHandle Reserved2$VH() {
        return _TXFS_LIST_TRANSACTIONS_ENTRY.Reserved2$VH;
    }
    public static int Reserved2$get(MemorySegment seg) {
        return (int)_TXFS_LIST_TRANSACTIONS_ENTRY.Reserved2$VH.get(seg);
    }
    public static void Reserved2$set( MemorySegment seg, int x) {
        _TXFS_LIST_TRANSACTIONS_ENTRY.Reserved2$VH.set(seg, x);
    }
    public static int Reserved2$get(MemorySegment seg, long index) {
        return (int)_TXFS_LIST_TRANSACTIONS_ENTRY.Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved2$set(MemorySegment seg, long index, int x) {
        _TXFS_LIST_TRANSACTIONS_ENTRY.Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved3"));
    public static VarHandle Reserved3$VH() {
        return _TXFS_LIST_TRANSACTIONS_ENTRY.Reserved3$VH;
    }
    public static long Reserved3$get(MemorySegment seg) {
        return (long)_TXFS_LIST_TRANSACTIONS_ENTRY.Reserved3$VH.get(seg);
    }
    public static void Reserved3$set( MemorySegment seg, long x) {
        _TXFS_LIST_TRANSACTIONS_ENTRY.Reserved3$VH.set(seg, x);
    }
    public static long Reserved3$get(MemorySegment seg, long index) {
        return (long)_TXFS_LIST_TRANSACTIONS_ENTRY.Reserved3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved3$set(MemorySegment seg, long index, long x) {
        _TXFS_LIST_TRANSACTIONS_ENTRY.Reserved3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


