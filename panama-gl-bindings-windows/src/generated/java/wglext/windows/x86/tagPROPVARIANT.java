// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class tagPROPVARIANT {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_SHORT$LAYOUT.withName("vt"),
                Constants$root.C_SHORT$LAYOUT.withName("wReserved1"),
                Constants$root.C_SHORT$LAYOUT.withName("wReserved2"),
                Constants$root.C_SHORT$LAYOUT.withName("wReserved3"),
                MemoryLayout.unionLayout(
                    Constants$root.C_CHAR$LAYOUT.withName("cVal"),
                    Constants$root.C_CHAR$LAYOUT.withName("bVal"),
                    Constants$root.C_SHORT$LAYOUT.withName("iVal"),
                    Constants$root.C_SHORT$LAYOUT.withName("uiVal"),
                    Constants$root.C_LONG$LAYOUT.withName("lVal"),
                    Constants$root.C_LONG$LAYOUT.withName("ulVal"),
                    Constants$root.C_LONG$LAYOUT.withName("intVal"),
                    Constants$root.C_LONG$LAYOUT.withName("uintVal"),
                    MemoryLayout.unionLayout(
                        MemoryLayout.structLayout(
                            Constants$root.C_LONG$LAYOUT.withName("LowPart"),
                            Constants$root.C_LONG$LAYOUT.withName("HighPart")
                        ).withName("$anon$0"),
                        MemoryLayout.structLayout(
                            Constants$root.C_LONG$LAYOUT.withName("LowPart"),
                            Constants$root.C_LONG$LAYOUT.withName("HighPart")
                        ).withName("u"),
                        Constants$root.C_LONG_LONG$LAYOUT.withName("QuadPart")
                    ).withName("hVal"),
                    MemoryLayout.unionLayout(
                        MemoryLayout.structLayout(
                            Constants$root.C_LONG$LAYOUT.withName("LowPart"),
                            Constants$root.C_LONG$LAYOUT.withName("HighPart")
                        ).withName("$anon$0"),
                        MemoryLayout.structLayout(
                            Constants$root.C_LONG$LAYOUT.withName("LowPart"),
                            Constants$root.C_LONG$LAYOUT.withName("HighPart")
                        ).withName("u"),
                        Constants$root.C_LONG_LONG$LAYOUT.withName("QuadPart")
                    ).withName("uhVal"),
                    Constants$root.C_FLOAT$LAYOUT.withName("fltVal"),
                    Constants$root.C_DOUBLE$LAYOUT.withName("dblVal"),
                    Constants$root.C_SHORT$LAYOUT.withName("boolVal"),
                    Constants$root.C_SHORT$LAYOUT.withName("__OBSOLETE__VARIANT_BOOL"),
                    Constants$root.C_LONG$LAYOUT.withName("scode"),
                    MemoryLayout.unionLayout(
                        MemoryLayout.structLayout(
                            Constants$root.C_LONG$LAYOUT.withName("Lo"),
                            Constants$root.C_LONG$LAYOUT.withName("Hi")
                        ).withName("$anon$0"),
                        Constants$root.C_LONG_LONG$LAYOUT.withName("int64")
                    ).withName("cyVal"),
                    Constants$root.C_DOUBLE$LAYOUT.withName("date"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("dwLowDateTime"),
                        Constants$root.C_LONG$LAYOUT.withName("dwHighDateTime")
                    ).withName("filetime"),
                    Constants$root.C_POINTER$LAYOUT.withName("puuid"),
                    Constants$root.C_POINTER$LAYOUT.withName("pclipdata"),
                    Constants$root.C_POINTER$LAYOUT.withName("bstrVal"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pData")
                    ).withName("bstrblobVal"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pBlobData")
                    ).withName("blob"),
                    Constants$root.C_POINTER$LAYOUT.withName("pszVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pwszVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("punkVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pdispVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pStream"),
                    Constants$root.C_POINTER$LAYOUT.withName("pStorage"),
                    Constants$root.C_POINTER$LAYOUT.withName("pVersionedStream"),
                    Constants$root.C_POINTER$LAYOUT.withName("parray"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cac"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("caub"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cai"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("caui"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cal"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("caul"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cah"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cauh"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("caflt"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cadbl"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cabool"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cascode"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cacy"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cadate"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cafiletime"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cauuid"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("caclipdata"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cabstr"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("cabstrblob"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("calpstr"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("calpwstr"),
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("cElems"),
                        MemoryLayout.paddingLayout(32),
                        Constants$root.C_POINTER$LAYOUT.withName("pElems")
                    ).withName("capropvar"),
                    Constants$root.C_POINTER$LAYOUT.withName("pcVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pbVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("piVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("puiVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("plVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pulVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pintVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("puintVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pfltVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pdblVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pboolVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pdecVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pscode"),
                    Constants$root.C_POINTER$LAYOUT.withName("pcyVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pdate"),
                    Constants$root.C_POINTER$LAYOUT.withName("pbstrVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("ppunkVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("ppdispVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pparray"),
                    Constants$root.C_POINTER$LAYOUT.withName("pvarVal")
                ).withName("$anon$0")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                Constants$root.C_SHORT$LAYOUT.withName("wReserved"),
                MemoryLayout.unionLayout(
                    MemoryLayout.structLayout(
                        Constants$root.C_CHAR$LAYOUT.withName("scale"),
                        Constants$root.C_CHAR$LAYOUT.withName("sign")
                    ).withName("$anon$0"),
                    Constants$root.C_SHORT$LAYOUT.withName("signscale")
                ).withName("$anon$0"),
                Constants$root.C_LONG$LAYOUT.withName("Hi32"),
                MemoryLayout.unionLayout(
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("Lo32"),
                        Constants$root.C_LONG$LAYOUT.withName("Mid32")
                    ).withName("$anon$0"),
                    Constants$root.C_LONG_LONG$LAYOUT.withName("Lo64")
                ).withName("$anon$1")
            ).withName("decVal")
        ).withName("$anon$0")
    ).withName("tagPROPVARIANT");
    public static MemoryLayout $LAYOUT() {
        return tagPROPVARIANT.$struct$LAYOUT;
    }
    static final VarHandle vt$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("vt"));
    public static VarHandle vt$VH() {
        return tagPROPVARIANT.vt$VH;
    }
    public static short vt$get(MemorySegment seg) {
        return (short)tagPROPVARIANT.vt$VH.get(seg);
    }
    public static void vt$set( MemorySegment seg, short x) {
        tagPROPVARIANT.vt$VH.set(seg, x);
    }
    public static short vt$get(MemorySegment seg, long index) {
        return (short)tagPROPVARIANT.vt$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void vt$set(MemorySegment seg, long index, short x) {
        tagPROPVARIANT.vt$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wReserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("wReserved1"));
    public static VarHandle wReserved1$VH() {
        return tagPROPVARIANT.wReserved1$VH;
    }
    public static short wReserved1$get(MemorySegment seg) {
        return (short)tagPROPVARIANT.wReserved1$VH.get(seg);
    }
    public static void wReserved1$set( MemorySegment seg, short x) {
        tagPROPVARIANT.wReserved1$VH.set(seg, x);
    }
    public static short wReserved1$get(MemorySegment seg, long index) {
        return (short)tagPROPVARIANT.wReserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wReserved1$set(MemorySegment seg, long index, short x) {
        tagPROPVARIANT.wReserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wReserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("wReserved2"));
    public static VarHandle wReserved2$VH() {
        return tagPROPVARIANT.wReserved2$VH;
    }
    public static short wReserved2$get(MemorySegment seg) {
        return (short)tagPROPVARIANT.wReserved2$VH.get(seg);
    }
    public static void wReserved2$set( MemorySegment seg, short x) {
        tagPROPVARIANT.wReserved2$VH.set(seg, x);
    }
    public static short wReserved2$get(MemorySegment seg, long index) {
        return (short)tagPROPVARIANT.wReserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wReserved2$set(MemorySegment seg, long index, short x) {
        tagPROPVARIANT.wReserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wReserved3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("wReserved3"));
    public static VarHandle wReserved3$VH() {
        return tagPROPVARIANT.wReserved3$VH;
    }
    public static short wReserved3$get(MemorySegment seg) {
        return (short)tagPROPVARIANT.wReserved3$VH.get(seg);
    }
    public static void wReserved3$set( MemorySegment seg, short x) {
        tagPROPVARIANT.wReserved3$VH.set(seg, x);
    }
    public static short wReserved3$get(MemorySegment seg, long index) {
        return (short)tagPROPVARIANT.wReserved3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wReserved3$set(MemorySegment seg, long index, short x) {
        tagPROPVARIANT.wReserved3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("cVal"));
    public static VarHandle cVal$VH() {
        return tagPROPVARIANT.cVal$VH;
    }
    public static byte cVal$get(MemorySegment seg) {
        return (byte)tagPROPVARIANT.cVal$VH.get(seg);
    }
    public static void cVal$set( MemorySegment seg, byte x) {
        tagPROPVARIANT.cVal$VH.set(seg, x);
    }
    public static byte cVal$get(MemorySegment seg, long index) {
        return (byte)tagPROPVARIANT.cVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cVal$set(MemorySegment seg, long index, byte x) {
        tagPROPVARIANT.cVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle bVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("bVal"));
    public static VarHandle bVal$VH() {
        return tagPROPVARIANT.bVal$VH;
    }
    public static byte bVal$get(MemorySegment seg) {
        return (byte)tagPROPVARIANT.bVal$VH.get(seg);
    }
    public static void bVal$set( MemorySegment seg, byte x) {
        tagPROPVARIANT.bVal$VH.set(seg, x);
    }
    public static byte bVal$get(MemorySegment seg, long index) {
        return (byte)tagPROPVARIANT.bVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void bVal$set(MemorySegment seg, long index, byte x) {
        tagPROPVARIANT.bVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("iVal"));
    public static VarHandle iVal$VH() {
        return tagPROPVARIANT.iVal$VH;
    }
    public static short iVal$get(MemorySegment seg) {
        return (short)tagPROPVARIANT.iVal$VH.get(seg);
    }
    public static void iVal$set( MemorySegment seg, short x) {
        tagPROPVARIANT.iVal$VH.set(seg, x);
    }
    public static short iVal$get(MemorySegment seg, long index) {
        return (short)tagPROPVARIANT.iVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iVal$set(MemorySegment seg, long index, short x) {
        tagPROPVARIANT.iVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle uiVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("uiVal"));
    public static VarHandle uiVal$VH() {
        return tagPROPVARIANT.uiVal$VH;
    }
    public static short uiVal$get(MemorySegment seg) {
        return (short)tagPROPVARIANT.uiVal$VH.get(seg);
    }
    public static void uiVal$set( MemorySegment seg, short x) {
        tagPROPVARIANT.uiVal$VH.set(seg, x);
    }
    public static short uiVal$get(MemorySegment seg, long index) {
        return (short)tagPROPVARIANT.uiVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void uiVal$set(MemorySegment seg, long index, short x) {
        tagPROPVARIANT.uiVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle lVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("lVal"));
    public static VarHandle lVal$VH() {
        return tagPROPVARIANT.lVal$VH;
    }
    public static int lVal$get(MemorySegment seg) {
        return (int)tagPROPVARIANT.lVal$VH.get(seg);
    }
    public static void lVal$set( MemorySegment seg, int x) {
        tagPROPVARIANT.lVal$VH.set(seg, x);
    }
    public static int lVal$get(MemorySegment seg, long index) {
        return (int)tagPROPVARIANT.lVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void lVal$set(MemorySegment seg, long index, int x) {
        tagPROPVARIANT.lVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ulVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("ulVal"));
    public static VarHandle ulVal$VH() {
        return tagPROPVARIANT.ulVal$VH;
    }
    public static int ulVal$get(MemorySegment seg) {
        return (int)tagPROPVARIANT.ulVal$VH.get(seg);
    }
    public static void ulVal$set( MemorySegment seg, int x) {
        tagPROPVARIANT.ulVal$VH.set(seg, x);
    }
    public static int ulVal$get(MemorySegment seg, long index) {
        return (int)tagPROPVARIANT.ulVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ulVal$set(MemorySegment seg, long index, int x) {
        tagPROPVARIANT.ulVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle intVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("intVal"));
    public static VarHandle intVal$VH() {
        return tagPROPVARIANT.intVal$VH;
    }
    public static int intVal$get(MemorySegment seg) {
        return (int)tagPROPVARIANT.intVal$VH.get(seg);
    }
    public static void intVal$set( MemorySegment seg, int x) {
        tagPROPVARIANT.intVal$VH.set(seg, x);
    }
    public static int intVal$get(MemorySegment seg, long index) {
        return (int)tagPROPVARIANT.intVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void intVal$set(MemorySegment seg, long index, int x) {
        tagPROPVARIANT.intVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle uintVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("uintVal"));
    public static VarHandle uintVal$VH() {
        return tagPROPVARIANT.uintVal$VH;
    }
    public static int uintVal$get(MemorySegment seg) {
        return (int)tagPROPVARIANT.uintVal$VH.get(seg);
    }
    public static void uintVal$set( MemorySegment seg, int x) {
        tagPROPVARIANT.uintVal$VH.set(seg, x);
    }
    public static int uintVal$get(MemorySegment seg, long index) {
        return (int)tagPROPVARIANT.uintVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void uintVal$set(MemorySegment seg, long index, int x) {
        tagPROPVARIANT.uintVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment hVal$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    public static MemorySegment uhVal$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    static final VarHandle fltVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("fltVal"));
    public static VarHandle fltVal$VH() {
        return tagPROPVARIANT.fltVal$VH;
    }
    public static float fltVal$get(MemorySegment seg) {
        return (float)tagPROPVARIANT.fltVal$VH.get(seg);
    }
    public static void fltVal$set( MemorySegment seg, float x) {
        tagPROPVARIANT.fltVal$VH.set(seg, x);
    }
    public static float fltVal$get(MemorySegment seg, long index) {
        return (float)tagPROPVARIANT.fltVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void fltVal$set(MemorySegment seg, long index, float x) {
        tagPROPVARIANT.fltVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dblVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("dblVal"));
    public static VarHandle dblVal$VH() {
        return tagPROPVARIANT.dblVal$VH;
    }
    public static double dblVal$get(MemorySegment seg) {
        return (double)tagPROPVARIANT.dblVal$VH.get(seg);
    }
    public static void dblVal$set( MemorySegment seg, double x) {
        tagPROPVARIANT.dblVal$VH.set(seg, x);
    }
    public static double dblVal$get(MemorySegment seg, long index) {
        return (double)tagPROPVARIANT.dblVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dblVal$set(MemorySegment seg, long index, double x) {
        tagPROPVARIANT.dblVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle boolVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("boolVal"));
    public static VarHandle boolVal$VH() {
        return tagPROPVARIANT.boolVal$VH;
    }
    public static short boolVal$get(MemorySegment seg) {
        return (short)tagPROPVARIANT.boolVal$VH.get(seg);
    }
    public static void boolVal$set( MemorySegment seg, short x) {
        tagPROPVARIANT.boolVal$VH.set(seg, x);
    }
    public static short boolVal$get(MemorySegment seg, long index) {
        return (short)tagPROPVARIANT.boolVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void boolVal$set(MemorySegment seg, long index, short x) {
        tagPROPVARIANT.boolVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle __OBSOLETE__VARIANT_BOOL$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("__OBSOLETE__VARIANT_BOOL"));
    public static VarHandle __OBSOLETE__VARIANT_BOOL$VH() {
        return tagPROPVARIANT.__OBSOLETE__VARIANT_BOOL$VH;
    }
    public static short __OBSOLETE__VARIANT_BOOL$get(MemorySegment seg) {
        return (short)tagPROPVARIANT.__OBSOLETE__VARIANT_BOOL$VH.get(seg);
    }
    public static void __OBSOLETE__VARIANT_BOOL$set( MemorySegment seg, short x) {
        tagPROPVARIANT.__OBSOLETE__VARIANT_BOOL$VH.set(seg, x);
    }
    public static short __OBSOLETE__VARIANT_BOOL$get(MemorySegment seg, long index) {
        return (short)tagPROPVARIANT.__OBSOLETE__VARIANT_BOOL$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void __OBSOLETE__VARIANT_BOOL$set(MemorySegment seg, long index, short x) {
        tagPROPVARIANT.__OBSOLETE__VARIANT_BOOL$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle scode$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("scode"));
    public static VarHandle scode$VH() {
        return tagPROPVARIANT.scode$VH;
    }
    public static int scode$get(MemorySegment seg) {
        return (int)tagPROPVARIANT.scode$VH.get(seg);
    }
    public static void scode$set( MemorySegment seg, int x) {
        tagPROPVARIANT.scode$VH.set(seg, x);
    }
    public static int scode$get(MemorySegment seg, long index) {
        return (int)tagPROPVARIANT.scode$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void scode$set(MemorySegment seg, long index, int x) {
        tagPROPVARIANT.scode$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment cyVal$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    static final VarHandle date$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("date"));
    public static VarHandle date$VH() {
        return tagPROPVARIANT.date$VH;
    }
    public static double date$get(MemorySegment seg) {
        return (double)tagPROPVARIANT.date$VH.get(seg);
    }
    public static void date$set( MemorySegment seg, double x) {
        tagPROPVARIANT.date$VH.set(seg, x);
    }
    public static double date$get(MemorySegment seg, long index) {
        return (double)tagPROPVARIANT.date$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void date$set(MemorySegment seg, long index, double x) {
        tagPROPVARIANT.date$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment filetime$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    static final VarHandle puuid$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("puuid"));
    public static VarHandle puuid$VH() {
        return tagPROPVARIANT.puuid$VH;
    }
    public static MemoryAddress puuid$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.puuid$VH.get(seg);
    }
    public static void puuid$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.puuid$VH.set(seg, x);
    }
    public static MemoryAddress puuid$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.puuid$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void puuid$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.puuid$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pclipdata$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pclipdata"));
    public static VarHandle pclipdata$VH() {
        return tagPROPVARIANT.pclipdata$VH;
    }
    public static MemoryAddress pclipdata$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pclipdata$VH.get(seg);
    }
    public static void pclipdata$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pclipdata$VH.set(seg, x);
    }
    public static MemoryAddress pclipdata$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pclipdata$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pclipdata$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pclipdata$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle bstrVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("bstrVal"));
    public static VarHandle bstrVal$VH() {
        return tagPROPVARIANT.bstrVal$VH;
    }
    public static MemoryAddress bstrVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.bstrVal$VH.get(seg);
    }
    public static void bstrVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.bstrVal$VH.set(seg, x);
    }
    public static MemoryAddress bstrVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.bstrVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void bstrVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.bstrVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment bstrblobVal$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment blob$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    static final VarHandle pszVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pszVal"));
    public static VarHandle pszVal$VH() {
        return tagPROPVARIANT.pszVal$VH;
    }
    public static MemoryAddress pszVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pszVal$VH.get(seg);
    }
    public static void pszVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pszVal$VH.set(seg, x);
    }
    public static MemoryAddress pszVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pszVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pszVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pszVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pwszVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pwszVal"));
    public static VarHandle pwszVal$VH() {
        return tagPROPVARIANT.pwszVal$VH;
    }
    public static MemoryAddress pwszVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pwszVal$VH.get(seg);
    }
    public static void pwszVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pwszVal$VH.set(seg, x);
    }
    public static MemoryAddress pwszVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pwszVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pwszVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle punkVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("punkVal"));
    public static VarHandle punkVal$VH() {
        return tagPROPVARIANT.punkVal$VH;
    }
    public static MemoryAddress punkVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.punkVal$VH.get(seg);
    }
    public static void punkVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.punkVal$VH.set(seg, x);
    }
    public static MemoryAddress punkVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.punkVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void punkVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.punkVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pdispVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pdispVal"));
    public static VarHandle pdispVal$VH() {
        return tagPROPVARIANT.pdispVal$VH;
    }
    public static MemoryAddress pdispVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pdispVal$VH.get(seg);
    }
    public static void pdispVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pdispVal$VH.set(seg, x);
    }
    public static MemoryAddress pdispVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pdispVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pdispVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pdispVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pStream$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pStream"));
    public static VarHandle pStream$VH() {
        return tagPROPVARIANT.pStream$VH;
    }
    public static MemoryAddress pStream$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pStream$VH.get(seg);
    }
    public static void pStream$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pStream$VH.set(seg, x);
    }
    public static MemoryAddress pStream$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pStream$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pStream$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pStream$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pStorage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pStorage"));
    public static VarHandle pStorage$VH() {
        return tagPROPVARIANT.pStorage$VH;
    }
    public static MemoryAddress pStorage$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pStorage$VH.get(seg);
    }
    public static void pStorage$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pStorage$VH.set(seg, x);
    }
    public static MemoryAddress pStorage$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pStorage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pStorage$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pStorage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pVersionedStream$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pVersionedStream"));
    public static VarHandle pVersionedStream$VH() {
        return tagPROPVARIANT.pVersionedStream$VH;
    }
    public static MemoryAddress pVersionedStream$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pVersionedStream$VH.get(seg);
    }
    public static void pVersionedStream$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pVersionedStream$VH.set(seg, x);
    }
    public static MemoryAddress pVersionedStream$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pVersionedStream$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pVersionedStream$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pVersionedStream$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle parray$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("parray"));
    public static VarHandle parray$VH() {
        return tagPROPVARIANT.parray$VH;
    }
    public static MemoryAddress parray$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.parray$VH.get(seg);
    }
    public static void parray$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.parray$VH.set(seg, x);
    }
    public static MemoryAddress parray$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.parray$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void parray$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.parray$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment cac$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment caub$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cai$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment caui$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cal$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment caul$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cah$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cauh$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment caflt$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cadbl$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cabool$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cascode$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cacy$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cadate$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cafiletime$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cauuid$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment caclipdata$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cabstr$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment cabstrblob$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment calpstr$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment calpwstr$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment capropvar$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    static final VarHandle pcVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pcVal"));
    public static VarHandle pcVal$VH() {
        return tagPROPVARIANT.pcVal$VH;
    }
    public static MemoryAddress pcVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pcVal$VH.get(seg);
    }
    public static void pcVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pcVal$VH.set(seg, x);
    }
    public static MemoryAddress pcVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pcVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pcVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pcVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pbVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pbVal"));
    public static VarHandle pbVal$VH() {
        return tagPROPVARIANT.pbVal$VH;
    }
    public static MemoryAddress pbVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pbVal$VH.get(seg);
    }
    public static void pbVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pbVal$VH.set(seg, x);
    }
    public static MemoryAddress pbVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pbVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pbVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pbVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle piVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("piVal"));
    public static VarHandle piVal$VH() {
        return tagPROPVARIANT.piVal$VH;
    }
    public static MemoryAddress piVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.piVal$VH.get(seg);
    }
    public static void piVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.piVal$VH.set(seg, x);
    }
    public static MemoryAddress piVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.piVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void piVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.piVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle puiVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("puiVal"));
    public static VarHandle puiVal$VH() {
        return tagPROPVARIANT.puiVal$VH;
    }
    public static MemoryAddress puiVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.puiVal$VH.get(seg);
    }
    public static void puiVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.puiVal$VH.set(seg, x);
    }
    public static MemoryAddress puiVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.puiVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void puiVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.puiVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle plVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("plVal"));
    public static VarHandle plVal$VH() {
        return tagPROPVARIANT.plVal$VH;
    }
    public static MemoryAddress plVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.plVal$VH.get(seg);
    }
    public static void plVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.plVal$VH.set(seg, x);
    }
    public static MemoryAddress plVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.plVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void plVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.plVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pulVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pulVal"));
    public static VarHandle pulVal$VH() {
        return tagPROPVARIANT.pulVal$VH;
    }
    public static MemoryAddress pulVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pulVal$VH.get(seg);
    }
    public static void pulVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pulVal$VH.set(seg, x);
    }
    public static MemoryAddress pulVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pulVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pulVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pulVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pintVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pintVal"));
    public static VarHandle pintVal$VH() {
        return tagPROPVARIANT.pintVal$VH;
    }
    public static MemoryAddress pintVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pintVal$VH.get(seg);
    }
    public static void pintVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pintVal$VH.set(seg, x);
    }
    public static MemoryAddress pintVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pintVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pintVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pintVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle puintVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("puintVal"));
    public static VarHandle puintVal$VH() {
        return tagPROPVARIANT.puintVal$VH;
    }
    public static MemoryAddress puintVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.puintVal$VH.get(seg);
    }
    public static void puintVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.puintVal$VH.set(seg, x);
    }
    public static MemoryAddress puintVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.puintVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void puintVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.puintVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pfltVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pfltVal"));
    public static VarHandle pfltVal$VH() {
        return tagPROPVARIANT.pfltVal$VH;
    }
    public static MemoryAddress pfltVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pfltVal$VH.get(seg);
    }
    public static void pfltVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pfltVal$VH.set(seg, x);
    }
    public static MemoryAddress pfltVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pfltVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pfltVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pfltVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pdblVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pdblVal"));
    public static VarHandle pdblVal$VH() {
        return tagPROPVARIANT.pdblVal$VH;
    }
    public static MemoryAddress pdblVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pdblVal$VH.get(seg);
    }
    public static void pdblVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pdblVal$VH.set(seg, x);
    }
    public static MemoryAddress pdblVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pdblVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pdblVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pdblVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pboolVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pboolVal"));
    public static VarHandle pboolVal$VH() {
        return tagPROPVARIANT.pboolVal$VH;
    }
    public static MemoryAddress pboolVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pboolVal$VH.get(seg);
    }
    public static void pboolVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pboolVal$VH.set(seg, x);
    }
    public static MemoryAddress pboolVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pboolVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pboolVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pboolVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pdecVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pdecVal"));
    public static VarHandle pdecVal$VH() {
        return tagPROPVARIANT.pdecVal$VH;
    }
    public static MemoryAddress pdecVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pdecVal$VH.get(seg);
    }
    public static void pdecVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pdecVal$VH.set(seg, x);
    }
    public static MemoryAddress pdecVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pdecVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pdecVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pdecVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pscode$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pscode"));
    public static VarHandle pscode$VH() {
        return tagPROPVARIANT.pscode$VH;
    }
    public static MemoryAddress pscode$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pscode$VH.get(seg);
    }
    public static void pscode$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pscode$VH.set(seg, x);
    }
    public static MemoryAddress pscode$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pscode$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pscode$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pscode$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pcyVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pcyVal"));
    public static VarHandle pcyVal$VH() {
        return tagPROPVARIANT.pcyVal$VH;
    }
    public static MemoryAddress pcyVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pcyVal$VH.get(seg);
    }
    public static void pcyVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pcyVal$VH.set(seg, x);
    }
    public static MemoryAddress pcyVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pcyVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pcyVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pcyVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pdate$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pdate"));
    public static VarHandle pdate$VH() {
        return tagPROPVARIANT.pdate$VH;
    }
    public static MemoryAddress pdate$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pdate$VH.get(seg);
    }
    public static void pdate$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pdate$VH.set(seg, x);
    }
    public static MemoryAddress pdate$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pdate$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pdate$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pdate$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pbstrVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pbstrVal"));
    public static VarHandle pbstrVal$VH() {
        return tagPROPVARIANT.pbstrVal$VH;
    }
    public static MemoryAddress pbstrVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pbstrVal$VH.get(seg);
    }
    public static void pbstrVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pbstrVal$VH.set(seg, x);
    }
    public static MemoryAddress pbstrVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pbstrVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pbstrVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pbstrVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ppunkVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("ppunkVal"));
    public static VarHandle ppunkVal$VH() {
        return tagPROPVARIANT.ppunkVal$VH;
    }
    public static MemoryAddress ppunkVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.ppunkVal$VH.get(seg);
    }
    public static void ppunkVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.ppunkVal$VH.set(seg, x);
    }
    public static MemoryAddress ppunkVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.ppunkVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ppunkVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.ppunkVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ppdispVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("ppdispVal"));
    public static VarHandle ppdispVal$VH() {
        return tagPROPVARIANT.ppdispVal$VH;
    }
    public static MemoryAddress ppdispVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.ppdispVal$VH.get(seg);
    }
    public static void ppdispVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.ppdispVal$VH.set(seg, x);
    }
    public static MemoryAddress ppdispVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.ppdispVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ppdispVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.ppdispVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pparray$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pparray"));
    public static VarHandle pparray$VH() {
        return tagPROPVARIANT.pparray$VH;
    }
    public static MemoryAddress pparray$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pparray$VH.get(seg);
    }
    public static void pparray$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pparray$VH.set(seg, x);
    }
    public static MemoryAddress pparray$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pparray$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pparray$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pparray$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pvarVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pvarVal"));
    public static VarHandle pvarVal$VH() {
        return tagPROPVARIANT.pvarVal$VH;
    }
    public static MemoryAddress pvarVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pvarVal$VH.get(seg);
    }
    public static void pvarVal$set( MemorySegment seg, MemoryAddress x) {
        tagPROPVARIANT.pvarVal$VH.set(seg, x);
    }
    public static MemoryAddress pvarVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)tagPROPVARIANT.pvarVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pvarVal$set(MemorySegment seg, long index, MemoryAddress x) {
        tagPROPVARIANT.pvarVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment decVal$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


