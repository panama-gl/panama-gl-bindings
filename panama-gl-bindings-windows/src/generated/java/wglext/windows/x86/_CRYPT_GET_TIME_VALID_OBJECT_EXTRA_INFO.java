// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        Constants$root.C_LONG$LAYOUT.withName("iDeltaCrlIndicator"),
        Constants$root.C_POINTER$LAYOUT.withName("pftCacheResync"),
        Constants$root.C_POINTER$LAYOUT.withName("pLastSyncTime"),
        Constants$root.C_POINTER$LAYOUT.withName("pMaxAgeTime"),
        Constants$root.C_POINTER$LAYOUT.withName("pChainPara"),
        Constants$root.C_POINTER$LAYOUT.withName("pDeltaCrlIndicator")
    ).withName("_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO");
    public static MemoryLayout $LAYOUT() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.cbSize$VH;
    }
    public static int cbSize$get(MemorySegment seg) {
        return (int)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.cbSize$VH.get(seg);
    }
    public static void cbSize$set( MemorySegment seg, int x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iDeltaCrlIndicator$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iDeltaCrlIndicator"));
    public static VarHandle iDeltaCrlIndicator$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.iDeltaCrlIndicator$VH;
    }
    public static int iDeltaCrlIndicator$get(MemorySegment seg) {
        return (int)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.iDeltaCrlIndicator$VH.get(seg);
    }
    public static void iDeltaCrlIndicator$set( MemorySegment seg, int x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.iDeltaCrlIndicator$VH.set(seg, x);
    }
    public static int iDeltaCrlIndicator$get(MemorySegment seg, long index) {
        return (int)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.iDeltaCrlIndicator$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iDeltaCrlIndicator$set(MemorySegment seg, long index, int x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.iDeltaCrlIndicator$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pftCacheResync$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pftCacheResync"));
    public static VarHandle pftCacheResync$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pftCacheResync$VH;
    }
    public static MemoryAddress pftCacheResync$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pftCacheResync$VH.get(seg);
    }
    public static void pftCacheResync$set( MemorySegment seg, MemoryAddress x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pftCacheResync$VH.set(seg, x);
    }
    public static MemoryAddress pftCacheResync$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pftCacheResync$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pftCacheResync$set(MemorySegment seg, long index, MemoryAddress x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pftCacheResync$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pLastSyncTime$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pLastSyncTime"));
    public static VarHandle pLastSyncTime$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pLastSyncTime$VH;
    }
    public static MemoryAddress pLastSyncTime$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pLastSyncTime$VH.get(seg);
    }
    public static void pLastSyncTime$set( MemorySegment seg, MemoryAddress x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pLastSyncTime$VH.set(seg, x);
    }
    public static MemoryAddress pLastSyncTime$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pLastSyncTime$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pLastSyncTime$set(MemorySegment seg, long index, MemoryAddress x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pLastSyncTime$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pMaxAgeTime$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pMaxAgeTime"));
    public static VarHandle pMaxAgeTime$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pMaxAgeTime$VH;
    }
    public static MemoryAddress pMaxAgeTime$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pMaxAgeTime$VH.get(seg);
    }
    public static void pMaxAgeTime$set( MemorySegment seg, MemoryAddress x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pMaxAgeTime$VH.set(seg, x);
    }
    public static MemoryAddress pMaxAgeTime$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pMaxAgeTime$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pMaxAgeTime$set(MemorySegment seg, long index, MemoryAddress x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pMaxAgeTime$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pChainPara$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pChainPara"));
    public static VarHandle pChainPara$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pChainPara$VH;
    }
    public static MemoryAddress pChainPara$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pChainPara$VH.get(seg);
    }
    public static void pChainPara$set( MemorySegment seg, MemoryAddress x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pChainPara$VH.set(seg, x);
    }
    public static MemoryAddress pChainPara$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pChainPara$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pChainPara$set(MemorySegment seg, long index, MemoryAddress x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pChainPara$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pDeltaCrlIndicator$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pDeltaCrlIndicator"));
    public static VarHandle pDeltaCrlIndicator$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pDeltaCrlIndicator$VH;
    }
    public static MemoryAddress pDeltaCrlIndicator$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pDeltaCrlIndicator$VH.get(seg);
    }
    public static void pDeltaCrlIndicator$set( MemorySegment seg, MemoryAddress x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pDeltaCrlIndicator$VH.set(seg, x);
    }
    public static MemoryAddress pDeltaCrlIndicator$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pDeltaCrlIndicator$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pDeltaCrlIndicator$set(MemorySegment seg, long index, MemoryAddress x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pDeltaCrlIndicator$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


