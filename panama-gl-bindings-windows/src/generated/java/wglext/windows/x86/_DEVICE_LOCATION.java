// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _DEVICE_LOCATION {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Socket"),
        Constants$root.C_LONG$LAYOUT.withName("Slot"),
        Constants$root.C_LONG$LAYOUT.withName("Adapter"),
        Constants$root.C_LONG$LAYOUT.withName("Port"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("Channel"),
                Constants$root.C_LONG$LAYOUT.withName("Device")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("Target"),
                Constants$root.C_LONG$LAYOUT.withName("Lun")
            ).withName("$anon$1")
        ).withName("$anon$0")
    ).withName("_DEVICE_LOCATION");
    public static MemoryLayout $LAYOUT() {
        return _DEVICE_LOCATION.$struct$LAYOUT;
    }
    static final VarHandle Socket$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Socket"));
    public static VarHandle Socket$VH() {
        return _DEVICE_LOCATION.Socket$VH;
    }
    public static int Socket$get(MemorySegment seg) {
        return (int)_DEVICE_LOCATION.Socket$VH.get(seg);
    }
    public static void Socket$set( MemorySegment seg, int x) {
        _DEVICE_LOCATION.Socket$VH.set(seg, x);
    }
    public static int Socket$get(MemorySegment seg, long index) {
        return (int)_DEVICE_LOCATION.Socket$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Socket$set(MemorySegment seg, long index, int x) {
        _DEVICE_LOCATION.Socket$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Slot$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Slot"));
    public static VarHandle Slot$VH() {
        return _DEVICE_LOCATION.Slot$VH;
    }
    public static int Slot$get(MemorySegment seg) {
        return (int)_DEVICE_LOCATION.Slot$VH.get(seg);
    }
    public static void Slot$set( MemorySegment seg, int x) {
        _DEVICE_LOCATION.Slot$VH.set(seg, x);
    }
    public static int Slot$get(MemorySegment seg, long index) {
        return (int)_DEVICE_LOCATION.Slot$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Slot$set(MemorySegment seg, long index, int x) {
        _DEVICE_LOCATION.Slot$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Adapter$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Adapter"));
    public static VarHandle Adapter$VH() {
        return _DEVICE_LOCATION.Adapter$VH;
    }
    public static int Adapter$get(MemorySegment seg) {
        return (int)_DEVICE_LOCATION.Adapter$VH.get(seg);
    }
    public static void Adapter$set( MemorySegment seg, int x) {
        _DEVICE_LOCATION.Adapter$VH.set(seg, x);
    }
    public static int Adapter$get(MemorySegment seg, long index) {
        return (int)_DEVICE_LOCATION.Adapter$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Adapter$set(MemorySegment seg, long index, int x) {
        _DEVICE_LOCATION.Adapter$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Port$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Port"));
    public static VarHandle Port$VH() {
        return _DEVICE_LOCATION.Port$VH;
    }
    public static int Port$get(MemorySegment seg) {
        return (int)_DEVICE_LOCATION.Port$VH.get(seg);
    }
    public static void Port$set( MemorySegment seg, int x) {
        _DEVICE_LOCATION.Port$VH.set(seg, x);
    }
    public static int Port$get(MemorySegment seg, long index) {
        return (int)_DEVICE_LOCATION.Port$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Port$set(MemorySegment seg, long index, int x) {
        _DEVICE_LOCATION.Port$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Channel$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("Channel"));
    public static VarHandle Channel$VH() {
        return _DEVICE_LOCATION.Channel$VH;
    }
    public static int Channel$get(MemorySegment seg) {
        return (int)_DEVICE_LOCATION.Channel$VH.get(seg);
    }
    public static void Channel$set( MemorySegment seg, int x) {
        _DEVICE_LOCATION.Channel$VH.set(seg, x);
    }
    public static int Channel$get(MemorySegment seg, long index) {
        return (int)_DEVICE_LOCATION.Channel$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Channel$set(MemorySegment seg, long index, int x) {
        _DEVICE_LOCATION.Channel$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Device$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("Device"));
    public static VarHandle Device$VH() {
        return _DEVICE_LOCATION.Device$VH;
    }
    public static int Device$get(MemorySegment seg) {
        return (int)_DEVICE_LOCATION.Device$VH.get(seg);
    }
    public static void Device$set( MemorySegment seg, int x) {
        _DEVICE_LOCATION.Device$VH.set(seg, x);
    }
    public static int Device$get(MemorySegment seg, long index) {
        return (int)_DEVICE_LOCATION.Device$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Device$set(MemorySegment seg, long index, int x) {
        _DEVICE_LOCATION.Device$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Target$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$1"), MemoryLayout.PathElement.groupElement("Target"));
    public static VarHandle Target$VH() {
        return _DEVICE_LOCATION.Target$VH;
    }
    public static int Target$get(MemorySegment seg) {
        return (int)_DEVICE_LOCATION.Target$VH.get(seg);
    }
    public static void Target$set( MemorySegment seg, int x) {
        _DEVICE_LOCATION.Target$VH.set(seg, x);
    }
    public static int Target$get(MemorySegment seg, long index) {
        return (int)_DEVICE_LOCATION.Target$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Target$set(MemorySegment seg, long index, int x) {
        _DEVICE_LOCATION.Target$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Lun$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$1"), MemoryLayout.PathElement.groupElement("Lun"));
    public static VarHandle Lun$VH() {
        return _DEVICE_LOCATION.Lun$VH;
    }
    public static int Lun$get(MemorySegment seg) {
        return (int)_DEVICE_LOCATION.Lun$VH.get(seg);
    }
    public static void Lun$set( MemorySegment seg, int x) {
        _DEVICE_LOCATION.Lun$VH.set(seg, x);
    }
    public static int Lun$get(MemorySegment seg, long index) {
        return (int)_DEVICE_LOCATION.Lun$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Lun$set(MemorySegment seg, long index, int x) {
        _DEVICE_LOCATION.Lun$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


