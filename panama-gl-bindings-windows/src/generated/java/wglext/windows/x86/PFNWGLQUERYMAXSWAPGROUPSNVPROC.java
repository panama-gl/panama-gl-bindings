// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface PFNWGLQUERYMAXSWAPGROUPSNVPROC {

    int apply(java.lang.foreign.MemoryAddress hDC, java.lang.foreign.MemoryAddress maxGroups, java.lang.foreign.MemoryAddress maxBarriers);
    static MemorySegment allocate(PFNWGLQUERYMAXSWAPGROUPSNVPROC fi, MemorySession session) {
        return RuntimeHelper.upcallStub(PFNWGLQUERYMAXSWAPGROUPSNVPROC.class, fi, constants$1400.PFNWGLQUERYMAXSWAPGROUPSNVPROC$FUNC, session);
    }
    static PFNWGLQUERYMAXSWAPGROUPSNVPROC ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _hDC, java.lang.foreign.MemoryAddress _maxGroups, java.lang.foreign.MemoryAddress _maxBarriers) -> {
            try {
                return (int)constants$1400.PFNWGLQUERYMAXSWAPGROUPSNVPROC$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_hDC, (java.lang.foreign.Addressable)_maxGroups, (java.lang.foreign.Addressable)_maxBarriers);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


