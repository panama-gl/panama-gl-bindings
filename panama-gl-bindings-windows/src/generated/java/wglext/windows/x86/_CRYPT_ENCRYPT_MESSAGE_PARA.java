// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _CRYPT_ENCRYPT_MESSAGE_PARA {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        Constants$root.C_LONG$LAYOUT.withName("dwMsgEncodingType"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("hCryptProv"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("pszObjId"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("cbData"),
                MemoryLayout.paddingLayout(32),
                Constants$root.C_POINTER$LAYOUT.withName("pbData")
            ).withName("Parameters")
        ).withName("ContentEncryptionAlgorithm"),
        Constants$root.C_POINTER$LAYOUT.withName("pvEncryptionAuxInfo"),
        Constants$root.C_LONG$LAYOUT.withName("dwFlags"),
        Constants$root.C_LONG$LAYOUT.withName("dwInnerContentType")
    ).withName("_CRYPT_ENCRYPT_MESSAGE_PARA");
    public static MemoryLayout $LAYOUT() {
        return _CRYPT_ENCRYPT_MESSAGE_PARA.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return _CRYPT_ENCRYPT_MESSAGE_PARA.cbSize$VH;
    }
    public static int cbSize$get(MemorySegment seg) {
        return (int)_CRYPT_ENCRYPT_MESSAGE_PARA.cbSize$VH.get(seg);
    }
    public static void cbSize$set( MemorySegment seg, int x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)_CRYPT_ENCRYPT_MESSAGE_PARA.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwMsgEncodingType$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwMsgEncodingType"));
    public static VarHandle dwMsgEncodingType$VH() {
        return _CRYPT_ENCRYPT_MESSAGE_PARA.dwMsgEncodingType$VH;
    }
    public static int dwMsgEncodingType$get(MemorySegment seg) {
        return (int)_CRYPT_ENCRYPT_MESSAGE_PARA.dwMsgEncodingType$VH.get(seg);
    }
    public static void dwMsgEncodingType$set( MemorySegment seg, int x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.dwMsgEncodingType$VH.set(seg, x);
    }
    public static int dwMsgEncodingType$get(MemorySegment seg, long index) {
        return (int)_CRYPT_ENCRYPT_MESSAGE_PARA.dwMsgEncodingType$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMsgEncodingType$set(MemorySegment seg, long index, int x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.dwMsgEncodingType$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hCryptProv$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hCryptProv"));
    public static VarHandle hCryptProv$VH() {
        return _CRYPT_ENCRYPT_MESSAGE_PARA.hCryptProv$VH;
    }
    public static long hCryptProv$get(MemorySegment seg) {
        return (long)_CRYPT_ENCRYPT_MESSAGE_PARA.hCryptProv$VH.get(seg);
    }
    public static void hCryptProv$set( MemorySegment seg, long x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.hCryptProv$VH.set(seg, x);
    }
    public static long hCryptProv$get(MemorySegment seg, long index) {
        return (long)_CRYPT_ENCRYPT_MESSAGE_PARA.hCryptProv$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hCryptProv$set(MemorySegment seg, long index, long x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.hCryptProv$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ContentEncryptionAlgorithm$slice(MemorySegment seg) {
        return seg.asSlice(16, 24);
    }
    static final VarHandle pvEncryptionAuxInfo$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pvEncryptionAuxInfo"));
    public static VarHandle pvEncryptionAuxInfo$VH() {
        return _CRYPT_ENCRYPT_MESSAGE_PARA.pvEncryptionAuxInfo$VH;
    }
    public static MemoryAddress pvEncryptionAuxInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_ENCRYPT_MESSAGE_PARA.pvEncryptionAuxInfo$VH.get(seg);
    }
    public static void pvEncryptionAuxInfo$set( MemorySegment seg, MemoryAddress x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.pvEncryptionAuxInfo$VH.set(seg, x);
    }
    public static MemoryAddress pvEncryptionAuxInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CRYPT_ENCRYPT_MESSAGE_PARA.pvEncryptionAuxInfo$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pvEncryptionAuxInfo$set(MemorySegment seg, long index, MemoryAddress x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.pvEncryptionAuxInfo$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwFlags"));
    public static VarHandle dwFlags$VH() {
        return _CRYPT_ENCRYPT_MESSAGE_PARA.dwFlags$VH;
    }
    public static int dwFlags$get(MemorySegment seg) {
        return (int)_CRYPT_ENCRYPT_MESSAGE_PARA.dwFlags$VH.get(seg);
    }
    public static void dwFlags$set( MemorySegment seg, int x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.dwFlags$VH.set(seg, x);
    }
    public static int dwFlags$get(MemorySegment seg, long index) {
        return (int)_CRYPT_ENCRYPT_MESSAGE_PARA.dwFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFlags$set(MemorySegment seg, long index, int x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.dwFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwInnerContentType$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwInnerContentType"));
    public static VarHandle dwInnerContentType$VH() {
        return _CRYPT_ENCRYPT_MESSAGE_PARA.dwInnerContentType$VH;
    }
    public static int dwInnerContentType$get(MemorySegment seg) {
        return (int)_CRYPT_ENCRYPT_MESSAGE_PARA.dwInnerContentType$VH.get(seg);
    }
    public static void dwInnerContentType$set( MemorySegment seg, int x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.dwInnerContentType$VH.set(seg, x);
    }
    public static int dwInnerContentType$get(MemorySegment seg, long index) {
        return (int)_CRYPT_ENCRYPT_MESSAGE_PARA.dwInnerContentType$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwInnerContentType$set(MemorySegment seg, long index, int x) {
        _CRYPT_ENCRYPT_MESSAGE_PARA.dwInnerContentType$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


