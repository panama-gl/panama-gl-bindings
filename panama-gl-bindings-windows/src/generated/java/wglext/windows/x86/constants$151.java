// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$151 {

    static final FunctionDescriptor ContinueDebugEvent$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle ContinueDebugEvent$MH = RuntimeHelper.downcallHandle(
        "ContinueDebugEvent",
        constants$151.ContinueDebugEvent$FUNC
    );
    static final FunctionDescriptor WaitForDebugEvent$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WaitForDebugEvent$MH = RuntimeHelper.downcallHandle(
        "WaitForDebugEvent",
        constants$151.WaitForDebugEvent$FUNC
    );
    static final FunctionDescriptor DebugActiveProcess$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle DebugActiveProcess$MH = RuntimeHelper.downcallHandle(
        "DebugActiveProcess",
        constants$151.DebugActiveProcess$FUNC
    );
    static final FunctionDescriptor DebugActiveProcessStop$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle DebugActiveProcessStop$MH = RuntimeHelper.downcallHandle(
        "DebugActiveProcessStop",
        constants$151.DebugActiveProcessStop$FUNC
    );
    static final FunctionDescriptor CheckRemoteDebuggerPresent$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CheckRemoteDebuggerPresent$MH = RuntimeHelper.downcallHandle(
        "CheckRemoteDebuggerPresent",
        constants$151.CheckRemoteDebuggerPresent$FUNC
    );
    static final FunctionDescriptor WaitForDebugEventEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WaitForDebugEventEx$MH = RuntimeHelper.downcallHandle(
        "WaitForDebugEventEx",
        constants$151.WaitForDebugEventEx$FUNC
    );
}


