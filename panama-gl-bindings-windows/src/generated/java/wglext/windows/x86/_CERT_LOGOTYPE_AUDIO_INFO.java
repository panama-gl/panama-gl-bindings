// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _CERT_LOGOTYPE_AUDIO_INFO {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("dwFileSize"),
        Constants$root.C_LONG$LAYOUT.withName("dwPlayTime"),
        Constants$root.C_LONG$LAYOUT.withName("dwChannels"),
        Constants$root.C_LONG$LAYOUT.withName("dwSampleRate"),
        Constants$root.C_POINTER$LAYOUT.withName("pwszLanguage")
    ).withName("_CERT_LOGOTYPE_AUDIO_INFO");
    public static MemoryLayout $LAYOUT() {
        return _CERT_LOGOTYPE_AUDIO_INFO.$struct$LAYOUT;
    }
    static final VarHandle dwFileSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwFileSize"));
    public static VarHandle dwFileSize$VH() {
        return _CERT_LOGOTYPE_AUDIO_INFO.dwFileSize$VH;
    }
    public static int dwFileSize$get(MemorySegment seg) {
        return (int)_CERT_LOGOTYPE_AUDIO_INFO.dwFileSize$VH.get(seg);
    }
    public static void dwFileSize$set( MemorySegment seg, int x) {
        _CERT_LOGOTYPE_AUDIO_INFO.dwFileSize$VH.set(seg, x);
    }
    public static int dwFileSize$get(MemorySegment seg, long index) {
        return (int)_CERT_LOGOTYPE_AUDIO_INFO.dwFileSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileSize$set(MemorySegment seg, long index, int x) {
        _CERT_LOGOTYPE_AUDIO_INFO.dwFileSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwPlayTime$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwPlayTime"));
    public static VarHandle dwPlayTime$VH() {
        return _CERT_LOGOTYPE_AUDIO_INFO.dwPlayTime$VH;
    }
    public static int dwPlayTime$get(MemorySegment seg) {
        return (int)_CERT_LOGOTYPE_AUDIO_INFO.dwPlayTime$VH.get(seg);
    }
    public static void dwPlayTime$set( MemorySegment seg, int x) {
        _CERT_LOGOTYPE_AUDIO_INFO.dwPlayTime$VH.set(seg, x);
    }
    public static int dwPlayTime$get(MemorySegment seg, long index) {
        return (int)_CERT_LOGOTYPE_AUDIO_INFO.dwPlayTime$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPlayTime$set(MemorySegment seg, long index, int x) {
        _CERT_LOGOTYPE_AUDIO_INFO.dwPlayTime$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwChannels$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwChannels"));
    public static VarHandle dwChannels$VH() {
        return _CERT_LOGOTYPE_AUDIO_INFO.dwChannels$VH;
    }
    public static int dwChannels$get(MemorySegment seg) {
        return (int)_CERT_LOGOTYPE_AUDIO_INFO.dwChannels$VH.get(seg);
    }
    public static void dwChannels$set( MemorySegment seg, int x) {
        _CERT_LOGOTYPE_AUDIO_INFO.dwChannels$VH.set(seg, x);
    }
    public static int dwChannels$get(MemorySegment seg, long index) {
        return (int)_CERT_LOGOTYPE_AUDIO_INFO.dwChannels$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwChannels$set(MemorySegment seg, long index, int x) {
        _CERT_LOGOTYPE_AUDIO_INFO.dwChannels$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwSampleRate$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwSampleRate"));
    public static VarHandle dwSampleRate$VH() {
        return _CERT_LOGOTYPE_AUDIO_INFO.dwSampleRate$VH;
    }
    public static int dwSampleRate$get(MemorySegment seg) {
        return (int)_CERT_LOGOTYPE_AUDIO_INFO.dwSampleRate$VH.get(seg);
    }
    public static void dwSampleRate$set( MemorySegment seg, int x) {
        _CERT_LOGOTYPE_AUDIO_INFO.dwSampleRate$VH.set(seg, x);
    }
    public static int dwSampleRate$get(MemorySegment seg, long index) {
        return (int)_CERT_LOGOTYPE_AUDIO_INFO.dwSampleRate$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwSampleRate$set(MemorySegment seg, long index, int x) {
        _CERT_LOGOTYPE_AUDIO_INFO.dwSampleRate$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pwszLanguage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pwszLanguage"));
    public static VarHandle pwszLanguage$VH() {
        return _CERT_LOGOTYPE_AUDIO_INFO.pwszLanguage$VH;
    }
    public static MemoryAddress pwszLanguage$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_CERT_LOGOTYPE_AUDIO_INFO.pwszLanguage$VH.get(seg);
    }
    public static void pwszLanguage$set( MemorySegment seg, MemoryAddress x) {
        _CERT_LOGOTYPE_AUDIO_INFO.pwszLanguage$VH.set(seg, x);
    }
    public static MemoryAddress pwszLanguage$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_CERT_LOGOTYPE_AUDIO_INFO.pwszLanguage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszLanguage$set(MemorySegment seg, long index, MemoryAddress x) {
        _CERT_LOGOTYPE_AUDIO_INFO.pwszLanguage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


