// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _SHFILEINFOA {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("hIcon"),
        Constants$root.C_LONG$LAYOUT.withName("iIcon"),
        Constants$root.C_LONG$LAYOUT.withName("dwAttributes"),
        MemoryLayout.sequenceLayout(260, Constants$root.C_CHAR$LAYOUT).withName("szDisplayName"),
        MemoryLayout.sequenceLayout(80, Constants$root.C_CHAR$LAYOUT).withName("szTypeName"),
        MemoryLayout.paddingLayout(32)
    ).withName("_SHFILEINFOA");
    public static MemoryLayout $LAYOUT() {
        return _SHFILEINFOA.$struct$LAYOUT;
    }
    static final VarHandle hIcon$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hIcon"));
    public static VarHandle hIcon$VH() {
        return _SHFILEINFOA.hIcon$VH;
    }
    public static MemoryAddress hIcon$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)_SHFILEINFOA.hIcon$VH.get(seg);
    }
    public static void hIcon$set( MemorySegment seg, MemoryAddress x) {
        _SHFILEINFOA.hIcon$VH.set(seg, x);
    }
    public static MemoryAddress hIcon$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)_SHFILEINFOA.hIcon$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hIcon$set(MemorySegment seg, long index, MemoryAddress x) {
        _SHFILEINFOA.hIcon$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iIcon$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iIcon"));
    public static VarHandle iIcon$VH() {
        return _SHFILEINFOA.iIcon$VH;
    }
    public static int iIcon$get(MemorySegment seg) {
        return (int)_SHFILEINFOA.iIcon$VH.get(seg);
    }
    public static void iIcon$set( MemorySegment seg, int x) {
        _SHFILEINFOA.iIcon$VH.set(seg, x);
    }
    public static int iIcon$get(MemorySegment seg, long index) {
        return (int)_SHFILEINFOA.iIcon$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iIcon$set(MemorySegment seg, long index, int x) {
        _SHFILEINFOA.iIcon$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwAttributes$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwAttributes"));
    public static VarHandle dwAttributes$VH() {
        return _SHFILEINFOA.dwAttributes$VH;
    }
    public static int dwAttributes$get(MemorySegment seg) {
        return (int)_SHFILEINFOA.dwAttributes$VH.get(seg);
    }
    public static void dwAttributes$set( MemorySegment seg, int x) {
        _SHFILEINFOA.dwAttributes$VH.set(seg, x);
    }
    public static int dwAttributes$get(MemorySegment seg, long index) {
        return (int)_SHFILEINFOA.dwAttributes$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwAttributes$set(MemorySegment seg, long index, int x) {
        _SHFILEINFOA.dwAttributes$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment szDisplayName$slice(MemorySegment seg) {
        return seg.asSlice(16, 260);
    }
    public static MemorySegment szTypeName$slice(MemorySegment seg) {
        return seg.asSlice(276, 80);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


