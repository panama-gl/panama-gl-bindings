// Generated by jextract

package wglext.windows.x86;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$182 {

    static final FunctionDescriptor GetStartupInfoW$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetStartupInfoW$MH = RuntimeHelper.downcallHandle(
        "GetStartupInfoW",
        constants$182.GetStartupInfoW$FUNC
    );
    static final FunctionDescriptor CreateProcessAsUserW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CreateProcessAsUserW$MH = RuntimeHelper.downcallHandle(
        "CreateProcessAsUserW",
        constants$182.CreateProcessAsUserW$FUNC
    );
    static final FunctionDescriptor GetCurrentProcessToken$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle GetCurrentProcessToken$MH = RuntimeHelper.downcallHandle(
        "GetCurrentProcessToken",
        constants$182.GetCurrentProcessToken$FUNC
    );
    static final FunctionDescriptor GetCurrentThreadToken$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle GetCurrentThreadToken$MH = RuntimeHelper.downcallHandle(
        "GetCurrentThreadToken",
        constants$182.GetCurrentThreadToken$FUNC
    );
    static final FunctionDescriptor GetCurrentThreadEffectiveToken$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle GetCurrentThreadEffectiveToken$MH = RuntimeHelper.downcallHandle(
        "GetCurrentThreadEffectiveToken",
        constants$182.GetCurrentThreadEffectiveToken$FUNC
    );
    static final FunctionDescriptor SetThreadToken$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetThreadToken$MH = RuntimeHelper.downcallHandle(
        "SetThreadToken",
        constants$182.SetThreadToken$FUNC
    );
}


